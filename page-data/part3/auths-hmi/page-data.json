{"componentChunkName":"component---src-templates-mdx-pages-js-content-file-path-src-mdx-pages-part-3-auths-hmi-fr-mdx","path":"/part3/auths-hmi/","result":{"data":{"mdx":{"id":"e2938560-b8d6-577f-a4e6-d382b5864a4f","body":"\r\n# c) S√©curisation d'un frontend\r\n\r\n<InternalPageMenu>\r\n  <PathViewer>\r\n    <PathViewerItem to=\"/\"> web2course </PathViewerItem>\r\n    <PathViewerItem to=\"/part3\"> Partie 3 </PathViewerItem>\r\n    <PathViewerItem selected> c) Sessions & JWT </PathViewerItem>\r\n  </PathViewer>\r\n  <InternalPageMenuItem> O√π sauvegarder de l'info dans un browser ? </InternalPageMenuItem>\r\n  <InternalPageMenuItem> Persistance de donn√©es de session via le web storage </InternalPageMenuItem>\r\n  <InternalPageMenuItem> Exercice 3.3 : Persistence d'un th√®me  </InternalPageMenuItem>\r\n  <InternalPageMenuItem> Authentification d'un utilisateur via une IHM & JWT </InternalPageMenuItem> \r\n  <InternalPageMenuItem> Sauvegarde des donn√©es de session </InternalPageMenuItem>\r\n  <InternalPageMenuItem> D√©connexion d'un utilisateur </InternalPageMenuItem>\r\n  <InternalPageMenuItem> Autorisation de l'appel √† une op√©ration prot√©g√©e </InternalPageMenuItem>\r\n  <InternalPageMenuItem> Exercice 3.4 : Authentification et appel d'op√©rations prot√©g√©es par JWT </InternalPageMenuItem>\r\n  <InternalPageMenuItem> Exercice 3.4b : Modification de ressources & JWT </InternalPageMenuItem>\r\n  <InternalPageMenuItem> üç¨ Persistance de donn√©es de session via des cookies </InternalPageMenuItem>\r\n</InternalPageMenu>\r\n\r\n# <InternalPageTitle> O√π sauvegarder de l'info dans un browser ? </InternalPageTitle>\r\n\r\nNous avons vu qu'une des exigences associ√©es √† la cr√©ation d'une application selon l'architecture REST, c'est qu'elle soit **stateless** : l'API ne peut pas garder l'√©tat du client, sa session, c√¥t√© serveur.\r\n\r\nC'est donc au client de sauvegarder ses donn√©es de session.\r\n\r\nMais o√π pouvons nous sauvegarder des donn√©es de mani√®re persistante c√¥t√© client ?\r\n\r\nIl existe deux fa√ßons principales de sauvegarder de l'info dans un browser :\r\n- le **web storage** ; \r\n- les **cookies**.\r\n\r\nDans le cadre de ce cours, nous allons principalement voir comment sauvegarder de l'info √† l'aide du **web storage**. Dans la partie du cours sur la gestion de l'authentification et l'autorisation d'utilisateurs, vous pourrez optionnellement voir comment les cookies peuvent √™tre utilis√©s pour sauvegarder des donn√©es de session c√¥t√© client.\r\n\r\nNB : le browser met √† disposition d'autres API un peu moins connues pour sauvegarder des infos. Nous ne les verrons pas dans le cadre de ce cours, mais il reste n√©anmoins int√©ressant de lire tr√®s rapidement de quoi il s'agit :\r\n- **IndexedDB API** : permet de sauvegarder c√¥t√© client de grandes quantit√©s d'infos structur√©es, incluant des fichiers ; c'est une base de donn√©es orient√©e objets en JS qui permet les transactions.\r\n- **Cache API** : permet d'enregistrer et retrouver des requ√™tes et leur r√©ponses. Bien qu'√† la base cr√©√© pour pouvoir fournir des r√©ponses plus rapides √† certaines requ√™tes, cette API peut aussi √™tre utilis√©e comme m√©canisme g√©n√©ral de stockage.\r\n\r\n# <InternalPageTitle> Persistance de donn√©es de session via le web storage </InternalPageTitle>\r\n\r\n## Introduction\r\nLe **Web Storage API** fournit un m√©canisme permettant aux browser d'enregistrer des paires **cl√© / valeur** d'une mani√®re plus intuitive que l'utilisation de cookies.\r\n\r\nIl existe deux m√©canismes au sein du web storage :\r\n- **`sessionStorage`** :\r\n    - offre un espace de stockage s√©par√© pour chaque origine pour la dur√©e de la session d'une page, tant que le browser est ouvert.\r\n    - les cl√©s / valeurs y sont enregistr√©es sous forme de string uniquement ;\r\n    - met √† disposition un espace de stockage plus grand qu'un cookie, ~5MB maximum par origine ;\r\n- **`localStorage`** : \r\n    - offre aussi un espace de stockage s√©par√© pour chaque origine, mais les donn√©es persistent quand le browser est ferm√© et rouvert ;\r\n    - est un espace de stockage plus grand qu'un cookie, limit√© √† ~10MB en cas de crash/restart du browser.\r\n\r\nLes principales m√©thodes offertes par **`sessionStorage`** et **`localStorage`** sont les m√™mes. Voici quelques exemples de codes par m√©thode.\r\n\r\n## `setItem()`\r\nCette m√©thode permet d'enregistrer, pour une cl√© donn√©e, la valeur associ√©e :\r\n\r\n```ts numbered highlighting=\"4-5\"\r\nconst¬†storeName¬†=¬†'user';\r\n\r\nconst¬†setUserSessionData¬†=¬†(user)¬†=>¬†{\r\n¬†¬†const¬†storageValue¬†=¬†JSON.stringify(user);\r\n¬†¬†localStorage.setItem(storeName,¬†storageValue);\r\n};\r\n```\r\n\r\nPour enregistrer un objet JS sous forme de string, il suffit de le s√©rialiser √† l'aide de la m√©thode `JSON.stringify()`.\r\n\r\n## `getItem()`\r\nCette m√©thode permet d'obtenir la valeur associ√©e √† la cl√© donn√©e en argument :\r\n\r\n```ts numbered highlighting=\"4,6\"\r\nconst storeName =¬†'user';\r\n\r\nconst¬†getUserSessionData¬†=¬†()¬†=>¬†{\r\n¬†¬†const¬†retrievedUser¬†=¬†localStorage.getItem(storeName);\r\n¬†¬†if¬†(!retrievedUser)¬†return;\r\n¬†¬†return¬†JSON.parse(retrievedUser);\r\n};\r\n```\r\n\r\nPour cet exemple, comme la valeur a √©t√© s√©rialis√©e, nous pouvons r√©cup√©rer l'objet gr√¢ce √† la m√©thode **`JSON.parse()`**.\r\n\r\n## `removeITem()`\r\nCette m√©thode permet d'effacer une cl√© / valeur :\r\n\r\n```ts numbered highlighting=\"4\"\r\nconst storeName =¬†'user';\r\n\r\nconst¬†removeSessionData¬†=¬†()¬†=>¬†{\r\n¬†¬†localStorage.removeItem(storeName);\r\n};\r\n```\r\n\r\n## `clear()`\r\nCette m√©thode permet d'effacer tout l'espace de stockage pour une origine donn√©e.\r\n\r\nCette m√©thode est tr√®s utile lorsque l'on souhaite effacer toute la session d'un utilisateur, notamment lors du logout d'un utilisateur.\r\n\r\n\r\n# <InternalPageTitle> Exercice 3.3 : Persistence d'un th√®me </InternalPageTitle>\r\n\r\nVeuillez partir d'une copie de l'exercice (`/exercises/2.15b`) pour cr√©er un nouveau projet nomm√© `exercises/3.3-4` afin de continuer l'application `myMovies`.\r\n\r\nVous devez ajouter un moyen de switcher d'un th√®me \"light\" ou \"dark\" au sein de votre application.\r\n\r\nPar exemple, vous pouvez le faire via un bouton dans le header ou le footer permettant de basculer d'un th√®me √† l'autre.\r\n\r\nL'effet du th√®me doit √™tre visible seulement sur le footer et le header... Il n'est pas n√©cessaire de faire un th√®me \"dark\" complet sur la page. Veuillez donc changer les couleurs des backgrounds du header & du footer et de certains de leurs textes en fonction du th√®me.\r\n\r\nVous devez sauvegarder le th√®me s√©lectionn√© par l'utilisateur comme donn√©e de session persistante. Ainsi, vous allez sauvegarder l'information du th√®me dans le `localStorage`.\r\n\r\nAu red√©marrage du browser, ou lors du refresh du frontend, l'application doit toujours afficher ses √©crans selon le dernier th√®me s√©lectionn√©.\r\n\r\nUne fois tout fonctionnel, veuillez faire un commit avec le message suivant : **`new:ex3.3`**.\r\n\r\n\r\n# <InternalPageTitle> Authentification d'un utilisateur via une IHM & JWT </InternalPageTitle>\r\n\r\nPour authentifier un utilisateur via une IHM, il suffit de faire une requ√™te √† une RESTful API.\r\n\r\nG√©n√©ralement, l'utilisateur devra d'abord cr√©er son compte. Il utilisera un formulaire demandant au minimum un identifiant (username, adresse e-mail ou autres) et un password.  \r\nDans le cadre d'une SPA, l'IHM fera appel √† une op√©ration de type `register` lorsque l'utilisateur soumet le formulaire.\r\n\r\nPar la suite, lorsque le compte de l'utilisateur existe, l'IHM fera appel √† une op√©ration de type `login` lorsque l'utilisateur tentera de se connecter √† l'aide d'un formulaire.\r\n\r\nDans les deux cas, `register` ou `login`, le d√©veloppeur devra conna√Ætre les op√©rations mises √† disposition par l'API. \r\n\r\nDans le cadre du site de la pizzeria, nous savons que l'API met √† disposition ces deux op√©rations :\r\n\r\n| URI | M√©thode HTTP | Op√©ration |\r\n|---|---|---|\r\n| **`auths/login`** | **POST** | V√©rifier les credentials d'une ressource de type \"users\" et renvoyer le username et un token JWT si les credentials sont OK |\r\n| **`auths/register`** | **POST** | Cr√©er une ressource de type \"users\" et renvoyer le username et un token JWT |\r\n\r\n<br/>\r\n\r\nPour ce tutoriel, veuillez cr√©er une copie du tutoriel `fetch-proxy`, si n√©cessaire voici le code du tutoriel [fetch-proxy](https://github.com/e-vinci/ts-demos/tree/main/front/fetch-proxy), et l'appeler `session-jwt`. Changez le nom du projet dans `package.json`.\r\n\r\nVeuillez d√©marrer la version [auths](https://github.com/e-vinci/ts-demos/tree/main/back/api/auths) de l'API de la pizzeria.\r\n\r\nPour notre tutoriel, nous avons besoin de cr√©er deux nouvelles pages : \r\n- `RegisterPage` qui offrira un formulaire pour cr√©er un compte utilisateur ; nous consid√©rons qu'un utilisateur qui vient d'√™tre cr√©√© est connect√© (il ne doit donc pas se loguer).\r\n- `LoginPage` qui offrira un formulaire pour se connecter √† son compte utilisateur.\r\n\r\nNous allons commencer par `RegisterPage`.  \r\n\r\nüí≠ Tr√®s souvent, nous allons devoir penser si c'est √† `RegisterPage` de faire le fetch des donn√©es, ou si ce fetch doit √™tre fait ailleurs.\r\n\r\nS'il n'y a pas d'√©tat associ√© √† une op√©ration de \"register\", alors tout serait OK de faire le fetch dans `RegisterPage`. N√©anmoins, si un utilisateur est connect√©, il va falloir mettre  jour la `Navbar`... et qui dit mise √† jour de la UI, dit gestion de l'√©tat...  \r\nAinsi, nous nous rendons compte qu'il est important de d√©finir une variable d'√©tat qui correspondra √† l'utilisateur connect√©, et qui nous permettra notamment d'afficher le nom de l'utilisateur connect√©, d'afficher dynamiquement la `Navbar` (quand on est connect√©, les √©l√©ments de la barre permettant de cr√©er un compte ou de se connecter doivent dispara√Ætre...).\r\n\r\nNotons que nous souhaitons appliquer le m√™me format √† tous les formulaires de chacune des pages. D√®s lors, le plus direct est de renommer `AddPizzaPage.css` en `index.css`. Nous allons utiliser `index.css` tant dans `AddPizzaPage` que `RegisterPage` (et plus tard `LoginPage`).\r\n\r\nAinsi, nous allons d√©finir le fetch du register au sein de `App` en y ajoutant la nouvelle fonction `registerUser`, en mettant √† jour le contexte, et en cr√©ant une nouvelle variable d'√©tat `authenticatedUser` (associ√© √† un nouveau type `MaybeAuthenticatedUser` construit sur `AuthenticatedUser`) :\r\n```tsx numbered highlighting=\"5-30,41\"\r\n// code existant\r\nconst [authenticatedUser, setAuthenticatedUser] =\r\n    useState<MaybeAuthenticatedUser>(undefined);\r\n// ...\r\nconst registerUser = async (newUser: User) => {\r\n    try {\r\n      const options = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newUser),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const response = await fetch(\"/api/auths/register\", options);\r\n\r\n      if (!response.ok)\r\n        throw new Error(\r\n          `fetch error : ${response.status} : ${response.statusText}`\r\n        );\r\n\r\n      const createdUser: AuthenticatedUser = await response.json();\r\n\r\n      setAuthenticatedUser(createdUser);\r\n      console.log(\"createdUser: \", createdUser);\r\n    } catch (err) {\r\n      console.error(\"registerUser::error: \", err);\r\n      throw err;\r\n    }\r\n  }\r\n  // reste du code\r\n\r\n  const fullPizzaContext: PizzeriaContext = {\r\n    addPizza,\r\n    pizzas,\r\n    setPizzas,\r\n    actionToBePerformed,\r\n    setActionToBePerformed,\r\n    clearActionToBePerformed,\r\n    drinks,\r\n    registerUser,\r\n  };\r\n```\r\n\r\nComme le contexte a √©t√© mis √† jour, nous devons mettre √† jour le type associ√© `PizzeriaContext`, ainsi que cr√©er :\r\n- un nouveau type `User` \r\n- un nouveau type `AuthenticatedUser`\r\n- un nouveau type `MaybeAuthenticatedUser` (qui est un `AuthenticatedUser` ou `undefined).\r\n\r\nPour cela, veuillez mettre √† jour `/src/types.ts` :\r\n```ts numbered highlighting=\"9,17-20,22,30-31\"\r\ninterface PizzeriaContext {\r\n  pizzas: Pizza[];\r\n  setPizzas: (pizzas: Pizza[]) => void;\r\n  actionToBePerformed: boolean;\r\n  setActionToBePerformed: (actionToBePerformed: boolean) => void;\r\n  clearActionToBePerformed: () => void;\r\n  drinks: Drink[];\r\n  addPizza: (newPizza: NewPizza) => Promise<void>;\r\n  registerUser: (newUser: User) => Promise<void>;\r\n}\r\n\r\ninterface User {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\ninterface AuthenticatedUser {\r\n  username: string;\r\n  token: string;\r\n}\r\n\r\ntype MaybeAuthenticatedUser = AuthenticatedUser | undefined;\r\n\r\nexport type {\r\n  Pizza,\r\n  NewPizza,\r\n  Drink,\r\n  PizzeriaContext,\r\n  User,\r\n  AuthenticatedUser,\r\n  MaybeAuthenticatedUser,\r\n};\r\n```\r\n\r\nEt voici le code de la nouvelle `RegisterPage` (veuillez la cr√©er) qui fait appel au contexte pour r√©cup√©rer la fonction `registerUser` :\r\n```tsx numbered\r\nimport { useState, SyntheticEvent } from \"react\";\r\nimport \"./index.css\";\r\nimport { useNavigate, useOutletContext } from \"react-router-dom\";\r\nimport { PizzeriaContext } from \"../../types\";\r\n\r\nconst RegisterPage = () => {\r\n  const { registerUser }: PizzeriaContext = useOutletContext();\r\n\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      await registerUser({ username, password });\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.error(\"RegisterPage::error: \", err);\r\n    }\r\n  };\r\n\r\n  const handleUsernameInputChange = (e: SyntheticEvent) => {\r\n    const input = e.target as HTMLInputElement;\r\n    setUsername(input.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e: SyntheticEvent) => {\r\n    const input = e.target as HTMLInputElement;\r\n    setPassword(input.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Ajoutez un utilisateur</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          value={username}\r\n          type=\"text\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          onChange={handleUsernameInputChange}\r\n          required\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          value={password}\r\n          type=\"text\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          onChange={handlePasswordChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Cr√©er le compte</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n```\r\n\r\nMaintenant nous devons mettre √† jour la configuration de notre router pour offrir la `RegisterPage` : pour ce faire, veuillez mettre √† jour `/src/main.tsx` :\r\n```tsx numbered highlighting=\"14-17\"\r\nconst router = createBrowserRouter([\r\n  {\r\n    path: \"/\",\r\n    element: <App />,\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        element: <HomePage />,\r\n      },\r\n      {\r\n        path: \"add-pizza\",\r\n        element: <AddPizzaPage />,\r\n      },\r\n      {\r\n        path: \"register\",\r\n        element: <RegisterPage />,\r\n      },\r\n    ],\r\n  },\r\n]);\r\n```\r\n\r\nIl faut aussi mettre √† jour la `Navbar` pour offrir un lien vers la `RegisterPage` et avoir un affichage dynamique des √©l√©ments de navigation en fonction que les utilisateurs sont connect√©s ou non : \r\n```tsx numbered highlighting=\"1-3,5,8,15,17-23\"\r\ninterface NavBarProps {\r\n  authenticatedUser: MaybeAuthenticatedUser;\r\n}\r\n\r\nconst NavBar = ({authenticatedUser} : NavBarProps) => {\r\n  const navigate = useNavigate();\r\n\r\n  if(authenticatedUser) {\r\n    return (\r\n      <nav>\r\n        <button onClick={() => navigate(\"/\")}>Home</button>\r\n        <button onClick={() => navigate(\"/add-pizza\")}>Ajouter une pizza</button>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <button onClick={() => navigate(\"/\")}>Home</button>\r\n      <button onClick={() => navigate(\"/register\")}>Cr√©er un utilisateur</button>\r\n      <button onClick={() => navigate(\"/login\")}>Se connecter</button>\r\n    </nav>\r\n  );\r\n};\r\n```\r\n\r\nIci nous avons ajout√© un param√®tre qui contiendra, l'√©ventuel `authenticatedUser` si l'utilisateur vient de cr√©er son compte (ou s'il s'est logu√©, mais nous verrons √ßa plus tard).\r\n\r\nNous mettons donc √† jour le `return` de `App` afin de passer cette variable `authenticatedUser` √† la `Navbar` : \r\n```tsx numbered highlighting=\"9\"\r\nreturn (\r\n    <div className=\"page\">\r\n      <Header\r\n        title=\"We love Pizza\"\r\n        version={0 + 1}\r\n        handleHeaderClick={handleHeaderClick}\r\n      />\r\n      <main>\r\n        <NavBar authenticatedUser={authenticatedUser} />\r\n        <Outlet context={fullPizzaContext} />\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n```\r\n\r\nVeuillez ex√©cuter le frontend (ainsi que l'API `auths`) et vous assurer que l'utilisateur que vous tentez de cr√©er est bien cr√©√© par votre API. \r\n\r\nVeuillez utiliser le formulaire de cr√©ation de compte et v√©rifier que cela fonctionne. Une fois un nouveau compte cr√©√©, votre `Navbar` ne devrait plus afficher `Cr√©er un utilisateur`.\r\n\r\nNous allons maintenant apporter des modifications quasi identiques pour g√©rer la `LoginPage`.\r\n\r\nCommen√ßons par cr√©er la fonction `loginUser` dans `App` :\r\n```tsx numbered highlighting=\"1-26,39\"\r\nconst loginUser = async (user: User) => {\r\n    try {\r\n      const options = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const response = await fetch(\"/api/auths/login\", options);\r\n\r\n      if (!response.ok)\r\n        throw new Error(\r\n          `fetch error : ${response.status} : ${response.statusText}`\r\n        );\r\n\r\n      const authenticatedUser: AuthenticatedUser = await response.json();\r\n      console.log(\"authenticatedUser: \", authenticatedUser);\r\n\r\n      setAuthenticatedUser(authenticatedUser);\r\n    } catch (err) {\r\n      console.error(\"loginUser::error: \", err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  // Reste du code\r\n\r\n  const fullPizzaContext: PizzeriaContext = {\r\n    addPizza,\r\n    pizzas,\r\n    setPizzas,\r\n    actionToBePerformed,\r\n    setActionToBePerformed,\r\n    clearActionToBePerformed,\r\n    drinks,\r\n    registerUser,\r\n    loginUser,\r\n  };\r\n```\r\n\r\nComme le contexte a √©t√© mis √† jour, nous devons mettre √† jour le type associ√© `PizzeriaContext` au sein de `/src/types.ts` :\r\n```ts highlighting=\"10\"\r\ninterface PizzeriaContext {\r\n  pizzas: Pizza[];\r\n  setPizzas: (pizzas: Pizza[]) => void;\r\n  actionToBePerformed: boolean;\r\n  setActionToBePerformed: (actionToBePerformed: boolean) => void;\r\n  clearActionToBePerformed: () => void;\r\n  drinks: Drink[];\r\n  addPizza: (newPizza: NewPizza) => Promise<void>;\r\n  registerUser: (newUser: User) => Promise<void>;\r\n  loginUser: (user: User) => Promise<void>;\r\n}\r\n```\r\n\r\nEt voici le code de la nouvelle `LoginPage` (veuillez cr√©er cette page) qui fait appel au contexte pour r√©cup√©rer la fonction `loginUser` :\r\n```tsx numbered\r\nimport { useState, SyntheticEvent } from \"react\";\r\nimport \"./index.css\";\r\nimport { useNavigate, useOutletContext } from \"react-router-dom\";\r\nimport { PizzeriaContext } from \"../../types\";\r\n\r\nconst LoginPage = () => {\r\n\r\n   const { loginUser } : PizzeriaContext = useOutletContext();\r\n  \r\n    const navigate = useNavigate();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n  \r\n    const handleSubmit = async (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      await loginUser({ username, password });\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      console.error(\"LoginPage::error: \", err);\r\n    }\r\n  };\r\n  \r\n    const handleUsernameInputChange = (e: SyntheticEvent) => {\r\n      const input = e.target as HTMLInputElement;\r\n      setUsername(input.value);\r\n    };\r\n  \r\n    const handlePasswordChange = (e: SyntheticEvent) => {\r\n      const input = e.target as HTMLInputElement;\r\n      setPassword(input.value);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <h1>Connectez un utilisateur</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <label htmlFor=\"username\">Username</label>\r\n          <input\r\n            value={username}\r\n            type=\"text\"\r\n            id=\"username\"\r\n            name=\"username\"\r\n            onChange={handleUsernameInputChange}\r\n            required\r\n          />\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            value={password}\r\n            type=\"text\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            onChange={handlePasswordChange}\r\n            required\r\n          />\r\n          <button type=\"submit\">S'authentifier</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default LoginPage;\r\n```\r\n\r\nMaintenant nous devons mettre √† jour la configuration de notre router pour offrir la `LoginPage` : pour ce faire, veuillez mettre √† jour `/src/main.tsx` :\r\n```tsx numbered highlighting=\"18-21\"\r\nconst router = createBrowserRouter([\r\n  {\r\n    path: \"/\",\r\n    element: <App />,\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        element: <HomePage />,\r\n      },\r\n      {\r\n        path: \"add-pizza\",\r\n        element: <AddPizzaPage />,\r\n      },\r\n      {\r\n        path: \"register\",\r\n        element: <RegisterPage />,\r\n      },\r\n      {\r\n        path: \"login\",\r\n        element: <LoginPage />,\r\n      }\r\n    ],\r\n  },\r\n]);\r\n```\r\n\r\nIl faut aussi mettre √† jour la `Navbar` pour offrir un lien vers la `LoginPage` seulement si les utilisateurs ne sont pas connect√©s : \r\n```tsx numbered highlighting=\"17\"\r\nconst NavBar = ({authenticatedUser} : NavBarProps) => {\r\n  const navigate = useNavigate();\r\n\r\n  if(authenticatedUser) {\r\n    return (\r\n      <nav>\r\n        <button onClick={() => navigate(\"/\")}>Home</button>\r\n        <button onClick={() => navigate(\"/add-pizza\")}>Ajouter une pizza</button>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <button onClick={() => navigate(\"/\")}>Home</button>\r\n      <button onClick={() => navigate(\"/register\")}>Cr√©er un utilisateur</button>\r\n      <button onClick={() => navigate(\"/login\")}>Se connecter</button>\r\n    </nav>\r\n  );\r\n};\r\n```\r\n\r\n\r\nVeuillez ex√©cuter le frontend et vous assurer que pour l'utilisateur pr√©alablement cr√©√©, vous pouvez l'utiliser pour vous loguer. \r\n\r\n# <InternalPageTitle> Sauvegarde des donn√©es de session </InternalPageTitle>\r\n\r\nMaintenant, bien que l'utilisateur soit connect√© et donc authentifi√©, si nous faisons un refresh de la page, nous perdons les donn√©es de session.\r\n\r\nNous allons donc voir comment sauvegarder `authenticatedUser` dans le `localStorage`.\r\n\r\nüí≠ Mais quel est le format d'un `AuthenticatedUser` ?  \r\nCelui-ci est fix√© par notre API et nous l'avons d√©j√† d√©fini dans `types.ts`... Voici un exemple de sa forme :\r\n```json\r\n{\r\n    \"username\": \"me\",\r\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im1lIiwiaWF0IjoxNzE5ODIxMTEwLCJleHAiOjE4MDYyMjExMTB9.cyw8HYhLxEWIsdAJQ0dO_wuokib20zTNxqYLpj74Wp4\"\r\n}\r\n```\r\n\r\nüí≠ A quel moment sauvegarder les donn√©es de session ?  \r\nIci, l'utilisateur est connect√© lors du register, ou lors du login. C'est donc √† se moment l√† qu'il faut sauvegarder ses donn√©es dans le `localStorage`.  \r\nComme nous allons r√©utiliser un m√™me traitement (tant dans login que dans register), nous pouvons directement √©viter une duplication de code en cr√©ant une fonction `storeAuthenticatedUser`. De plus, nous avons besoin d'une fonction qui nous permettra de r√©cup√©rer l'utilisateur authentifi√© du `localStorage`.  \r\nEt finalement, afin de pr√©voir le nettoyage des donn√©es de session, nous allons cr√©er une fonction `clearAuthenticatedUser`.\r\n\r\nVeuillez cr√©er un nouveau script `/src/utils/session.ts` et y ajouter ce code-ci : \r\n```ts\r\nimport { AuthenticatedUser, MaybeAuthenticatedUser } from \"../types\";\r\n\r\nconst storeAuthenticatedUser = (authenticatedUser: AuthenticatedUser) => {\r\n  localStorage.setItem(\"authenticatedUser\", JSON.stringify(authenticatedUser));\r\n};\r\n\r\nconst getAuthenticatedUser = (): MaybeAuthenticatedUser => {\r\n  const authenticatedUser = localStorage.getItem(\"authenticatedUser\");\r\n\r\n  if (!authenticatedUser) return undefined;\r\n\r\n  return JSON.parse(authenticatedUser);\r\n};\r\n\r\nconst clearAuthenticatedUser = () => {\r\n  localStorage.removeItem(\"authenticatedUser\");\r\n};\r\n\r\nexport { storeAuthenticatedUser, getAuthenticatedUser, clearAuthenticatedUser };\r\n```\r\n\r\nVeuillez mettre √† jour `App` afin de faire appelle √† `storeAuthenticatedUser` lors du login et du register :\r\n```tsx numbered highlighting=\"21,51\"\r\n const registerUser = async (newUser: User) => {\r\n    try {\r\n      const options = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newUser),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const response = await fetch(\"/api/auths/register\", options);\r\n\r\n      if (!response.ok)\r\n        throw new Error(\r\n          `fetch error : ${response.status} : ${response.statusText}`\r\n        );\r\n\r\n      const createdUser: AuthenticatedUser = await response.json();\r\n\r\n      setAuthenticatedUser(createdUser);\r\n      storeAuthenticatedUser(createdUser);\r\n\r\n      console.log(\"createdUser: \", createdUser);\r\n    } catch (err) {\r\n      console.error(\"registerUser::error: \", err);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const loginUser = async (user: User) => {\r\n    try {\r\n      const options = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(user),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n\r\n      const response = await fetch(\"/api/auths/login\", options);\r\n\r\n      if (!response.ok)\r\n        throw new Error(\r\n          `fetch error : ${response.status} : ${response.statusText}`\r\n        );\r\n\r\n      const authenticatedUser: AuthenticatedUser = await response.json();\r\n      console.log(\"authenticatedUser: \", authenticatedUser);\r\n\r\n      setAuthenticatedUser(authenticatedUser);\r\n      storeAuthenticatedUser(authenticatedUser);\r\n    } catch (err) {\r\n      console.error(\"loginUser::error: \", err);\r\n      throw err;\r\n    }\r\n  };\r\n```\r\n\r\nüí≠ A quel moment devons nous faire appel √† `getAuthenticatedUser` pour r√©cup√©rer les donn√©es du `localStorage` ?  \r\nEn fait, cela doit se faire au chargement de la page. Et nous souhaitons, si nous r√©cup√©rons un utilisateur authentifi√©, passer cet utilisateur √† la `Navbar`. Une fa√ßon simple de r√©aliser cette action, c'est la toute premi√®re fois que `App` est appel√©, en utilisant son `useEffect`. Veuillez donc mettre √† jour le `useEffect` de `App` :\r\n```tsx highlighting=\"3-6\"\r\nuseEffect(() => {\r\n    fetchPizzas();\r\n    const authenticatedUser = getAuthenticatedUser();\r\n    if (authenticatedUser) {\r\n      setAuthenticatedUser(authenticatedUser);\r\n    }\r\n  }, []);\r\n```\r\n\r\nNous allons voir dans le `localStorage` s'il existe des donn√©es de session et r√©cup√©rons l'utilisateur authentifi√© si c'est le cas. Ensuite, nous mettons √† jour l'√©tat `authenticatedUser` avec cet utilisateur authentifi√©, ce qui permet un \"rerender\" de l'UI (dont la mise √† jour de l'affichage de la `Navbar`).\r\n\r\nVeuillez connecter un utilisateur et faire un refresh de la page...  Et voila, vous devriez rester connect√© : )\r\n\r\nN'h√©sitez pas √† aller voir le `localStorage` de votre browser. Pour Chrome, dans vos outils de d√©veloppeurs, celui-ci se trouve dans l'onglet `Application`.\r\n\r\n# <InternalPageTitle> D√©connexion d'un utilisateur </InternalPageTitle>\r\n\r\nIl est √† noter que pour avoir une application compl√®te, il va aussi falloir penser √† faire effacer les donn√©es de session.\r\n\r\nNous allons ajouter un √©l√©ment √† la `Navbar` qui se nomme `Se d√©connecter`. Lorsqu'on cliquera sur cet √©l√©ment, nous devons mettre √† jour la variable d'√©tat `authenticatedUser` qui se trouve dans `App` et nous devons effacer les donn√©es de session du `localStorage`. Comme l'√©tat est g√©r√© dans le composant \"parent\" de la `Navbar`, nous allons cr√©er une fonction dans `App` qui permette d'agir sur cet √©tat. \r\n\r\nVeuillez donc mettre √† jour `App` en lui ajoutant cette fonction `clearUser` et en passant cette fonction √† la `Navbar` :\r\n```tsx numbered highlighting=\"2-5,15\"\r\n  //....\r\n  const clearUser = () => {\r\n    clearAuthenticatedUser();\r\n    setAuthenticatedUser(undefined);\r\n  }\r\n  // ... reste du code\r\n  return (\r\n    <div className=\"page\">\r\n      <Header\r\n        title=\"We love Pizza\"\r\n        version={0 + 1}\r\n        handleHeaderClick={handleHeaderClick}\r\n      />\r\n      <main>\r\n        <NavBar authenticatedUser={authenticatedUser} clearUser={clearUser}/>\r\n        <Outlet context={fullPizzaContext} />\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n  ```\r\n\r\nVoici le code de la `Navbar` mis √† jour pour ajouter l‚Äô√©l√©ment de d√©connexion et l'action associ√©e :\r\n```tsx numbered highlighting=\"3,6,16\"\r\ninterface NavBarProps {\r\n  authenticatedUser: MaybeAuthenticatedUser;\r\n  clearUser: () => void;\r\n}\r\n\r\nconst NavBar = ({ authenticatedUser, clearUser }: NavBarProps) => {\r\n  const navigate = useNavigate();\r\n\r\n  if (authenticatedUser) {\r\n    return (\r\n      <nav>\r\n        <button onClick={() => navigate(\"/\")}>Home</button>\r\n        <button onClick={() => navigate(\"/add-pizza\")}>\r\n          Ajouter une pizza\r\n        </button>\r\n        <button onClick={() => clearUser()}>Se d√©connecter</button>\r\n      </nav>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <button onClick={() => navigate(\"/\")}>Home</button>\r\n      <button onClick={() => navigate(\"/register\")}>\r\n        Cr√©er un utilisateur\r\n      </button>\r\n      <button onClick={() => navigate(\"/login\")}>Se connecter</button>\r\n    </nav>\r\n  );\r\n};\r\n```\r\n\r\nVeuillez tester l'application, vous connecter, d√©connecter... Cela devrait bien fonctionner.\r\n\r\nIl nous reste √† faire en sorte que l'on puisse autoriser l'op√©ration de cr√©ation de pizza.\r\n\r\n# <InternalPageTitle> Autorisation de l'appel √† une op√©ration prot√©g√©e  </InternalPageTitle>\r\n\r\nVeuillez connecter un utilisateur, cliquer sur `Ajouter une pizza`, compl√©ter le formulaire d'ajout d'une pizza, cliquer sur `Ajouter` et regarder dans la console : il devrait y avoir une erreur qui s'affiche avec le \"status code\" **`401 : Unauthorized`**.  \r\nEn effet, l'API attend un token pour autoriser l'op√©ration de cr√©ation d'une pizza.\r\n\r\nNous allons donc mettre √† jour la fonction permettant de cr√©er une pizza qui est d√©finie dans `App` pour ajouter le token de l'utilisateur authentifi√© au sein du header de la requ√™te :\r\n\r\n```tsx numbered highlighting=\"11\"\r\n const addPizza = async (newPizza: NewPizza) => {\r\n    try {\r\n      if(!authenticatedUser)  {\r\n        throw new Error(\"You must be authenticated to add a pizza\");\r\n      }\r\n      const options = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newPizza),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: authenticatedUser.token,\r\n        },\r\n      };\r\n      // Suite du code\r\n```\r\n\r\nVeuillez vous connecter √† l'IHM √† l'aide du compte **`manager`** et tenter d'ajouter une pizza. Cela ne devrait toujours pas fonctionner. Veuillez regarder dans la console : il devrait y avoir une erreur qui s'affiche avec le \"status code\" **`403 : Forbidden`**.  \r\nEn effet, l'API attend un token pour autoriser l'op√©ration de cr√©ation d'une pizza, mais seulement l'utilisatrice ou l'utilisateur **`admin`** a le privil√®ge d'ajouter une pizza au menu !\r\n\r\nD√©connectez-vous, reconnectez-vous √† l'aide du compte **`admin`** (password `admin` par d√©faut ; ), et ajoutez une pizza.\r\nVoila ! Le site devrait √™tre enti√®rement fonctionnel !\r\n\r\nEn cas de souci, vous pouvez utiliser le code du tutoriel [session-jwt](https://github.com/e-vinci/ts-demos/tree/main/front/session-jwt).\r\n\r\nüí≠ Est-ce que c'est \"safe\" que notre IHM affiche le menu \"Ajouter une pizza\" pour un utilisateur qui n'est pas l'admin ?    \r\n*En fait oui, c'est \"safe\", vous l'avez test√©. L'API ne doit jamais faire confiance aux applications clientes pour appliquer la s√©curit√©. Ainsi, m√™me si le frontend autorise l'acc√®s √† des op√©rations qui ne devraient pas √™tre permises, au regard des autorisations appliqu√©es par l'API, √ßa n'a pas d'importance point de vue s√©curit√©.  \r\nDe la m√™me fa√ßon, c'est pour √ßa qu'une API doit aussi toujours valider les param√®tres qu'elle re√ßoit. Elle ne peut pas faire confiance aux applications clientes, comme par exemple √† une application web tournant dans un browser, pour valider tous les champs d'un formulaire.    \r\nLa raison est simple, l'API est d√©velopp√©e ind√©pendamment des applications clientes, elle ne peut pas supposer que les requ√™tes seront toujours bien construites.*\r\n\r\nüí≠ OK, tout est \"safe\" si l'API fait toutes les v√©rifications n√©cessaires. N√©anmoins, n'y a-t-il pas des r√®gles de bonnes pratiques au niveau des IHM, pour ne pas permettre de faire n'importe quelles requ√™tes vers des API ?  \r\n*Et bien oui, au niveau des IHM, pour des questions d'**ergonomie**, d'exp√©rience utilisateur, on va faire en sorte :*\r\n- *de ne pas offrir des op√©rations qui ne seront pas autoris√©es. Par exemple, dans le cadre de ce tutoriel sur un site permettant de g√©rer une pizzeria, il ne faut pas \"frustrer\" les utilisateurs en leur faisant croire qu'ils ont acc√®s √† l'op√©ration de cr√©er une pizza ! Imaginez-vous, vous cr√©ez une nouvelle pizza de 32 ingr√©dients, et lors de la soumission, vous recevez un message comme quoi vous n'√™tes pas l'admin du site et que vous n'avez donc pas le droit de cr√©er une pizza üò≤!*\r\n- *de ne pas demander du travail √† une API quand l'IHM peut d√©tecter que ce n'est pas utile. \r\nAinsi, quand une IHM offre des formulaires, qui am√®neront √† des requ√™tes vers des API, on √©vitera d'autoriser la soumission des donn√©es tant que les champs n'ont pas √©t√© valid√©s. Tout ce que l'IHM peut valider c√¥t√© client, elle doit le faire. Le feedback sera plus rapide pour l'utilisateur, et les ressources de l'API seront √©conomis√©es (pas d'appel inutile).*\r\n\r\nN'h√©sitez donc pas √† mettre √† jour ce tutoriel pour faire en sorte d'afficher \"Ajouter une pizza\" que si le compte connect√© est **`admin`**.\r\n\r\nüí≠ Ca n'est pas un peu \"cheap\" que seul le compte **`admin`** puisse avoir le privil√®ge d'admin du site ?  \r\n*H√© bien oui, c'est \"cheap\". G√©n√©ralement, dans le cadre d'applications plus robustes, nous allons ajouter un ou plusieurs r√¥le(s) aux utilisateurs. Par exemple, dans le cadre d'applications o√π les r√¥les sont simples, qu'il n'y a jamais qu'un seul r√¥le associ√© √† un utilisateur, il suffirait d'ajouter au niveau de l'API la propri√©t√© **`role`** aux utilisateurs. La majorit√© des utilisateurs pourrait avoir un r√¥le dont la valeur serait **`default`**, et une minorit√© d'utilisateurs aurait le r√¥le d'**`admin`**...*\r\n\r\nOn n'affiche actuellement **pas de message d'erreur** aux utilisateurs lorsque la r√©ponse d'une API renvoie une erreur. Pour am√©liorer l'exp√©rience de l'utilisateur, ce serait une am√©lioration √† faire.\r\n\r\n# <InternalPageTitle> Exercice 3.4 : Authentification et appel d'op√©rations prot√©g√©es par JWT  </InternalPageTitle>\r\n\r\nVeuillez continuer l'exercice pr√©c√©dent nomm√© `/exercises/3.3-4-4b` afin de compl√©ter l'application `myMovies`.\r\n\r\nPour tout cette exercice, vous devez avoir d√©marr√© l'API s√©curis√©e par JWT de vos films. Veuillez donc ex√©cuter le code de votre exercice pr√©c√©dent `/exercises/3.1`. En cas de souci, vous trouvez le code de cette API ici : https://github.com/e-vinci/ts-exercises\r\n\r\n## Authentification et appel d'op√©rations n√©cessitant une autorisation JWT\r\n\r\nVeuillez impl√©menter ces cas d'utilisation :\r\n- **`register`** : les utilisateurs doivent pouvoir cr√©er un compte.\r\n- **`login`** : les utilisateur doivent pouvoir se loguer.\r\n- **`logout`** : les utilisateurs doivent pouvoir se d√©connecter.\r\n\r\nN'h√©sitez pas √† reprendre le code du tutoriel ; )\r\n\r\nUne fois tout fonctionnel, veuillez faire un commit avec le message suivant : **`new:ex3.4-authentification`**.\r\n\r\nVotre application doit maintenant autoriser les op√©rations suivantes que pour des utilisateurs authentifi√©s :\r\n-\tUC2 : l'ajout d'une ressource de type films via un formulaire d'ajout d'un film.\r\n- UC3 : la suppression d'un film.\r\n\r\nComme auparavant, cette op√©ration est permise pour tous les utilisateurs, anonymes ou authentifi√©s :\r\n-\tUC1 : l'affichage, sous forme de tableau, de toutes les ressources de type films.\r\n\r\nPensez √† bien mettre √† jour votre **`Navbar`** pour afficher les bons √©l√©ments en fonction que l'utilisateur est authentifi√© ou pas.\r\n\r\nFaites attention, il n'est pas autoris√©, pour des raisons d'ergonomie, que le frontend offre les fonctionnalit√©s d'√©criture de ressources pour les utilisateur non authentifi√©s. Vous devez donc rendre invisible les op√©rations non autoris√©es aux utilisateurs. \r\n\r\nUC2 (create) & UC3 (delete) doivent donc √™tre invisibles pour les utilisateurs anonymes.\r\n\r\nVeuillez faire en sorte de rajouter dans le web storage ces nouvelles donn√©es de session lors du login ou du register : le token et le username.  \r\n\r\nUne fois tout fonctionnel, veuillez faire un commit avec le message suivant : **`new:ex3.4`**.\r\n\r\n#### ü§ù Tips\r\n\r\n- üí≠ Comment rendre invisible les op√©rations d'√©criture de certaines ressources au sein du frontend ?  \r\nPar exemple, vous pourriez afficher des boutons de type **`Effacer`** que si l'utilisateur est authentifi√©.  \r\n\r\n# <InternalPageTitle> Exercice 3.4b : Modification de ressources & JWT  </InternalPageTitle>\r\n\r\nVeuillez continuer l'exercice pr√©c√©dent nomm√© `/exercises/3.3-4-4b` afin de compl√©ter l'application `myMovies`.\r\n\r\nVotre application doit maintenant autoriser cette op√©ration suivante que pour des utilisateurs authentifi√©s :\r\n- UC4 : la mise √† jour des donn√©es d'un film (√† l'exception de l'id associ√© √† un film).\r\n\r\nFaites attention, il n'est pas autoris√©, pour des raisons d'ergonomie, que le frontend offre les fonctionnalit√©s d'√©criture de ressources pour les utilisateur non authentifi√©s. Vous devez donc rendre invisible les op√©rations non autoris√©es aux utilisateurs. \r\n\r\n UC4 (update) doit donc √™tre invisible pour les utilisateurs anonymes.\r\n\r\nUne fois tout fonctionnel, veuillez faire un commit avec le message suivant : **`new:ex3.4b`**.\r\n\r\n## üç¨ Challenge optionnel : Gestion de session & remember me\r\n\r\nS'il vous reste du temps, vous pourriez continuer l'exercice pr√©c√©dent et ajouter une fonction \"remember me\" √† votre formulaire de \"login\" et de \"register\" et faire en sorte que vos donn√©es de session soient sauvegard√©es :\r\n- dans le **`localStorage`** si l'on clique sur une checkbox \"Remember me\" ;\r\n- dans le **`sessionStorage`** si l'on ne clique pas sur la checkbox \"Remember me\" lors du login ou du register.\r\n\r\nUne fois tout fonctionnel, veuillez faire un commit avec le message suivant : **`new:ex3.4b+`**.\r\n\r\n# <InternalPageTitle> üç¨ Persistance de donn√©es de session via des cookies </InternalPageTitle>\r\n\r\n## Authentification & autorisation JWT √† l'aide de cookies\r\n\r\nDans la partie optionnelle sur l'[Authentification & autorisation JWT √† l'aide de cookies](../auths-api/#üç¨_authentification_autorisation_jwt_a_laide_de_cookies), nous avons vu comment mettre √† jour l'API afin d'int√©grer les tokens JWT aux cookies.\r\n\r\nVeuillez d√©marrer la version [cookies](https://github.com/e-vinci/ts-demos/tree/main/back/api/cookies) de l'API de la pizzeria.\r\n\r\nNous allons voir maintenant comment le frontend peut utiliser ces cookies.\r\n\r\n## Gestion de session c√¥t√© client via une IHM et des cookies\r\n\r\n\r\nPour ce tutoriel, veuillez cr√©er une copie du tutoriel `session-jwt`, si n√©cessaire voici le code du tutoriel [session-jwt](https://github.com/e-vinci/ts-demos/tree/main/front/session-jwt), et l'appeler `cookies`. Changez le nom du projet dans `package.json`.\r\n\r\nAfin de sauvegarder les donn√©es de session, c'est √† dire l'objet **`authenticatedUser`** contenant juste un username, nous ne devons m√™me pas mettre √† jour le fichier **`/src/utils/session.js`**. En effet, l'API **`cookies`** renvoie un objet du genre **`{username: \"manager\"}`**. Au niveau de l'IHM, le code est donc toujours fonctionnel pour sauvegarder le username gr√¢ce √† `authenticatedUser`.\r\n\r\nIl ne reste donc qu'√† changer le code o√π nous avons besoin d'une autorisation. Pour l'application de gestion de la pizzeria, il s'agit de la cr√©ation de pizza.  \r\nVeuillez donc mettre √† jour **`App`** pour enlever la ligne s'occupant de l'authorization header : **`Authorization: authenticatedUser.token`** :\r\n```tsx numbered highlighting=\"9-11\"\r\nconst addPizza = async (newPizza: NewPizza) => {\r\n    try {\r\n      if (!authenticatedUser) {\r\n        throw new Error(\"You must be authenticated to add a pizza\");\r\n      }\r\n      const options = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newPizza),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      // Suite du code ...\r\n```\r\n\r\nVeuillez tester votre derni√®re version du frontend.\r\nLoguez-vous avec l'utilisateur **`admin`** (et le password **`admin`**).  \r\nAjoutez une pizza et v√©rifiez qu'elle s'affiche bien.  \r\n\r\nüí≠ Comment v√©rifier le cookie ?  \r\nTout en ayant la fen√™tre de votre application ouverte, via Chrome, allez dans vos outils de d√©veloppeurs : **`F12`**.  \r\nPuis, dans l'onglet **`Application`**, cliquez sur **`Cookies`**, vous verrez appara√Ætre **`http://localhost:8080`**. Cliquez sur cette URL, et vous verrez vos 2 cookies de session, **`user.sig`** et **`user`**.  \r\nN'h√©sitez pas √† aller d√©coder la valeur du cookie **`user`** sur [base64decode](https://www.base64decode.org/) en faisant un copier / coller de **`Value`**. Vous devriez voir quelque chose appara√Ætre du style **`{\"username\":\"manager\",\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im1hbmFnZXIiLCJpYXQiOjE2NjE3NzUxMDgsImV4cCI6MTc0ODE3NTEwOH0.sAZqq6vbrjCCZZoLH-n8hJKBoXJJJ8jEoupk8xKu5WI\"}`**  !\r\n\r\nToujours dans l'onglet **`Application`** des outils de d√©veloppeurs de Chrome, faites un clear des cookies : clic droit sur **`http://localhost:8080`**, **`Clear`**.  \r\nTentez maintenant d'ajouter une pizza... Ca ne fonctionne plus, et c'est bien normal, car il n'y a plus de token qui est envoy√© √† l'API !  \r\n\r\nEn cas de souci, vous pouvez utiliser le code du tutoriel [cookies](https://github.com/e-vinci/ts-demos/tree/main/front/cookies).\r\n\r\nüí≠ Notons que cette version de notre frontend pourrait √™tre am√©lior√©e. Actuellement, lorsqu'on fait un logout, on n'efface pas le cookie du browser.   \r\nComment feriez vous ?  \r\n*Vous pourriez par exemple appeler la m√©thode **`GET /auths/logout`** üòâ.*\r\n\r\n\r\n\r\n","fields":{"slug":"/part3/auths-hmi/"},"frontmatter":{"title":"Sessions & JWT","date":null,"navbarExtraStyles":"","headerImage":"","featuredImage":"","description":"Sessions, authentification & utilisation d'op√©rations prot√©g√©es par JWT au sein d'une application React","autoMargin":true}},"allImages":{"edges":[{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/19c44353d690d2192603058b13677c32/050f3/ex2-16-questions.png","srcSet":"/js2/static/19c44353d690d2192603058b13677c32/050f3/ex2-16-questions.png 370w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/19c44353d690d2192603058b13677c32/89e9c/ex2-16-questions.webp 370w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.908108108108108}},"base":"ex2-16-questions.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/7746eb8f2da2b173501f76b41b709419/31045/ex2-16-score.png","srcSet":"/js2/static/7746eb8f2da2b173501f76b41b709419/31045/ex2-16-score.png 268w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/7746eb8f2da2b173501f76b41b709419/adc83/ex2-16-score.webp 268w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.49253731343283585}},"base":"ex2-16-score.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#683898","images":{"fallback":{"src":"/js2/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png","srcSet":"/js2/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png 512w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/53aa06cf17e4239d0dba6ffd09854e02/cc23f/icon.webp 512w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}},"base":"icon.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8e848","images":{"fallback":{"src":"/js2/static/94e78cdb1293988b357eb1e6074279d9/8cffc/join.png","srcSet":"/js2/static/94e78cdb1293988b357eb1e6074279d9/8cffc/join.png 26w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/94e78cdb1293988b357eb1e6074279d9/2705a/join.webp 26w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1.0769230769230769}},"base":"join.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080808","images":{"fallback":{"src":"/js2/static/309e0fb8b4416829acfed4f7a501206b/98149/logo_vinci.png","srcSet":"/js2/static/309e0fb8b4416829acfed4f7a501206b/98149/logo_vinci.png 544w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/309e0fb8b4416829acfed4f7a501206b/5eade/logo_vinci.webp 544w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.9044117647058824}},"base":"logo_vinci.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8e848","images":{"fallback":{"src":"/js2/static/814c6001016da3a407035f4cfb117ea5/61ec1/quit.png","srcSet":"/js2/static/814c6001016da3a407035f4cfb117ea5/61ec1/quit.png 28w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/814c6001016da3a407035f4cfb117ea5/fad8c/quit.webp 28w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.9285714285714286}},"base":"quit.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#484848","images":{"fallback":{"src":"/js2/static/d500a235cf91fee0cec65a112a3fd9a8/a166b/backend-frameworks.png","srcSet":"/js2/static/d500a235cf91fee0cec65a112a3fd9a8/a166b/backend-frameworks.png 634w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/d500a235cf91fee0cec65a112a3fd9a8/de393/backend-frameworks.webp 634w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5394321766561514}},"base":"backend-frameworks.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#d88848","images":{"fallback":{"src":"/js2/static/c4a1984e0b0ce60b9f9f72756293a96e/50940/frontend-technos.jpg","srcSet":"/js2/static/c4a1984e0b0ce60b9f9f72756293a96e/50940/frontend-technos.jpg 461w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/c4a1984e0b0ce60b9f9f72756293a96e/9d85c/frontend-technos.webp 461w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5553145336225597}},"base":"frontend-technos.jpg"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/852194cf7727296de1adabc80b737b1d/52ccc/critere-eval.jpg","srcSet":"/js2/static/852194cf7727296de1adabc80b737b1d/24844/critere-eval.jpg 750w,\n/js2/static/852194cf7727296de1adabc80b737b1d/52ccc/critere-eval.jpg 844w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/852194cf7727296de1adabc80b737b1d/ba934/critere-eval.webp 750w,\n/js2/static/852194cf7727296de1adabc80b737b1d/f361e/critere-eval.webp 844w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1.2890995260663507}},"base":"critere-eval.jpg"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/4231407aeb2eab1eb26748522a49f119/1daa6/js-evolution.png","srcSet":"/js2/static/4231407aeb2eab1eb26748522a49f119/1daa6/js-evolution.png 505w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/4231407aeb2eab1eb26748522a49f119/1d9c9/js-evolution.webp 505w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.3702970297029703}},"base":"js-evolution.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#a8c888","images":{"fallback":{"src":"/js2/static/62895fac28825996f4895ee798c3c5da/964cf/modules-breakdown.png","srcSet":"/js2/static/62895fac28825996f4895ee798c3c5da/ddebf/modules-breakdown.png 750w,\n/js2/static/62895fac28825996f4895ee798c3c5da/964cf/modules-breakdown.png 1056w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/62895fac28825996f4895ee798c3c5da/f59f5/modules-breakdown.webp 750w,\n/js2/static/62895fac28825996f4895ee798c3c5da/280c1/modules-breakdown.webp 1056w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.3759469696969697}},"base":"modules-breakdown.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#283848","images":{"fallback":{"src":"/js2/static/79637217dd57af31bd8a8860191ab8d8/dbdf5/most-pop-programming.png","srcSet":"/js2/static/79637217dd57af31bd8a8860191ab8d8/dbdf5/most-pop-programming.png 715w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/79637217dd57af31bd8a8860191ab8d8/349ed/most-pop-programming.webp 715w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.8139860139860139}},"base":"most-pop-programming.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080808","images":{"fallback":{"src":"/js2/static/fa47b7868326f417638155af9c4e1131/a19b7/mpa-api.png","srcSet":"/js2/static/fa47b7868326f417638155af9c4e1131/1f5ea/mpa-api.png 750w,\n/js2/static/fa47b7868326f417638155af9c4e1131/a19b7/mpa-api.png 847w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/fa47b7868326f417638155af9c4e1131/98a4a/mpa-api.webp 750w,\n/js2/static/fa47b7868326f417638155af9c4e1131/b3688/mpa-api.webp 847w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.4628099173553719}},"base":"mpa-api.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080808","images":{"fallback":{"src":"/js2/static/0db4cabf70d03ffdaba26ad2279a1f03/36fe5/mpa.png","srcSet":"/js2/static/0db4cabf70d03ffdaba26ad2279a1f03/36fe5/mpa.png 540w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/0db4cabf70d03ffdaba26ad2279a1f03/94f16/mpa.webp 540w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.7259259259259259}},"base":"mpa.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/df3eb96d3792fedc90e824b9ff4ee666/9aa96/spa-monolithic.png","srcSet":"/js2/static/df3eb96d3792fedc90e824b9ff4ee666/9aa96/spa-monolithic.png 541w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/df3eb96d3792fedc90e824b9ff4ee666/65253/spa-monolithic.webp 541w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.7245841035120149}},"base":"spa-monolithic.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/97447aabc0c3f79a34494e5fa4b0b55d/cd171/planning.png","srcSet":"/js2/static/97447aabc0c3f79a34494e5fa4b0b55d/08018/planning.png 750w,\n/js2/static/97447aabc0c3f79a34494e5fa4b0b55d/b5d65/planning.png 1080w,\n/js2/static/97447aabc0c3f79a34494e5fa4b0b55d/cd171/planning.png 1088w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/97447aabc0c3f79a34494e5fa4b0b55d/f7070/planning.webp 750w,\n/js2/static/97447aabc0c3f79a34494e5fa4b0b55d/6949f/planning.webp 1080w,\n/js2/static/97447aabc0c3f79a34494e5fa4b0b55d/9af3a/planning.webp 1088w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.59375}},"base":"planning.PNG"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/e927b7d4c1aab1dd521632761a53f1b6/a19b7/spa.png","srcSet":"/js2/static/e927b7d4c1aab1dd521632761a53f1b6/1f5ea/spa.png 750w,\n/js2/static/e927b7d4c1aab1dd521632761a53f1b6/a19b7/spa.png 847w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/e927b7d4c1aab1dd521632761a53f1b6/98a4a/spa.webp 750w,\n/js2/static/e927b7d4c1aab1dd521632761a53f1b6/b3688/spa.webp 847w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.4628099173553719}},"base":"spa.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#283848","images":{"fallback":{"src":"/js2/static/633de32074a1d0717540f1ac88bb3e95/dbdf5/web-frameworks.png","srcSet":"/js2/static/633de32074a1d0717540f1ac88bb3e95/dbdf5/web-frameworks.png 715w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/633de32074a1d0717540f1ac88bb3e95/349ed/web-frameworks.webp 715w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.8139860139860139}},"base":"web-frameworks.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/8c454120ed3743524b977a50efee14ae/75d45/architecture.png","srcSet":"/js2/static/8c454120ed3743524b977a50efee14ae/c33b9/architecture.png 750w,\n/js2/static/8c454120ed3743524b977a50efee14ae/75d45/architecture.png 859w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/8c454120ed3743524b977a50efee14ae/013ea/architecture.webp 750w,\n/js2/static/8c454120ed3743524b977a50efee14ae/3c3f0/architecture.webp 859w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6030267753201397}},"base":"architecture.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/593d65b45ead31d08b777b977530fbb0/257c8/form.png","srcSet":"/js2/static/593d65b45ead31d08b777b977530fbb0/257c8/form.png 182w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/593d65b45ead31d08b777b977530fbb0/aa09a/form.webp 182w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1.1868131868131868}},"base":"form.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080808","images":{"fallback":{"src":"/js2/static/e795fd2fb63aea24f1a6ec7e3b46dc57/b749b/JSdude.png","srcSet":"/js2/static/e795fd2fb63aea24f1a6ec7e3b46dc57/27b15/JSdude.png 750w,\n/js2/static/e795fd2fb63aea24f1a6ec7e3b46dc57/b749b/JSdude.png 1024w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/e795fd2fb63aea24f1a6ec7e3b46dc57/cfe1c/JSdude.webp 750w,\n/js2/static/e795fd2fb63aea24f1a6ec7e3b46dc57/5e515/JSdude.webp 1024w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}},"base":"JSdude.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/a4d45cc8f767378935f1a47c6a814bff/c4448/table.png","srcSet":"/js2/static/a4d45cc8f767378935f1a47c6a814bff/c4448/table.png 219w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/a4d45cc8f767378935f1a47c6a814bff/5ce26/table.webp 219w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1.547945205479452}},"base":"table.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#282828","images":{"fallback":{"src":"/js2/static/995b19933afe2efc8abdad9e056f7eb0/c35a8/terminal-1.png","srcSet":"/js2/static/995b19933afe2efc8abdad9e056f7eb0/c35a8/terminal-1.png 481w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/995b19933afe2efc8abdad9e056f7eb0/8a064/terminal-1.webp 481w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1.2390852390852392}},"base":"terminal-1.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#181818","images":{"fallback":{"src":"/js2/static/ec94e10b96163ba7dff989c8073526c9/e4d4e/terminal-2.png","srcSet":"/js2/static/ec94e10b96163ba7dff989c8073526c9/d328f/terminal-2.png 750w,\n/js2/static/ec94e10b96163ba7dff989c8073526c9/e4d4e/terminal-2.png 933w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/ec94e10b96163ba7dff989c8073526c9/dea86/terminal-2.webp 750w,\n/js2/static/ec94e10b96163ba7dff989c8073526c9/92d06/terminal-2.webp 933w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.2722400857449089}},"base":"terminal-2.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#e8e8e8","images":{"fallback":{"src":"/js2/static/d0eb9efdef86cf105b8020519b702c01/f6ece/pizza2.jpg","srcSet":"/js2/static/d0eb9efdef86cf105b8020519b702c01/e1af2/pizza2.jpg 750w,\n/js2/static/d0eb9efdef86cf105b8020519b702c01/f6ece/pizza2.jpg 800w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/d0eb9efdef86cf105b8020519b702c01/7f694/pizza2.webp 750w,\n/js2/static/d0eb9efdef86cf105b8020519b702c01/4447d/pizza2.webp 800w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6675}},"base":"pizza2.jpg"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080808","images":{"fallback":{"src":"/js2/static/bb50b3e7a8b2a2cd37a9f3e8139a8d34/05d72/browser.png","srcSet":"/js2/static/bb50b3e7a8b2a2cd37a9f3e8139a8d34/e81f3/browser.png 750w,\n/js2/static/bb50b3e7a8b2a2cd37a9f3e8139a8d34/05d72/browser.png 815w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/bb50b3e7a8b2a2cd37a9f3e8139a8d34/7c1ed/browser.webp 750w,\n/js2/static/bb50b3e7a8b2a2cd37a9f3e8139a8d34/9c789/browser.webp 815w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6269938650306749}},"base":"browser.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/d5538808d9455e309732cc72d3c16094/5a8ae/bom.png","srcSet":"/js2/static/d5538808d9455e309732cc72d3c16094/5a8ae/bom.png 361w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/d5538808d9455e309732cc72d3c16094/44051/bom.webp 361w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.8531855955678671}},"base":"bom.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/8336698fa5a4150652bf24675d81d450/b818d/console.png","srcSet":"/js2/static/8336698fa5a4150652bf24675d81d450/b818d/console.png 584w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/8336698fa5a4150652bf24675d81d450/2cd0a/console.webp 584w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5941780821917808}},"base":"console.PNG"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/815bb84493b798e20f6e050fe7d4f297/8ac59/bytes.heif","srcSet":"/js2/static/815bb84493b798e20f6e050fe7d4f297/8ac59/bytes.heif 730w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/815bb84493b798e20f6e050fe7d4f297/fa94f/bytes.webp 730w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.8041095890410959}},"base":"bytes.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#181818","images":{"fallback":{"src":"/js2/static/a2704f93c050f1b8f0af184bca0784e5/bfbd8/copy.png","srcSet":"/js2/static/a2704f93c050f1b8f0af184bca0784e5/bfbd8/copy.png 41w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/a2704f93c050f1b8f0af184bca0784e5/54421/copy.webp 41w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1.048780487804878}},"base":"copy.PNG"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/20e0138ec54042c9ab8df2df718b51c7/ad8b1/cssom.heif","srcSet":"/js2/static/20e0138ec54042c9ab8df2df718b51c7/ad8b1/cssom.heif 730w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/20e0138ec54042c9ab8df2df718b51c7/4fc4f/cssom.webp 730w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.3136986301369863}},"base":"cssom.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/2c0e805dbcef0b4210fddd87f2fdcd0b/7d9c5/dom2.gif","srcSet":"/js2/static/2c0e805dbcef0b4210fddd87f2fdcd0b/7d9c5/dom2.gif 486w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/2c0e805dbcef0b4210fddd87f2fdcd0b/3b54a/dom2.webp 486w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5473251028806584}},"base":"dom2.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/7c8ef3e05614d0f1331eb1622972209f/ad8b1/dom.heif","srcSet":"/js2/static/7c8ef3e05614d0f1331eb1622972209f/ad8b1/dom.heif 730w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/7c8ef3e05614d0f1331eb1622972209f/4fc4f/dom.webp 730w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.3136986301369863}},"base":"dom.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8d818","images":{"fallback":{"src":"/js2/static/9816a79b1cdedb4fd200ae4b1e94ccbd/efde9/js-logo.png","srcSet":"/js2/static/9816a79b1cdedb4fd200ae4b1e94ccbd/27b15/js-logo.png 750w,\n/js2/static/9816a79b1cdedb4fd200ae4b1e94ccbd/efde9/js-logo.png 768w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/9816a79b1cdedb4fd200ae4b1e94ccbd/cfe1c/js-logo.webp 750w,\n/js2/static/9816a79b1cdedb4fd200ae4b1e94ccbd/ea3b7/js-logo.webp 768w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}},"base":"js-logo.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/9f49136562a5d771c51d7600430566b1/38d9f/eventflow.png","srcSet":"/js2/static/9f49136562a5d771c51d7600430566b1/38d9f/eventflow.png 480w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/9f49136562a5d771c51d7600430566b1/cd74b/eventflow.webp 480w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1.1666666666666667}},"base":"eventflow.png"}},{"node":{"childImageSharp":null,"base":"red-light.gif"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/283b4c657f5c4a706c3e29d0a08fd451/7edf3/render.heif","srcSet":"/js2/static/283b4c657f5c4a706c3e29d0a08fd451/7edf3/render.heif 730w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/283b4c657f5c4a706c3e29d0a08fd451/29aef/render.webp 730w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.4383561643835616}},"base":"render.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#282828","images":{"fallback":{"src":"/js2/static/302e83d40f9486ab7ea528e217821223/d5cd3/start.png","srcSet":"/js2/static/302e83d40f9486ab7ea528e217821223/d5cd3/start.png 511w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/302e83d40f9486ab7ea528e217821223/02192/start.webp 511w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.40117416829745595}},"base":"start.PNG"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080808","images":{"fallback":{"src":"/js2/static/14110746b5f49459429c355815cd77b3/10f52/express-flow.png","srcSet":"/js2/static/14110746b5f49459429c355815cd77b3/eb8cd/express-flow.png 750w,\n/js2/static/14110746b5f49459429c355815cd77b3/10f52/express-flow.png 800w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/14110746b5f49459429c355815cd77b3/4e646/express-flow.webp 750w,\n/js2/static/14110746b5f49459429c355815cd77b3/130b6/express-flow.webp 800w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.3825}},"base":"express-flow.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#c8e8d8","images":{"fallback":{"src":"/js2/static/5c1c4cd476b1911739976c74d5457e03/60e67/middlewares.jpg","srcSet":"/js2/static/5c1c4cd476b1911739976c74d5457e03/60e67/middlewares.jpg 638w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/5c1c4cd476b1911739976c74d5457e03/f273c/middlewares.webp 638w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.7288401253918495}},"base":"middlewares.jpg"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/ff2054d2907d5ebd494875c12fe16a3d/d40cb/middleware-function.png","srcSet":"/js2/static/ff2054d2907d5ebd494875c12fe16a3d/7cb90/middleware-function.png 750w,\n/js2/static/ff2054d2907d5ebd494875c12fe16a3d/d40cb/middleware-function.png 944w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/ff2054d2907d5ebd494875c12fe16a3d/4ffb0/middleware-function.webp 750w,\n/js2/static/ff2054d2907d5ebd494875c12fe16a3d/6c417/middleware-function.webp 944w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.298728813559322}},"base":"middleware-function.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/4af4b8ccca63d0a981c68a20bb9658e1/cc4c8/techno-course.png","srcSet":"/js2/static/4af4b8ccca63d0a981c68a20bb9658e1/cc4c8/techno-course.png 721w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/4af4b8ccca63d0a981c68a20bb9658e1/7f7c1/techno-course.webp 721w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5575589459084604}},"base":"techno-course.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/dbf7fef0d0623475d157204fd950008e/cbf92/techno.png","srcSet":"/js2/static/dbf7fef0d0623475d157204fd950008e/cbf92/techno.png 586w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/dbf7fef0d0623475d157204fd950008e/09c5a/techno.webp 586w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.8464163822525598}},"base":"techno.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/6b82e2d24f2e455ab5f6479f8f0fd34c/718a6/cors-issue.png","srcSet":"/js2/static/6b82e2d24f2e455ab5f6479f8f0fd34c/3b3b8/cors-issue.png 750w,\n/js2/static/6b82e2d24f2e455ab5f6479f8f0fd34c/718a6/cors-issue.png 1031w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/6b82e2d24f2e455ab5f6479f8f0fd34c/148ba/cors-issue.webp 750w,\n/js2/static/6b82e2d24f2e455ab5f6479f8f0fd34c/53c8e/cors-issue.webp 1031w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.29582929194956353}},"base":"cors-issue.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/df999928d139b76e4624212deb47afa1/c60dc/ajax.png","srcSet":"/js2/static/df999928d139b76e4624212deb47afa1/c60dc/ajax.png 569w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/df999928d139b76e4624212deb47afa1/9f538/ajax.webp 569w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.8927943760984183}},"base":"ajax.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8e8e8","images":{"fallback":{"src":"/js2/static/cd7a86517cd86bf67e97a9455782f61e/3a7c2/errors.png","srcSet":"/js2/static/cd7a86517cd86bf67e97a9455782f61e/3a7c2/errors.png 589w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/cd7a86517cd86bf67e97a9455782f61e/8d14e/errors.webp 589w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.43803056027164683}},"base":"errors.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/5033887241592124140462a48f880b31/4c60e/independentFrontBackSPA2.png","srcSet":"/js2/static/5033887241592124140462a48f880b31/57832/independentFrontBackSPA2.png 750w,\n/js2/static/5033887241592124140462a48f880b31/4c60e/independentFrontBackSPA2.png 852w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/5033887241592124140462a48f880b31/73ed4/independentFrontBackSPA2.webp 750w,\n/js2/static/5033887241592124140462a48f880b31/fa338/independentFrontBackSPA2.webp 852w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5762910798122066}},"base":"independentFrontBackSPA2.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/368b66a6c71ce7ae5149f7fe124c67b4/dedcf/independentFrontBackSPA.png","srcSet":"/js2/static/368b66a6c71ce7ae5149f7fe124c67b4/aa4e8/independentFrontBackSPA.png 750w,\n/js2/static/368b66a6c71ce7ae5149f7fe124c67b4/dedcf/independentFrontBackSPA.png 914w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/368b66a6c71ce7ae5149f7fe124c67b4/54e6a/independentFrontBackSPA.webp 750w,\n/js2/static/368b66a6c71ce7ae5149f7fe124c67b4/d4860/independentFrontBackSPA.webp 914w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.48468271334792123}},"base":"independentFrontBackSPA.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/4cf8132263a3922a81198d62fa668e8c/8af70/monolithicSPA.png","srcSet":"/js2/static/4cf8132263a3922a81198d62fa668e8c/9fdee/monolithicSPA.png 750w,\n/js2/static/4cf8132263a3922a81198d62fa668e8c/8af70/monolithicSPA.png 758w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/4cf8132263a3922a81198d62fa668e8c/e02a2/monolithicSPA.webp 750w,\n/js2/static/4cf8132263a3922a81198d62fa668e8c/1677e/monolithicSPA.webp 758w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.712401055408971}},"base":"monolithicSPA.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/a0a9be40f52062756989e43e359b5c44/4ca31/liveServerFrontSPA.png","srcSet":"/js2/static/a0a9be40f52062756989e43e359b5c44/96859/liveServerFrontSPA.png 750w,\n/js2/static/a0a9be40f52062756989e43e359b5c44/4ca31/liveServerFrontSPA.png 751w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/a0a9be40f52062756989e43e359b5c44/3f918/liveServerFrontSPA.webp 750w,\n/js2/static/a0a9be40f52062756989e43e359b5c44/61905/liveServerFrontSPA.webp 751w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.4274300932090546}},"base":"liveServerFrontSPA.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/9482be8bcc11374b223c4bff1aaa7cef/6c4d1/movies.png","srcSet":"/js2/static/9482be8bcc11374b223c4bff1aaa7cef/44ede/movies.png 750w,\n/js2/static/9482be8bcc11374b223c4bff1aaa7cef/c97ea/movies.png 1080w,\n/js2/static/9482be8bcc11374b223c4bff1aaa7cef/6c4d1/movies.png 1268w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/9482be8bcc11374b223c4bff1aaa7cef/9378c/movies.webp 750w,\n/js2/static/9482be8bcc11374b223c4bff1aaa7cef/6e0c3/movies.webp 1080w,\n/js2/static/9482be8bcc11374b223c4bff1aaa7cef/498dd/movies.webp 1268w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.38564668769716093}},"base":"movies.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/945336ab536627610c9e7fa03999caa2/746ba/proxy.png","srcSet":"/js2/static/945336ab536627610c9e7fa03999caa2/746ba/proxy.png 691w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/945336ab536627610c9e7fa03999caa2/03d38/proxy.webp 691w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6353111432706222}},"base":"proxy.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/04662f2f0ed1b78bd5ead2c3dec85482/36714/readPizzas.png","srcSet":"/js2/static/04662f2f0ed1b78bd5ead2c3dec85482/36714/readPizzas.png 523w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/04662f2f0ed1b78bd5ead2c3dec85482/dfd8f/readPizzas.webp 523w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.7304015296367113}},"base":"readPizzas.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/8eb2b12643e10670a4e4234ccd8a844e/3d704/xss.png","srcSet":"/js2/static/8eb2b12643e10670a4e4234ccd8a844e/613e6/xss.png 750w,\n/js2/static/8eb2b12643e10670a4e4234ccd8a844e/103d4/xss.png 1080w,\n/js2/static/8eb2b12643e10670a4e4234ccd8a844e/3d704/xss.png 1108w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/8eb2b12643e10670a4e4234ccd8a844e/18c9f/xss.webp 750w,\n/js2/static/8eb2b12643e10670a4e4234ccd8a844e/51d3a/xss.webp 1080w,\n/js2/static/8eb2b12643e10670a4e4234ccd8a844e/88976/xss.webp 1108w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.2842960288808664}},"base":"xss.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#0878b8","images":{"fallback":{"src":"/js2/static/216c8f19b48a13e3af5020937c6495fe/3f056/deployment.png","srcSet":"/js2/static/216c8f19b48a13e3af5020937c6495fe/f74f0/deployment.png 750w,\n/js2/static/216c8f19b48a13e3af5020937c6495fe/3f056/deployment.png 881w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/216c8f19b48a13e3af5020937c6495fe/00e18/deployment.webp 750w,\n/js2/static/216c8f19b48a13e3af5020937c6495fe/73e10/deployment.webp 881w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5811577752553916}},"base":"deployment.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/13b65def72e9840d86bcf161d0140f2d/487a4/places.png","srcSet":"/js2/static/13b65def72e9840d86bcf161d0140f2d/8d835/places.png 750w,\n/js2/static/13b65def72e9840d86bcf161d0140f2d/9b397/places.png 1080w,\n/js2/static/13b65def72e9840d86bcf161d0140f2d/c1308/places.png 1366w,\n/js2/static/13b65def72e9840d86bcf161d0140f2d/487a4/places.png 1599w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/13b65def72e9840d86bcf161d0140f2d/25f33/places.webp 750w,\n/js2/static/13b65def72e9840d86bcf161d0140f2d/f7d3e/places.webp 1080w,\n/js2/static/13b65def72e9840d86bcf161d0140f2d/cab24/places.webp 1366w,\n/js2/static/13b65def72e9840d86bcf161d0140f2d/e838a/places.webp 1599w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.35709818636647905}},"base":"places.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/ce4d88f5a75edb2b72efaaa71f7b0efc/e5078/authorizeNOK.png","srcSet":"/js2/static/ce4d88f5a75edb2b72efaaa71f7b0efc/8770b/authorizeNOK.png 750w,\n/js2/static/ce4d88f5a75edb2b72efaaa71f7b0efc/e5078/authorizeNOK.png 809w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/ce4d88f5a75edb2b72efaaa71f7b0efc/35881/authorizeNOK.webp 750w,\n/js2/static/ce4d88f5a75edb2b72efaaa71f7b0efc/a88f0/authorizeNOK.webp 809w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6093943139678616}},"base":"authorizeNOK.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8d8d8","images":{"fallback":{"src":"/js2/static/02183504e2708ac3e446f29003c8d7bc/60bc5/hacked.png","srcSet":"/js2/static/02183504e2708ac3e446f29003c8d7bc/60bc5/hacked.png 744w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/02183504e2708ac3e446f29003c8d7bc/67170/hacked.webp 744w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.4206989247311828}},"base":"hacked.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/7019197416b607b814455c5cde2bfd8d/8a955/authorizeOK.png","srcSet":"/js2/static/7019197416b607b814455c5cde2bfd8d/8a955/authorizeOK.png 747w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/7019197416b607b814455c5cde2bfd8d/b344d/authorizeOK.webp 747w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6666666666666666}},"base":"authorizeOK.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/cd56be61925d779c9a23f9ecdea56e09/fb68f/login.png","srcSet":"/js2/static/cd56be61925d779c9a23f9ecdea56e09/e56fa/login.png 750w,\n/js2/static/cd56be61925d779c9a23f9ecdea56e09/fb68f/login.png 879w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/cd56be61925d779c9a23f9ecdea56e09/5510b/login.webp 750w,\n/js2/static/cd56be61925d779c9a23f9ecdea56e09/da356/login.webp 879w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5017064846416383}},"base":"login.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#f8f8f8","images":{"fallback":{"src":"/js2/static/11b64c3a36326f1301636f365163fa87/487a4/carousel.png","srcSet":"/js2/static/11b64c3a36326f1301636f365163fa87/8d835/carousel.png 750w,\n/js2/static/11b64c3a36326f1301636f365163fa87/9b397/carousel.png 1080w,\n/js2/static/11b64c3a36326f1301636f365163fa87/c1308/carousel.png 1366w,\n/js2/static/11b64c3a36326f1301636f365163fa87/487a4/carousel.png 1599w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/11b64c3a36326f1301636f365163fa87/25f33/carousel.webp 750w,\n/js2/static/11b64c3a36326f1301636f365163fa87/f7d3e/carousel.webp 1080w,\n/js2/static/11b64c3a36326f1301636f365163fa87/cab24/carousel.webp 1366w,\n/js2/static/11b64c3a36326f1301636f365163fa87/e838a/carousel.webp 1599w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.35709818636647905}},"base":"carousel.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#d8d8e8","images":{"fallback":{"src":"/js2/static/b1265c3e6f56ce4944170b2dd149f5c7/87754/pizza.jpg","srcSet":"/js2/static/b1265c3e6f56ce4944170b2dd149f5c7/b3dd7/pizza.jpg 750w,\n/js2/static/b1265c3e6f56ce4944170b2dd149f5c7/870fe/pizza.jpg 1080w,\n/js2/static/b1265c3e6f56ce4944170b2dd149f5c7/f640e/pizza.jpg 1366w,\n/js2/static/b1265c3e6f56ce4944170b2dd149f5c7/87754/pizza.jpg 1920w","sizes":"100vw"},"sources":[{"srcSet":"/js2/static/b1265c3e6f56ce4944170b2dd149f5c7/2daa0/pizza.webp 750w,\n/js2/static/b1265c3e6f56ce4944170b2dd149f5c7/1aa4f/pizza.webp 1080w,\n/js2/static/b1265c3e6f56ce4944170b2dd149f5c7/8647b/pizza.webp 1366w,\n/js2/static/b1265c3e6f56ce4944170b2dd149f5c7/902b5/pizza.webp 1920w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1.5}},"base":"pizza.jpg"}}]}},"pageContext":{"slug":"/part3/auths-hmi/","frontmatter":{"title":"Sessions & JWT","description":"Sessions, authentification & utilisation d'op√©rations prot√©g√©es par JWT au sein d'une application React"}}},"staticQueryHashes":["1696221415","2461182183","3028011774","3458129946","501654901","575455071","641954533","758242238"],"slicesMap":{}}