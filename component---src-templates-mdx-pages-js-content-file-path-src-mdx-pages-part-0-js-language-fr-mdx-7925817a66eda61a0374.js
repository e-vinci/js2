"use strict";(self.webpackChunkmyjscourse=self.webpackChunkmyjscourse||[]).push([[7516],{108:function(e,n,l){l.r(n),l.d(n,{default:function(){return w}});var t=l(5680),r=l(6540);function a(e){const n=Object.assign({h1:"h1",p:"p",strong:"strong",code:"code",pre:"pre",ul:"ul",li:"li",h2:"h2",a:"a",br:"br",h3:"h3"},(0,t.RP)(),e.components),{InternalPageMenu:l,PathViewer:a,PathViewerItem:o,InternalPageMenuItem:c,InternalPageTitle:u}=n;return l||s("InternalPageMenu",!0),c||s("InternalPageMenuItem",!0),u||s("InternalPageTitle",!0),a||s("PathViewer",!0),o||s("PathViewerItem",!0),r.createElement(r.Fragment,null,r.createElement(n.h1,null,"c) Introduction au langage JS"),"\n",r.createElement(l,null,r.createElement(a,null,r.createElement(o,{to:"/"}," web2course "),r.createElement(o,{to:"/part0"}," Partie 0 "),r.createElement(o,{selected:!0}," c) JS ")),r.createElement(c,null," Les instructions "),r.createElement(c,null," Les commentaires "),r.createElement(c,null," Les variables et constantes "),r.createElement(c,null," Les opérateurs "),r.createElement(c,null," Les conditions "),r.createElement(c,null," Les fonctions "),r.createElement(c,null," Les boucles "),r.createElement(c,null," Les tableaux "),r.createElement(c,null," Les template literals "),r.createElement(c,null," Les objets "),r.createElement(c,null," Les exceptions "),r.createElement(c,null," Le destructuring assignment "),r.createElement(c,null," Les modules ES6 ")),"\n",r.createElement(n.p,null,"Le JS s'écrit tant dans un browser que dans un environnement serveur."),"\n",r.createElement(n.p,null,"Quand on écrit du JS au niveau client, on écrira du JS conforme au standard ",r.createElement(n.strong,null,r.createElement(n.code,null,"ECMAScript")),"."),"\n",r.createElement(n.p,null,"Quand on écrit du JS au niveau serveur, on écrira du Node.js, du JS qui autrefois était conforme au standard ",r.createElement(n.strong,null,r.createElement(n.code,null,"CommonJS")),". Néanmoins, on peut écrire des applications Node.js conforme à ",r.createElement(n.strong,null,r.createElement(n.code,null,"ECMAScript")),", ce qui devient de plus en plus la norme en entreprise."),"\n",r.createElement(n.p,null,"Nous avons ainsi un code compatible entre le client et le serveur."),"\n",r.createElement(n.h1,null,r.createElement(u,null," Les instructions ")),"\n",r.createElement(n.p,null,"👍 Même si ce n'est pas obligatoire, on recommande de séparer chaque instruction par un \" ",r.createElement(n.strong,null,r.createElement(n.code,null,";")),' ".'),"\n",r.createElement(n.p,null,"Cela permet d'augmenter la lisibilité du code."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"let x = 1;\r\nconsole.log('x = ', x);\n")),"\n",r.createElement(n.p,null,r.createElement(n.strong,null,r.createElement(n.code,null,"console.log()"))," : c'est une méthode qui permet d'afficher un message dans la console du browser ou de l'environnement Node.js. En Java, c'est l'équivalent de ",r.createElement(n.strong,null,r.createElement(n.code,null,"System.out.println()"))," en Java."),"\n",r.createElement(n.h1,null,r.createElement(u,null," Les commentaires ")),"\n",r.createElement(n.p,null,"On ajoute des commentaires dans son code via :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,'" ',r.createElement(n.strong,null,r.createElement(n.code,null,"//")),' " : une seule ligne commentée.'),"\n",r.createElement(n.li,null,'" ',r.createElement(n.strong,null,r.createElement(n.code,null,"/*")),' " et " ',r.createElement(n.strong,null,r.createElement(n.code,null,"*/")),' " : un bloc de lignes commenté.'),"\n",r.createElement(n.li,null,'" ',r.createElement(n.strong,null,r.createElement(n.code,null,"/**")),' " et " ',r.createElement(n.strong,null,r.createElement(n.code,null,"*/")),' " : un bloc de lignes commenté pour générer la ',r.createElement(n.code,null,"JSDoc")," d'une fonction."),"\n"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"/**\r\n * JSDoc as comments\r\n * @param {message} message to be displayed in console\r\n */\r\nfunction raiseAlert(message) {\r\n  // Single line comment\r\n  console.log(message); /* Regular comment\r\n    on multiple lines\r\n    */\r\n  console.log('An alert has been raised.');\r\n}\n")),"\n",r.createElement(n.h1,null,r.createElement(u,null," Les variables et constantes ")),"\n",r.createElement(n.h2,null,"Variable key sensitive"),"\n",r.createElement(n.p,null,"En JS, on ne déclare pas le type de variable, c'est un langage dynamiquement typé, c'est-à-dire que le type d'une variable est déterminé à l'exécution."),"\n",r.createElement(n.p,null,'Les variables sont sensibles à la casse (ou "case sensitive") :'),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"// two different variables\r\nlet monBrowser;\r\nlet monbrowser;\n")),"\n",r.createElement(n.h2,null,"Variables locales"),"\n",r.createElement(n.p,null,"Pour définir une variable locale dont sa portée est associée à un bloc,\r\non utilise : ",r.createElement(n.strong,null,r.createElement(n.code,null,"let")),"."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"if (true) {\r\n  let blockScope = 'Hello';\r\n  console.log(blockScope); // Hello\r\n}\r\nconsole.log(blockScope); // Uncaught ReferenceError: blockScope is not defined\n")),"\n",r.createElement(n.p,null,"Une variable ",r.createElement(n.strong,null,r.createElement(n.code,null,"let"))," ",r.createElement(n.a,{href:"/js2/references/#r7"},"[7.]")," :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"n'est pas accessible en dehors du bloc où elle est définie ;"),"\n",r.createElement(n.li,null,"est processée à l'exécution seulement ;"),"\n",r.createElement(n.li,null,"ne peut pas être redéclarée dans le même bloc."),"\n"),"\n",r.createElement(n.h2,null,"constantes locales"),"\n",r.createElement(n.p,null,"Pour définir une constante dont sa portée est associée à un bloc,\r\non utilise : ",r.createElement(n.strong,null,r.createElement(n.code,null,"const"))," ",r.createElement(n.a,{href:"/js2/references/#r8"},"[8.]"),"."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"if (true) {\r\n  const constVar = 'Hello';\r\n  console.log(constVar); // Hello\r\n  const SITE_URL = 'http://MyCMS.org';\r\n  console.log(SITE_URL); // http://MyCMS.org\r\n  constVar = 'Hi'; // Uncaught TypeError: Assignment to constant variable.\r\n  console.log(constVar);\r\n}\n")),"\n",r.createElement(n.h2,null,"Variables globales"),"\n",r.createElement(n.p,null,"Pour définir une variable globale si elle est déclarée en dehors d'une fonction, on utilise : ",r.createElement(n.strong,null,r.createElement(n.code,null,"var")),"."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"if (true) {\r\n  var globalVar = 'Hello';\r\n  console.log(globalVar); // Hello\r\n}\r\nconsole.log(globalVar); // Hello\n")),"\n",r.createElement(n.p,null,"Une variable ",r.createElement(n.strong,null,r.createElement(n.code,null,"var"))," est:"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,'processée avant l\'execution du code ("hoisting") ;'),"\n",r.createElement(n.li,null,"accessible au travers de tout le programme ;"),"\n",r.createElement(n.li,null,"redéclarable dans n’importe quel bloc."),"\n"),"\n",r.createElement(n.h2,null,"Variables dont la portée est associée à une fonction"),"\n",r.createElement(n.p,null,"Pour définir une variable ou constante dont la portée est associée à une fonction, on peut utiliser : ",r.createElement(n.strong,null,r.createElement(n.code,null,"let")),", ",r.createElement(n.strong,null,r.createElement(n.code,null,"const"))," ou ",r.createElement(n.strong,null,r.createElement(n.code,null,"var")),"."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"function checkScopeVarInFunction() {\r\n  var varInFunction = 'Hello';\r\n  console.log(varInFunction); // Hello\r\n}\r\ncheckScopeVarInFunction();\r\nconsole.log(varInFunction); // Uncaught ReferenceError: varInFunction is not defined\n")),"\n",r.createElement(n.p,null,"👍 Nous vous recommandons d'utiliser ",r.createElement(n.strong,null,r.createElement(n.code,null,"let"))," ou ",r.createElement(n.strong,null,r.createElement(n.code,null,"const"))," lorsque vous déclarer une variable ou constante au sein d'une fonction."),"\n",r.createElement("br"),"\n",r.createElement(n.h2,null,"Assignation d'une valeur à une variable non déclarée"),"\n",r.createElement(n.p,null,"L'assignation d'une valeur à une variable non déclarée crée implicitement une variable globale."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"function checkScopeVarInFunction() {\r\n  varInFunction = 'Hello';\r\n  console.log(varInFunction); // Hello\r\n}\r\ncheckScopeVarInFunction();\r\nconsole.log(varInFunction); // Hello\n")),"\n",r.createElement(n.p,null,"👍 Nous vous recommandons de ne jamais utiliser de variables non déclarées."),"\n",r.createElement("br"),"\n",r.createElement(n.h2,null,"Les dangers des variables globales"),"\n",r.createElement(n.p,null,"⚡ L'utilisation de variables globales peut s'avérer dangereux."),"\n",r.createElement(n.p,null,"On crée une variable globale soit via ",r.createElement(n.strong,null,r.createElement(n.code,null,"var")),", soit en initialisant une variable non déclarée."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"var index = 1;\r\nfor (index; index <= 3; index++) {\r\n  console.log(index); // 1 2 3\r\n}\r\nprint();\r\nfunction print() {\r\n  for (index; index <= 5; index++) {\r\n    console.log('Print ' + index); // Print 4 Print 5\r\n  }\r\n}\n")),"\n",r.createElement(n.p,null,"Dans cet exemple de code, on s'attendrait à ce que la deuxième boucle affiche :\r\n",r.createElement(n.strong,null,r.createElement(n.code,null,"Print 1 Print 2 Print 3 Print 4 Print 5")),"."),"\n",r.createElement(n.h2,null,"Recommandations concernant la portée de vos variables"),"\n",r.createElement(n.p,null,"⚡ L'utilisation de variables globales peut s'avérer dangereux quand on souhaiterait que la durée de vie de celle-ci corresponde à un bloc de code bien précis."),"\n",r.createElement(n.p,null,"👍 Nous vous recommandons de définir des variables dont la portée est correctement exprimée par le mot-clé utilisé lors de la définition :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"utilisez ",r.createElement(n.strong,null,r.createElement(n.code,null,"let"))," ou ",r.createElement(n.strong,null,r.createElement(n.code,null,"const"))," pour des variables ou constantes disponibles au sein d'un bloc de code uniquement;"),"\n",r.createElement(n.li,null,"utilisez ",r.createElement(n.strong,null,r.createElement(n.code,null,"var"))," (ou ",r.createElement(n.strong,null,r.createElement(n.code,null,"const")),") que si une variable (ou constante) doit être disponible au sein de tous les blocs d'un script. Néanmoins, même dans ce cas-ci, on préférera utiliser une variable via ",r.createElement(n.strong,null,r.createElement(n.code,null,"let")),"."),"\n"),"\n",r.createElement(n.h2,null,"Types de variables"),"\n",r.createElement(n.p,null,"Voici les types principaux de variables qui seront déterminés lors de l'initialisation d'une variable :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,r.createElement(n.strong,null,r.createElement(n.code,null,"Number"))," (Nombre) : un seul type pour les entiers, réels, doubles…"),"\n",r.createElement(n.li,null,r.createElement(n.strong,null,r.createElement(n.code,null,"String"))," (Chaîne) : comprise entre guillemets simples, doubles ou entre ",r.createElement(n.strong,null,"`")," et ",r.createElement(n.strong,null,"`"),"."),"\n",r.createElement(n.li,null,r.createElement(n.strong,null,r.createElement(n.code,null,"Bool"))," (Booléen)."),"\n",r.createElement(n.li,null,r.createElement(n.strong,null,r.createElement(n.code,null,"Array"))," (Tableau)."),"\n",r.createElement(n.li,null,r.createElement(n.strong,null,r.createElement(n.code,null,"Object"))," (Objet)."),"\n"),"\n",r.createElement(n.p,null,"Afin de renvoyer sous forme d'une string le type d'une expression, on utilise l'opérateur ",r.createElement(n.strong,null,r.createElement(n.code,null,"typeof")),"."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"console.log(typeof 12); // number\r\nconsole.log(typeof 'I love JS'); // string\r\nconsole.log(typeof true); // boolean\r\nconsole.log(typeof undeclaredVariable); // undefined\n")),"\n",r.createElement(n.h1,null,r.createElement(u,null," Les opérateurs ")),"\n",r.createElement(n.h2,null,"Opérateurs d'égalité ou de non égalité"),"\n",r.createElement(n.p,null,"Pour une comparaison stricte, sans conversion de type, on utilise ",r.createElement(n.strong,null,r.createElement(n.code,null,"==="))," ou ",r.createElement(n.strong,null,r.createElement(n.code,null,"!==")),"."),"\n",r.createElement(n.p,null,"Pour une comparaison avec conversion de type, on utilise ",r.createElement(n.strong,null,r.createElement(n.code,null,"=="))," ou ",r.createElement(n.strong,null,r.createElement(n.code,null,"!=")),"."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"1 === 1; // true\r\n'1' === 1; // false\r\n1 == 1; // true\r\n'1' == 1; // true\r\n0 == false; // true\r\n0 == null; // false\r\nvar object1 = { key: 'value' },\r\n  object2 = { key: 'value' };\r\nobject1 == object2; //false\n")),"\n",r.createElement(n.p,null,"👍 Nous recommandons en général d'utiliser l'égalité stricte sauf si vous souhaitez convertir le type des variables comparées."),"\n",r.createElement(n.h2,null,"Optional chaining operator : ?."),"\n",r.createElement(n.p,null,"L'opérateur ",r.createElement(n.strong,null,r.createElement(n.code,null,"?."))," permet de lire la valeur d'une propriété d'un objet sans devoir contrôler si la référence de l'objet est valide."),"\n",r.createElement(n.p,null,"Il agit comme l'opérateur ",r.createElement(n.strong,null,r.createElement(n.code,null,"."))," sauf qu'au lieu de causer une erreur si une référence (d'une variable) est \"nullish\", c'est-à-dire ",r.createElement(n.strong,null,r.createElement(n.code,null,"null"))," ou ",r.createElement(n.strong,null,r.createElement(n.code,null,"undefined")),", l'expression est court-circuitée et renvoie ",r.createElement(n.strong,null,r.createElement(n.code,null,"undefined")),"."),"\n",r.createElement(n.p,null,"Sans test de condition, voici un morceau de code qui soulève une exception :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"const adventurer = {\r\n  name: 'Alice',\r\n  cat: {\r\n    name: 'Dinah',\r\n  },\r\n};\r\n\r\nconst dogName = adventurer.dog.name; //Error: Cannot read properties of undefined (reading 'name')\r\nconsole.log(dogName);\n")),"\n",r.createElement(n.p,null,"En effet, la référence dog est ",r.createElement(n.strong,null,r.createElement(n.code,null,"undefined")),".",r.createElement(n.br),"\n",'Avant le récent "optional chaining operateur", voici ce que nous aurions pu écrire comme code avant d\'initialiser ',r.createElement(n.strong,null,r.createElement(n.code,null,"dogName"))," :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"const adventurer = {\r\n  name: 'Alice',\r\n  cat: {\r\n    name: 'Dinah',\r\n  },\r\n};\r\n\r\nlet dogName;\r\n\r\nif (adventurer !== undefined && adventurer.dog !== undefined)\r\n  // often simplified to : if(adventurer && adventurer.dog)\r\n  dogName = adventurer.dog.name;\r\n\r\nconsole.log(dogName); // undefined\n")),"\n",r.createElement(n.p,null,"Si la propriété d'un objet ne renvoyait jamais une valeur valide étant à ",r.createElement(n.strong,null,"false")," ou ",r.createElement(n.strong,null,"0"),", alors on simplifiait souvent le check des valeurs nullish à qqch du style :\r\n",r.createElement(n.strong,null,r.createElement(n.code,null,"if(adventurer && adventurer.dog)")),"."),"\n",r.createElement(n.p,null,"Maintenant, grâce à l'opérateur ",r.createElement(n.strong,null,r.createElement(n.code,null,"?.")),', nous pouvons écrire du code très concis et ne plus écrire de tests de conditions pour les valeurs de type "nullish" :'),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"const adventurer = {\r\n  name: 'Alice',\r\n  cat: {\r\n    name: 'Dinah',\r\n  },\r\n};\r\n\r\nconst dogName = adventurer?.dog?.name;\r\n\r\nconsole.log(dogName); // undefined\r\n\r\nconsole.log(adventurer?.someNonExistentMethod?.()); // undefined\r\n\r\nconsole.log(adventurer?.kids?.[0]?.name); // undefined\r\n\r\nconst kids = [{ name: 'John' }];\r\nlet kids2;\r\n\r\nconsole.log(kids?.[0]?.name); // \"John\"\r\nconsole.log(kids2?.[0]?.name); // undefined\n")),"\n",r.createElement(n.h2,null,"Nullish coalescing operator : ??"),"\n",r.createElement(n.p,null,'Le "nullish coalescing operator" permet de renvoyer ce qui se trouve à droite de l\'opérateur quand ce qui se trouve à gauche est "nullish" (',r.createElement(n.strong,null,r.createElement(n.code,null,"null"))," ou ",r.createElement(n.strong,null,r.createElement(n.code,null,"undefined")),")."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"const adventurer = {\r\n  name: 'Alice',\r\n  cat: {\r\n    name: 'Dinah',\r\n  },\r\n};\r\n\r\nconst dogName = adventurer?.dog?.name ?? 'No dog';\r\nconsole.log(dogName); // \"No dog\"\r\n\r\nconst catName = adventurer?.cat?.name ?? 'No cat';\r\nconsole.log(catName); // \"Dinah\"\n")),"\n",r.createElement(n.h2,null,"Spread operator : ..."),"\n",r.createElement(n.h3,null,"Spread operator au niveau d'un objet"),"\n",r.createElement(n.p,null,"Voici un exemple d'utilisation de ",r.createElement(n.strong,null,r.createElement(n.code,null,"spread operator"))," :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"const MENU = [\r\n  {\r\n    id: 1,\r\n    title: '4 fromages',\r\n    content: 'Gruyère, Sérac, Appenzel, Gorgonzola, Tomates',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Vegan',\r\n    content: 'Tomates, Courgettes, Oignons, Aubergines, Poivrons',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Vegetarian',\r\n    content: 'Mozarella, Tomates, Oignons, Poivrons, Champignons, Olives',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Alpage',\r\n    content: 'Gruyère, Mozarella, Lardons, Tomates',\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Diable',\r\n    content: 'Tomates, Mozarella, Chorizo piquant, Jalapenos',\r\n  },\r\n];\r\nconst updatedPizza = {...MENU[foundIndex], ...req.body};\n")),"\n",r.createElement(n.p,null,"Le ",r.createElement(n.strong,null,r.createElement(n.code,null,"spread operator"))," est très utile en JS, ce sont les ",r.createElement(n.strong,null,r.createElement(n.code,null,"...")),".",r.createElement(n.br),"\n","Ici, nous créons un nouvel objet en intégrant deux objets : ",r.createElement(n.strong,null,r.createElement(n.code,null,"MENU[foundIndex]"))," et ",r.createElement(n.strong,null,r.createElement(n.code,null,"req.body")),".",r.createElement(n.br),"\n","Le ",r.createElement(n.strong,null,r.createElement(n.code,null,"spread operator"))," permet de faire une \"shallow copy\", ou copie peu profonde, d'un élément de l'array ",r.createElement(n.strong,null,r.createElement(n.code,null,"MENU")),", à l'aide de ",r.createElement(n.strong,null,r.createElement(n.code,null,"...MENU[foundIndex]")),".",r.createElement(n.br),"\n","Cela reprend toutes les propriétés de l'objet identifié par ",r.createElement(n.strong,null,r.createElement(n.code,null,"foundIndex")),".",r.createElement(n.br),"\n","Ensuite, nous remplaçons les propriétés existantes de cette objet par les propriétés données dans ",r.createElement(n.strong,null,r.createElement(n.code,null,"req.body"))," à l'aide de ",r.createElement(n.strong,null,r.createElement(n.code,null,"...req.body")),". Bien sûr, si l'objet ",r.createElement(n.strong,null,r.createElement(n.code,null,"...req.body"))," contient des nouvelles propriétés, celles-ci seront ajoutée à ",r.createElement(n.strong,null,r.createElement(n.code,null,"updatedPizza")),"."),"\n",r.createElement(n.h3,null,"Spread operator au niveau d'un array"),"\n",r.createElement(n.p,null,"Voici un exemple de ",r.createElement(n.strong,null,r.createElement(n.code,null,"spread operator"))," (voir les 3 petits points) :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"orderedMenu = [...MENU].sort((a, b) => a.title.localeCompare(b.title));\n")),"\n",r.createElement(n.p,null,"Ici nous souhaitons faire un tri d'un ",r.createElement(n.strong,null,r.createElement(n.code,null,"MENU"))," (qui est un array) sur base d'une copie de celui-ci.",r.createElement(n.br),"\n","💭 Mais pourquoi le faire sur une copie ?",r.createElement(n.br),"\n","Si nous autorisons à trier l'array associé au ",r.createElement(n.strong,null,r.createElement(n.code,null,"MENU")),", lorsque nous tenterons d'ajouter un nouvel élément, le dernier élément de l'array ne contiendra plus le dernier id (ou l'id le plus haut), car la fonction ",r.createElement(n.strong,null,r.createElement(n.code,null,"sort"))," modifie l'array sur lequel la méthode est appelée !",r.createElement(n.br),"\n","Nous souhaitons donc travailler sur une copie de cet array : ",r.createElement(n.strong,null,r.createElement(n.code,null,"[...MENU]"))," crée un nouveau tableau contenant tous les éléments du ",r.createElement(n.strong,null,r.createElement(n.code,null,"MENU")),"."),"\n",r.createElement(n.h3,null,"Spread operator en résumé"),"\n",r.createElement(n.p,null,"Le ",r.createElement(n.strong,null,r.createElement(n.code,null,"spread operator"))," est très puissant, il permet d'écrire du code concis et lisible.",r.createElement(n.br),"\n","Il est utilisé dans les objets, les arrays, ainsi que comme paramètre de fonction."),"\n",r.createElement(n.p,null,"N'hésitez pas à consulter la ",r.createElement(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax"},"documentation de MDN")," ",r.createElement(n.a,{href:"/js2/references/#r57"},"[R.57]")," pour en savoir plus."),"\n",r.createElement(n.h2,null,"Les autres opérateurs"),"\n",r.createElement(n.p,null,"Nous ne verrons pas tous les opérateurs logiques dans ce cours, ils sont sensés être connus."),"\n",r.createElement(n.p,null,"Par exemple, les opérateurs logiques sont les habituels : ",r.createElement(n.strong,null,r.createElement(n.code,null,"&&")),", ",r.createElement(n.strong,null,r.createElement(n.code,null,"||")),", ",r.createElement(n.strong,null,r.createElement(n.code,null,"!"))),"\n",r.createElement(n.p,null,"Néanmoins, vous avez tous les opérateurs disponibles dans ",r.createElement(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators"},"la documentation MDN ici")," ",r.createElement(n.a,{href:"/js2/references/#r9"},"[R.9]"),"."),"\n",r.createElement(n.h1,null,r.createElement(u,null," Les conditions ")),"\n",r.createElement(n.p,null,"Comme dans la majorité des langages, les instructions conditionnelles sont construites à l'aide de ",r.createElement(n.strong,null,r.createElement(n.code,null,"if"))," ... ",r.createElement(n.strong,null,r.createElement(n.code,null,"else")),"."),"\n",r.createElement(n.p,null,"Si vous souhaitez revoir les instructions conditionnelles, vous pouvez le faire dans la ",r.createElement(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Control_flow_and_error_handling#conditional_statements"},"documentation MDN ici")," ",r.createElement(n.a,{href:"/js2/references/#r10"},"[R.10]"),"."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"let isAuthenticated = false;\r\nif (isAuthenticated) {\r\n  console.log('Render the HomePage.');\r\n  console.log('You are authenticated.');\r\n} else {\r\n  console.log('Render the Login Page.'); // Render the Login Page.\r\n  console.log('You are not authenticated.'); // You are not authenticated.\r\n}\n")),"\n",r.createElement(n.p,null,"Voici un exemple de ",r.createElement(n.strong,null,r.createElement(n.code,null,"switch"))," :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"let foo = 0;\r\nswitch (foo) {\r\n  case -1:\r\n    console.log('negative 1');\r\n    break;\r\n  case 0: // foo is 0 so criteria met here so this block will run\r\n    console.log(0);\r\n  case 1: // no break statement in 'case 0:' so this case will run as well\r\n    console.log(1);\r\n    break; // it encounters this break so will not continue into 'case 2:'\r\n  case 2:\r\n    console.log(2);\r\n    break;\r\n  default:\r\n    console.log('default');\r\n}\n")),"\n",r.createElement(n.h1,null,r.createElement(u,null," Les fonctions ")),"\n",r.createElement(n.p,null,"En JS, il existe plusieurs façon de déclarer des fonctions."),"\n",r.createElement(n.h2,null,"Les fonctions personnalisées"),"\n",r.createElement(n.p,null,"Ce sont des fonctions qui portent un nom, définies à l'aide du mot-clé ",r.createElement(n.strong,null,r.createElement(n.code,null,"function")),"."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"function welcomeMessage(message) {\r\n  return 'Message : ' + message;\r\n}\r\nlet message = welcomeMessage('Welcome to everyone!');\r\nconsole.log(message); // Message : Welcome to everyone!\n")),"\n",r.createElement(n.h2,null,"Les fonctions comme valeurs de variables"),"\n",r.createElement(n.p,null,"En JS, on peut assigner une fonction comme valeur de variable :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"function welcomeMessage(message) {\r\n  return 'Message : ' + message;\r\n}\r\nlet x = welcomeMessage;\r\nmessage = x('Hi');\r\nconsole.log(message); // Message : Hi\n")),"\n",r.createElement(n.h3,null,"Les fonctions anonymes"),"\n",r.createElement(n.p,null,"Ce sont des fonctions qui ne portent pas de nom."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"const welcome = function (message) {\r\n  return 'Message : ' + message;\r\n};\r\nmessage = welcome('Hello world ; )');\r\nconsole.log(message); // Message : Hello world ; )\n")),"\n",r.createElement(n.p,null,"Si une fonction n'est jamais réutilisée et est très courte, il est parfois pratique de ne pas lui donner de nom."),"\n",r.createElement(n.h2,null,'Les fonctions "arrow"'),"\n",r.createElement(n.p,null,"Ce sont des fonctions qui ne portent pas de nom et qui s'écrivent sous une forme encore plus courte que les fonctions anonymes."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"const welcome2 = (message) => {\r\n  return 'Message : ' + message;\r\n};\r\nmessage = welcome2('Hello world...');\r\nconsole.log(message); // Message : Hello world...\r\n// OTHER EXAMPLE\r\nconst higher = (n) => n + 1;\r\nconsole.log(higher(1)); // 2\n")),"\n",r.createElement(n.p,null,"On peut ne pas mettre les parenthèses si et seulement si la fonction ne possède qu'un seul paramètre."),"\n",r.createElement(n.p,null,"On peut ne pas mettre les accolades si et seulement si le code est une expression, c'est-à-dire si la fonction renvoie quelque chose ; dans ce cas, on ne met pas de ",r.createElement(n.strong,null,r.createElement(n.code,null,"return")),"."),"\n",r.createElement(n.h2,null,"Les paramètres de fonctions"),"\n",r.createElement(n.p,null,"Les paramètres d'une fonction sont optionnels. Lors de l'appel d'une fonction, le valeur ",r.createElement(n.strong,null,r.createElement(n.code,null,"undefined"))," est allouée aux paramètres manquants."),"\n",r.createElement(n.p,null,"Les paramètres ont une portée locale au sein de la fonction."),"\n",r.createElement(n.p,null,"Le passage des paramètres se fait par valeur, sauf pour les objets où il se fait par référence."),"\n",r.createElement(n.p,null,"Voici un exemple de passage d'un paramètre par valeur (la variable utilisée dans la fonction est un clone du paramètre qui a été passé à la fonction lors de l'appel) :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"let myMessage = 'Hello';\r\nprint(myMessage);\r\nfunction print(myMessage) {\r\n  console.log(myMessage); // Hello\r\n  myMessage = 'Good bye';\r\n}\r\nconsole.log(myMessage); // Hello\n")),"\n",r.createElement(n.p,null,"Voici un exemple de passage d'un paramètre, un objet, par référence (la variable utilisée dans la fonction n'est pas un clone du paramètre qui a été passé à la fonction lors de l'appel, c'est l'objet lui-même) :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"let myMessage = { content: 'Hello' };\r\nconsolePrint(myMessage);\r\nfunction consolePrint(myMessage) {\r\n  console.log(myMessage.content); // Hello\r\n  myMessage.content = 'Good bye';\r\n}\r\nconsole.log(myMessage.content); // Good bye\n")),"\n",r.createElement(n.p,null,"Les fonctions acceptent des paramètres optionnels avec une valeur par défaut qui est allouée lorsque ces paramètres sont omis lors de l'appel :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"let welcome3 = function (message = 'HI DEAR HUMAN!') {\r\n  return 'Message : ' + message;\r\n};\r\nmessage = welcome3();\r\nconsole.log(message); // Message : HI DEAR HUMAN\n")),"\n",r.createElement(n.h2,null,"Autres caractéristiques des fonctions"),"\n",r.createElement(n.p,null,"Il existe encore d'autres caractéristiques pour les fonctions."),"\n",r.createElement(n.p,null,"Par exemple, une fonction retourne une valeur à l'aide de ",r.createElement(n.strong,null,r.createElement(n.code,null,"return")),"."),"\n",r.createElement(n.p,null,"Si vous souhaitez en savoir plus, vous pouvez lire ",r.createElement(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions"},"la documentation MDN ici")," ",r.createElement(n.a,{href:"/js2/references/#r11"},"[R.11]"),"."),"\n",r.createElement(n.h1,null,r.createElement(u,null," Les boucles ")),"\n",r.createElement(n.p,null,"Les boucles permettent de répéter certaines tâches."),"\n",r.createElement(n.p,null,"Si vous souhaitez en savoir plus sur l'utilisation de différents types de boucles en JS, vous pouvez le faire via la ",r.createElement(n.a,{href:"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Looping_code"},"documentation MDN ici")," ",r.createElement(n.a,{href:"/js2/references/#r12"},"[R.12]"),"."),"\n",r.createElement(n.p,null,"On utilise ces mots-clés pour définir des boucles en JS :\r\n",r.createElement(n.strong,null,r.createElement(n.code,null,"for")),", ",r.createElement(n.strong,null,r.createElement(n.code,null,"for")),"/",r.createElement(n.strong,null,r.createElement(n.code,null,"in")),", ",r.createElement(n.strong,null,r.createElement(n.code,null,"for")),"/",r.createElement(n.strong,null,r.createElement(n.code,null,"of")),", ",r.createElement(n.strong,null,r.createElement(n.code,null,"while")),", ",r.createElement(n.strong,null,r.createElement(n.code,null,"do")),"/",r.createElement(n.strong,null,r.createElement(n.code,null,"while")),"."),"\n",r.createElement(n.p,null,"Nous verrons aussi plus tard qu'il existe des fonctions sur des ",r.createElement(n.strong,null,r.createElement(n.code,null,"Array"))," permettant de boucler sur les éléments d'un tableau."),"\n",r.createElement(n.p,null,"S'il y a un type de boucle à retenir, c'est la boucle ",r.createElement(n.strong,null,r.createElement(n.code,null,"for")),", la plus classique, qui fonctionne dans tous les langages et avec la majorité des structures de données :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"for (let index = 0; index < 5; index++) {\r\n  console.log(index); // 0 1 2 3 4\r\n}\n")),"\n",r.createElement(n.h1,null,r.createElement(u,null," Les tableaux ")),"\n",r.createElement(n.h2,null,"Introduction"),"\n",r.createElement(n.p,null,"Les tableaux sont des variables ou constantes de type ",r.createElement(n.strong,null,r.createElement(n.code,null,"Array")),".",r.createElement(n.br),"\n","Un array (ou tableau) est un ensemble ordonné de valeurs auxquelles ont fait référence avec un nom et un indice."),"\n",r.createElement(n.h2,null,"Création de tableaux"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},'const LIBRARIES = ["Anime.js", "Three.js", "Phaser.io"];\r\nconst emptyArray = [];\r\nconst LIBRARIES_NOT_RECOMMENDED = new Array("Anime.js", "Three.js", "Phaser.io");\r\nconst emptyArrayNotRecommended = new Array();\r\nconst arr = new Array(10, 100) ; // What is the result ? \r\nconst arr2 = new Array(10) ; // What is the result ? \r\n}\n')),"\n",r.createElement(n.p,null,"⚡ Dans l'exemple ci-dessus, ",r.createElement(n.strong,null,r.createElement(n.code,null,"arr"))," est un tableau de deux éléments contenant les valeurs ",r.createElement(n.strong,null,r.createElement(n.code,null,"10"))," et ",r.createElement(n.strong,null,r.createElement(n.code,null,"100")),". Or ",r.createElement(n.strong,null,r.createElement(n.code,null,"arr2"))," est un tableau de ",r.createElement(n.strong,null,"`10")," éléments ne contenant aucune valeur...\r\nC'est assez déroutant et donc déconseillé de créer un tableau à l'aide du constructeur."),"\n",r.createElement(n.p,null,"👍 Il est recommandé de créer un array à l'aide de ",r.createElement(n.strong,null,r.createElement(n.code,null,"[]")),"."),"\n",r.createElement(n.h2,null,"Parcourir un tableau"),"\n",r.createElement(n.p,null,"On peut parcourir un tableau soit à l'aide des boucles classiques (",r.createElement(n.strong,null,r.createElement(n.code,null,"for"))," & ",r.createElement(n.strong,null,r.createElement(n.code,null,".length")),"), soit à l'aide de la méthode ",r.createElement(n.strong,null,r.createElement(n.code,null,"forEach()")),"."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"for (let index = 0; index < LIBRARIES.length; index++) {\r\n  console.log(LIBRARIES[index]); // Anime.js Three.js Phaser.io\r\n}\r\n\r\nLIBRARIES.forEach((item, index) => console.log('[' + index + ']: ' + item));\r\n// [0]: Anime.js [1]: Three.js [2]: Phaser.io\r\n\r\nLIBRARIES.forEach(function (item) {\r\n  return console.log(item); // Anime.js Three.js Phaser.io\r\n});\n")),"\n",r.createElement(n.h2,null,"Les tableaux multidimensionnels"),"\n",r.createElement(n.p,null,"Un tableau à deux dimensions, en JS, est un tableau dont tous ses éléments sont des tableaux."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},'const numberOfRows = 2,\r\nconst numberOfColumns = 2;\r\nconst myTab = [];\r\nfor (let x = 0; x < numberOfRows; x++) {\r\n  myTab.push([]); // cleaner than : myTab[x] = [];\r\n  for (let y = 0; y < numberOfColumns; y++) {\r\n    myTab[x].push("[" + x + "][" + y + "]"); \r\n    // myTab[x][y] = "[" + x + "][" + y + "]"; not recommended\r\n    console.log(myTab[x][y]);\r\n  }\r\n}\n')),"\n",r.createElement(n.h2,null,"Autres méthodes associées aux tableaux"),"\n",r.createElement(n.p,null,"Il existe de nombreuses méthodes intéressantes associées aux tableaux, comme : ",r.createElement(n.strong,null,r.createElement(n.code,null,"pop()")),", ",r.createElement(n.strong,null,r.createElement(n.code,null,"map()")),", ",r.createElement(n.strong,null,r.createElement(n.code,null,"indexOf()")),"."),"\n",r.createElement(n.p,null,"Si vous souhaitez approfondir ce sujet, vous pouvez consulter ",r.createElement(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"},"la MDN documentation ici")," ",r.createElement(n.a,{href:"/js2/references/#r13"},"[R.13]"),"."),"\n",r.createElement(n.h1,null,r.createElement(u,null," Les template literals ")),"\n",r.createElement(n.p,null,"On peut écrire des String sur plusieurs lignes à l'aide de ",r.createElement(n.strong,null,"` `"),"."),"\n",r.createElement(n.p,null,"Il est possible d'inclure des expressions, généralement les valeurs de variables, dans des String en utilisant ",r.createElement(n.strong,null,r.createElement(n.code,null,"${}")),"."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"for (let i = 0; i < LIBRARIES.length; i++) {\r\n  htmlText += `<li class='list-group-item'>\r\n                  ${LIBRARIES[i]}\r\n               </li>`;\r\n}\n")),"\n",r.createElement(n.h1,null,r.createElement(u,null," Les objets ")),"\n",r.createElement(n.h2,null,"Introduction"),"\n",r.createElement(n.p,null,"En JS, tout est objet : les Strings, les tableaux, les API du browser, les objets personnalisés..."),"\n",r.createElement(n.p,null,"Cette partie ne donne que les bases de la gestion d'objets. Une autre partie du cours, appelée l'orienté objet en JS, fournit plus de détails."),"\n",r.createElement(n.h2,null,"Création d'objets"),"\n",r.createElement(n.h3,null,"Introduction"),"\n",r.createElement(n.p,null,"Il existe plusieurs façons de créer un objet en JS."),"\n",r.createElement(n.h3,null,'Création d\'un "object literal"'),"\n",r.createElement(n.p,null,'On peut créer un "object literal", qui est une liste de paires clé/valeur.'),"\n",r.createElement(n.p,null,"La clé sera le nom de la propriété d'un objet."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"let raphael = {\r\n  firstname: 'Raphael',\r\n  lastname: 'Baroni',\r\n  sayHello: () => 'Hi everyone !',\r\n};\n")),"\n",r.createElement(n.h3,null,"Création d'objets vide"),"\n",r.createElement(n.p,null,"On crée un objet vide via ",r.createElement(n.strong),"."),"\n",r.createElement(n.p,null,"⚡ Il n'est pas recommandé de créer un objet en utilisant le constructeur d' ",r.createElement(n.strong,null,r.createElement(n.code,null,"Object"))," via le mot clé ",r.createElement(n.strong,null,r.createElement(n.code,null,"new")),"."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"let sandra = {};\r\nsandra.firstname = 'Sandra';\r\nsandra.lastname = 'Parisi';\n")),"\n",r.createElement(n.h2,null,"Accéder aux propriétés d’un objet"),"\n",r.createElement(n.h3,null,"Introduction"),"\n",r.createElement(n.p,null,"Il existe deux façons d'accéder aux propriétés d'un objet."),"\n",r.createElement(n.h3,null,"Accès à une propriété via un ."),"\n",r.createElement(n.p,null,"On accède régulièrement aux propriétés d'un objet via un ",r.createElement(n.strong,null,r.createElement(n.code,null,"."))," :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"console.log(raphael.firstname, ' :', raphael.sayHello()); // Raphael  : Hi everyone !\n")),"\n",r.createElement(n.h3,null,'Accès à une propriété via un ["object_key"]'),"\n",r.createElement(n.p,null,"On utilisera la clé, c'est-à-dire le nom de la propriété recherchée, sous forme de String, principalement dans les cas où l'on souhaite, lors de l'exécution, accéder dynamiquement à une propriété :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"console.log(sandra['firstname'], ',', sandra['lastname']);\r\n// Sandra , Parisi\n")),"\n",r.createElement(n.h1,null,r.createElement(u,null," Les exceptions ")),"\n",r.createElement(n.h2,null,"Lancer une expression"),"\n",r.createElement(n.p,null,"Les exceptions permettent de gérer des cas d'erreur se produisant lors de l'exécution de vos scripts."),"\n",r.createElement(n.p,null,"On lance une exception à l'aide du mot clé ",r.createElement(n.strong,null,r.createElement(n.code,null,"throw"))," et d'une expression."),"\n",r.createElement(n.p,null,"On peut construire ses propres exception, en faisant un ",r.createElement(n.strong,null,r.createElement(n.code,null,"throw"))," de String, Number, Boolean ou Object."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"function divideXByY(x, y) {\r\n  if (y === 0) throw 'Division by 0 ! ';\r\n  return x / y;\r\n}\r\ndivideXByY(5, 0); // Uncaught Division par 0 !\n")),"\n",r.createElement(n.p,null,"On peut aussi lancer des exceptions à l'aide d'objets qui facilitent la gestion des exceptions : cela peut être l'objet ",r.createElement(n.strong,null,r.createElement(n.code,null,"Error"))," ou d'autres types d'erreurs prédéfinies par l'environnement JS (",r.createElement(n.strong,null,r.createElement(n.code,null,"RangeError")),", ",r.createElement(n.strong,null,r.createElement(n.code,null,"SyntaxError")),"...)"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"function RegularDivideXByY(x, y) {\r\n  if (y === 0) throw new RangeError('Division by 0 ! ');\r\n  return x / y;\r\n}\r\ntry {\r\n  RegularDivideXByY(5, 0);\r\n} catch (err) {\r\n  console.log('RegularDivideXbyY():', err.name, ':', err.message);\r\n  // RegularDivideXbyY() : RangeError: Division by 0 !\r\n}\n")),"\n",r.createElement(n.p,null,'Les deux propriétés intéressantes de "JS built-in error objects" sont : ',r.createElement(n.strong,null,r.createElement(n.code,null,"name"))," & ",r.createElement(n.strong,null,r.createElement(n.code,null,"message")),"."),"\n",r.createElement(n.p,null,"Il est possible de créer vos propres classes d'erreur (en héritant de la classe ",r.createElement(n.strong,null,r.createElement(n.code,null,"Error")),")."),"\n",r.createElement(n.p,null,'Si vous souhaitez plus de détails sur les "JS built-in error objects", vous pouvez parcourir ',r.createElement(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#error_types"},"la documentation MDN ici")," ",r.createElement(n.a,{href:"/js2/references/#r14"},"[R.14]"),"."),"\n",r.createElement(n.h2,null,"Intercepter une expression"),"\n",r.createElement(n.p,null,"On gère l'apparition d'une exception au sein d'un bloc de code à l'aide de ",r.createElement(n.strong,null,r.createElement(n.code,null,"try"))," ... ",r.createElement(n.strong,null,r.createElement(n.code,null,"catch"))," et éventuellement ",r.createElement(n.strong,null,r.createElement(n.code,null,"finally"))," :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,r.createElement(n.strong,null,r.createElement(n.code,null,"try{...}"))," : partie de code monitorée ;"),"\n",r.createElement(n.li,null,r.createElement(n.strong,null,r.createElement(n.code,null,"catch(err){...}"))," : instructions à exécuter en réponses à une exception ;"),"\n",r.createElement(n.li,null,r.createElement(n.strong,null,r.createElement(n.code,null,"finally{...}"))," : code à exécuter dans tous les cas après le ",r.createElement(n.strong,null,r.createElement(n.code,null,"try"))," ... ",r.createElement(n.strong,null,r.createElement(n.code,null,"catch")),", qu'il y ait eu une exception ou pas."),"\n"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"let result;\r\ntry {\r\n  result = RegularDivideXByY(5, 0);\r\n} catch (err) {\r\n  console.log('RegularDivideXbyY():', err.name, ':', err.message); // RegularDivideXbyY() : RangeError: Division by 0 !\r\n} finally {\r\n  console.log(\r\n    'RegularDivideXbyY() results:',\r\n    result,\r\n    \"JS Divion's result\",\r\n    5 / 0\r\n  );\r\n  // RegularDivideXbyY() results: undefined JS Division's result Infinity\r\n}\n")),"\n",r.createElement(n.h1,null,r.createElement(u,null," Le destructuring assignment ")),"\n",r.createElement(n.p,null,"Voici un exemple de ",r.createElement(n.strong,null,r.createElement(n.code,null,"destructing assignment")),", une façon très concise en JS de créer des variables à partir de propriétés d'objets ou des valeurs d'arrays :"),"\n",r.createElement(n.pre,{highlighting:"3"},r.createElement(n.code,{className:"language-js"},"// Here the variable and constants are defined\r\nconst decodedToken = jwt.verify(token, jwtSecret); // return the token payload\r\nconst { username, iat, exp } = decodedToken;\n")),"\n",r.createElement(n.p,null,"Imaginez ici que la valeur de ",r.createElement(n.strong,null,r.createElement(n.code,null,"decodedToken"))," est : ",r.createElement(n.strong,null,r.createElement(n.code,null,"{ username: 'admin', iat: 1661251095, exp: 1747651095 }")),"."),"\n",r.createElement(n.p,null,"Ce code ",r.createElement(n.strong,null,r.createElement(n.code,null,"const { username, iat, exp } = decodedToken;"))," est l'équivalent de :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"const username = decodedToken.username;\r\nconst iat = decodedToken.iat;\r\nconst exp = decodedToken.exp;\n")),"\n",r.createElement(n.p,null,"Pour en savoir plus sur la puissance du ",r.createElement(n.strong,null,r.createElement(n.code,null,"destructuring assignement")),", vous pouvez consulter la ",r.createElement(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment"},"documentation de MDN")," ",r.createElement(n.a,{href:"/js2/references/#r64"},"[R.64]"),"."),"\n",r.createElement(n.h1,null,r.createElement(u,null," Les modules ES6 ")),"\n",r.createElement(n.h2,null,"Les modules"),"\n",r.createElement(n.p,null,"Les modules ES6 (ou ECMAScript 2015) améliorent la structure, la réutilisabilité, et la gestion des dépendances du code JavaScript, facilitant ainsi le développement et la maintenance des applications."),"\n",r.createElement(n.p,null,"ES6, ou ECMAScript 2015, est une version majeure de la norme ECMAScript, qui sert à standardiser et améliorer la syntaxe et les capacités de JavaScript."),"\n",r.createElement(n.p,null,"Les modules ES6 sont standardisés et sont largement supportés par les navigateurs modernes, offrant une alternative aux systèmes de modules précédents comme CommonJS venant du monde Node.js."),"\n",r.createElement(n.p,null,"En JavaScript / TypeScript, les modules sont définis en utilisant des fichiers séparés. Chaque fichier ",r.createElement(n.code,null,".js")," ou ",r.createElement(n.code,null,".jsx")," ou ",r.createElement(n.code,null,".ts")," ou ",r.createElement(n.code,null,".tsx")," est considéré comme un module. Vous pouvez exporter et importer des fonctionnalités (fonctions, classes, variables, interfaces, etc.) entre ces fichiers."),"\n",r.createElement(n.h2,null,"Exporter et Importer par défaut"),"\n",r.createElement(n.h3,null,"Exporter par défaut"),"\n",r.createElement(n.p,null,"Vous pouvez avoir un seul export par défaut par fichier. L'export par défaut peut être une fonction, une classe, une variable, etc."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"// math.js\r\nconst multiply = (a: number, b: number): number => {\r\n  return a * b;\r\n};\r\n\r\nexport default multiply;\n")),"\n",r.createElement(n.h3,null,"Importer un Export par défaut"),"\n",r.createElement(n.p,null,"Lorsqu'un objet a été exporté via un \"default export\", on l'importe en lui donnant le nom que l'on souhaite à l'import et en indiquant le chemin vers le module à utiliser."),"\n",r.createElement(n.p,null,"👍 Néanmoins, afin de ne pas créer la confusion, nous recommandons d'utiliser le même nom que celui utilisé lors de l'export."),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"import multiply from './math';\r\n\r\nconsole.log(multiply(2, 3)); // 6\n")),"\n",r.createElement(n.p,null,"👍 Il est recommandé, lorsqu'on indique le chemin du module que l'on importe, de ne pas indiquer l'extension du nom de fichier (",r.createElement(n.code,null,".ts")," ou ",r.createElement(n.code,null,".tsx")," ou ",r.createElement(n.code,null,".js")," ou ",r.createElement(n.code,null,".jsx"),", on évite donc ",r.createElement(n.code,null,"import multiply from './math.js';"),"). Cela rend le code plus lisible. D'ailleurs, votre linter va vous forcer à ne pas indiquer les extensions de vos modules."),"\n",r.createElement(n.p,null,"🤝 Il est possible d'utiliser l'autocompletion pour générer le chemin vers un \"default export module\". Il suffit de taper ici ",r.createElement(n.code,null,"import multiply")," et d'appuyer sur ",r.createElement(n.code,null,"Enter")," et VS Code générera automatiquement le chemin (path) du module."),"\n",r.createElement(n.p,null,"Notons qu'ici nous aurions pu donner n'importe quel nom à la fonction ",r.createElement(n.code,null,"multiply")," lors de l'import, par exemple :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"import times from './math';\r\n\r\nconsole.log(times(2, 3)); // 6\n")),"\n",r.createElement(n.p,null,"Il est aussi possible d'importer des objets de packages offerts par la communauté via votre gestionnaire de package.\r\nPour ce faire, il est juste nécessaire d'indiquer le nom du package lors de l'import."),"\n",r.createElement(n.p,null,'Pour un "default import", il faut trouver un package qui met à disposition un seul objet, ce qui est peu commun.'),"\n",r.createElement(n.p,null,"En voici un exemple, l'import d'une librairie permettant de réaliser des animations :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"import anime from 'animejs/lib/anime.es.js';\n")),"\n",r.createElement(n.p,null,"Bien sûr, avant d'importer un objet d'un package, il faut l'avoir préalablement installé 😉."),"\n",r.createElement(n.h2,null,"Exporter et Importer via des noms"),"\n",r.createElement(n.h3,null,'Exporter via des noms ("named export")'),"\n",r.createElement(n.p,null,'Lorsque l\'on souhaite exporter plusieurs objets (fonctions, constantes, objets, classes, interfaces...), nous allons généralement le faire via une "named export", à la fin du script.'),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"// ... some code to define three functions\r\n\r\nexport { setPageTitle, setHeaderTitle, setFooterTitle };\n")),"\n",r.createElement(n.p,null,'Il est aussi possible de faire des "named export" à la volée en utilisant export à différents endroits d\'un script :'),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"export function setPageTitle(title:string){\r\n  // Definition of function\r\n}\r\n\r\nexport function setHeaderTitle(title:string){\r\n  // Definition of function\r\n}\r\n\r\nexport function setFooterTitle(title:string){\r\n  // Definition of function\r\n}\n")),"\n",r.createElement(n.p,null,"👎 Bien que cette façon se retrouve régulièrement dans des exemples sur le web, nous déconseillons les exports à la volée."),"\n",r.createElement(n.p,null,"👍 En effet, il est bien plus clair de trouver tous les exports à la fin d'un script. Ainsi, nous ne perdons pas de temps à les chercher dans le corps du script."),"\n",r.createElement(n.h3,null,"Importer un named export"),"\n",r.createElement(n.p,null,"Lorsqu'un objet a été exporté via un \"Named export\", on l'importe en utilisant des accolades et en indiquant le chemin vers le module à utiliser."),"\n",r.createElement(n.p,null,"Par exemple, pour importer les fonctions ",r.createElement(n.code,null,"setPageTitle")," et ",r.createElement(n.code,null,"setHeaderTitle")," définies ci-dessus, il suffit de faire :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"import { setPageTitle, setHeaderTitle } from './utils/render';;\n")),"\n",r.createElement(n.p,null,"Si l'on souhaitait changer le nom, on pourrait le faire via le mot-clé ",r.createElement(n.code,null,"as")," :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"import { setPageTitle as renderPageTitle, setHeaderTitle as renderHeaderTitle} from './utils/render';;\n")))}var o=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.RP)(),e.components);return n?r.createElement(n,e,r.createElement(a,e)):a(e)};function s(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}var c=l(4810),u=l(2662),i=l(9640),m=l(5938),d=l(9460),E=l(7929),p=l(794),g=l(4092),f=l(4262),v=l(3528),b=l(9942),h=l(4698),x=l(2214),y=l(9838),j=(l(1262),l(1731)),S=l(7050),N=l(2483),I=l(4902),q=l(9294),L=l(7828),A=l(2035),M=l(5590);const P={Link:c.Link,Image:i.A,Section:m.A,Content:d.A,Background:E.A,SectionHeader:p.A,SectionFooter:g.A,PageHeader:f.A,CodeBlock:b.A,LinkFile:h.A,ScrollableImage:x.A,PublicProjectsView:y.A,AuthenticatedBlock:j.A,UnAuthenticatedBlock:S.A,NestedMdxBlock:N.A,YoutubeImage:I.A,InternalPageMenu:q.A,InternalPageMenuItem:L.A,InternalPageTitle:A.A,PathViewer:M.E,PathViewerItem:M.F};function R(e){var n,l,a,o,s;let{data:{mdx:c,allImages:i},children:m}=e;return P.PageHeader=(0,v.R)(f.A,null==c?void 0:c.frontmatter),r.createElement(u.A,Object.assign({},null!=c&&c.frontmatter?{frontmatter:c.frontmatter}:{},null!=c&&null!==(n=c.frontmatter)&&void 0!==n&&n.navbarExtraStyles?{navbarExtraStyles:c.frontmatter.navbarExtraStyles}:{},null!=c&&null!==(l=c.frontmatter)&&void 0!==l&&l.headerImage?{headerImage:c.frontmatter.headerImage}:{},null!=c&&null!==(a=c.frontmatter)&&void 0!==a&&a.featuredImage?{featuredImage:c.frontmatter.featuredImage}:{},null!=c&&null!==(o=c.frontmatter)&&void 0!==o&&o.title?{pageTitle:c.frontmatter.title}:{},i&&i.length>0?{allImages:i}:{}),r.createElement(t.xA,{components:P},r.createElement("div",{className:null!=c&&null!==(s=c.frontmatter)&&void 0!==s&&s.autoMargin?"page page--auto-margin ":"page"},m)))}function w(e){return r.createElement(R,e,r.createElement(o,e))}}}]);
//# sourceMappingURL=component---src-templates-mdx-pages-js-content-file-path-src-mdx-pages-part-0-js-language-fr-mdx-7925817a66eda61a0374.js.map