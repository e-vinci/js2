"use strict";(self.webpackChunkmyjscourse=self.webpackChunkmyjscourse||[]).push([[189],{1043:function(e,n,t){t.r(n),t.d(n,{default:function(){return R}});var l=t(3905),r=t(7294);function a(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",strong:"strong",ul:"ul",li:"li",br:"br",em:"em",h3:"h3",h4:"h4",code:"code",a:"a",pre:"pre",h5:"h5",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",ol:"ol"},(0,l.ah)(),e.components),{InternalPageMenu:t,PathViewer:a,PathViewerItem:s,InternalPageMenuItem:u,YoutubeImage:i,InternalPageTitle:c,ScrollableImage:d}=n;return t||o("InternalPageMenu",!0),u||o("InternalPageMenuItem",!0),c||o("InternalPageTitle",!0),a||o("PathViewer",!0),s||o("PathViewerItem",!0),d||o("ScrollableImage",!0),i||o("YoutubeImage",!0),r.createElement(r.Fragment,null,r.createElement(n.h1,null,"b) S√©curisation d'une RESTful API"),"\n",r.createElement(t,null,r.createElement(a,null,r.createElement(s,{to:"/"}," web2course "),r.createElement(s,{to:"/part3"}," Partie 3 "),r.createElement(s,{selected:!0}," b) API & JWT & bcrypt ")),r.createElement(u,null," C'est quoi l'authentification et l'autorisation ? "),r.createElement(u,null," Stateful VS stateless authentication "),r.createElement(u,null," C'est quoi les tokens JWT ? "),r.createElement(u,null," Authentification et cr√©ation de token "),r.createElement(u,null," Autorisation et v√©rification de token "),r.createElement(u,null," Client REST avec JWT "),r.createElement(u,null," Protection des op√©rations d'√©criture d'une API "),r.createElement(u,null," S√©curisation des passwords "),r.createElement(u,null," Exercice 3.1 : Authentification & autorisation d'op√©rations "),r.createElement(u,null," üç¨ Exercice 3.2 : une autre API s√©curis√©e "),r.createElement(u,null," üç¨ Authentification & autorisation JWT √† l'aide de cookies "),r.createElement(u,null," üç¨ Test via REST Client d'une RESTful API attendant des cookies ")),"\n",r.createElement("div",{className:"card card__simple-youtube-container"},r.createElement(i,{src:"https://youtu.be/jCUyii3hcwY"})),"\n",r.createElement(n.h1,null,r.createElement(c,null," C'est quoi l'authentification et l'autorisation ? ")),"\n",r.createElement(n.h2,null,"Authentification, c'est quoi ?"),"\n",r.createElement(n.p,null,"L'authentification, c'est le processus de ",r.createElement(n.strong,null,"v√©rifier qui est l'utilisateur")," d'une application."),"\n",r.createElement(n.p,null,"Pour authentifier un utilisateur, on va g√©n√©ralement passer via un formulaire de connexion, lui demandant un username et un password."),"\n",r.createElement(n.h2,null,"Autorisation, c'est quoi ?"),"\n",r.createElement(n.p,null,"L'autorisation, c'est le processus de ",r.createElement(n.strong,null,"v√©rifier ce √† quoi un utilisateur √† acc√®s"),"."),"\n",r.createElement(n.p,null,"Une API va autoriser les acc√®s √† certaines op√©rations en fonction des privil√®ges associ√©s aux utilisateurs. Il y aura des op√©rations qui seront autoris√©es :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,r.createElement(n.strong,null,"pour tous les utilisateurs"),", tant anonymes qu'authentifi√©s ;",r.createElement(n.br),"\n",r.createElement(n.em,null,'imaginez par exemple les op√©rations de lecture de produits sur un site "vitrine". Il ne faut pas devoir cr√©er de compte utilisateur pour pouvoir afficher les produits du site.')),"\n",r.createElement(n.li,null,r.createElement(n.strong,null,"pour tous les utilisateurs authentifi√©s"),", peu importe leurs privil√®ges ;",r.createElement(n.br),"\n",r.createElement(n.em,null,"imaginez le fait de pouvoir poster des messages dans un forum ; il faut avoir un compte pour pouvoir le faire, mais il ne faut pas de privil√®ges sp√©cifiques (pas besoin d'√™tre admin).")),"\n",r.createElement(n.li,null,r.createElement(n.strong,null,"pour seulement un ou plusieurs utilisateur(s) authentifi√©(s)")," ayant les privil√®ges requis ;",r.createElement(n.br),"\n",r.createElement(n.em,null,"imaginez une op√©ration de lecture de tous les profils des utilisateurs d'une banque ; il faut avoir un compte admin de la banque pour pouvoir le faire. Ca serait catastrophique si n'importe quel utilisateur authentifi√© pourrait acc√©der aux profils de tous les utilisateurs !")),"\n"),"\n",r.createElement(n.h2,null,"Diff√©rents moyens d'authentification"),"\n",r.createElement(n.h3,null,"Authentification stateful"),"\n",r.createElement(n.p,null,"Traditionnellement, ou anciennement, nous avons l'authentification qui est support√©e √† l'aide de cookies. L'utilisateur envoie via un formulaire son username et password, le serveur v√©rifie ceux-ci et cr√©e un id de session et le renvoie √† l'utilisateur via un cookie.",r.createElement(n.br),"\n","Apr√®s l'authentification, √† chaque requ√™te du client sur ce serveur, le cookie est envoy√©, et le serveur, qui a sauvegard√© la session, va la retrouver sur base de l'id de session pr√©sent dans le cookie et va autoriser ou non l'acc√®s √† l'op√©ration demand√©e par le client.",r.createElement(n.br),"\n","C'est ce qu'on appelle une authentification ",r.createElement(n.strong,null,"stateful"),"."),"\n",r.createElement(n.p,null,"Un m√©canisme d'authentification ",r.createElement(n.strong,null,"stateful")," indique que le serveur est responsable de sauvegarder les donn√©es de session des utilisateurs."),"\n",r.createElement(n.p,null,"On parle de ",r.createElement(n.strong,null,"session")," d'un utilisateur comme √©tant toute la dur√©e o√π le client s'authentifie √† l'application web jusqu'√† ce qu'il quitte cette application, lorsqu'il ferme son browser."),"\n",r.createElement(n.h3,null,"Authentification stateless"),"\n",r.createElement(n.p,null,"De mani√®re plus moderne, nous avons des m√©canismes d'authentification qui sont dits ",r.createElement(n.strong,null,"stateless"),". Dans ce genre de m√©canisme, c'est le client qui doit sauvegarder les donn√©es de session, et donc le browser. L'authentification √† l'aide de ",r.createElement(n.strong,null,"tokens")," devient tr√®s populaire.",r.createElement(n.br),"\n","Il existe diff√©rents moyen de l'impl√©menter. Dans le cadre de ce cours, nous focaliserons sur la fa√ßon la plus habituelle, les ",r.createElement(n.strong,null,"JSON Web Tokens"),", ou ",r.createElement(n.strong,null,"JWT"),"."),"\n",r.createElement(n.p,null,"Il existe d'autres m√©canismes tr√®s modernes qui utilisent des tokens, et qui sont mis en place par des tiers : ",r.createElement(n.strong,null,"OAuth"),", ",r.createElement(n.strong,null,"OpenId"),"... Ces m√©canismes sont offerts par Microsoft, Google, Facebook... Nous ne les verrons pas dans le cadre de cours. N√©anmoins, √† la fin de ce cours, vous devriez √™tre apte √† pouvoir les utiliser, sous r√©serve de bien lire la documentation üòâ."),"\n",r.createElement(n.h1,null,r.createElement(c,null," Stateful VS stateless authentication  ")),"\n",r.createElement(n.p,null,"Quels sont les avantages & inconv√©nients d'une authentification stateful ? et d'une authentification stateless ?"),"\n",r.createElement(n.h4,null,"Authentification stateful"),"\n",r.createElement(n.p,null,r.createElement(n.strong,null,"Inconv√©nients")," :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"La session utilise de la m√©moire pour chaque utilisateur."),"\n",r.createElement(n.li,null,"Le backend n'a aucune mani√®re de d√©terminer si le frontend s'est d√©connect√© du site ou non : gestion de l'expiration d'une session plus compliqu√©e, notamment si le frontend revient apr√®s une longue dur√©e."),"\n",r.createElement(n.li,null,"Toutes les sessions sont perdues en cas de red√©marrage du serveur (r√©-authentification)."),"\n",r.createElement(n.li,null,"Load balancing compliqu√© ; en effet, si un client fait une requ√™te, pendant toute la dur√©e de la session, s'il y a plusieurs serveurs qui peuvent y r√©pondre, comment est g√©r√©e la session de ce client ? Par quel(s) serveur(s) ? Comment se partagent-ils les donn√©es de session ? Est-ce que √ßa doit toujours √™tre le m√™me serveur qui r√©ponde au m√™me client ?"),"\n"),"\n",r.createElement(n.p,null,r.createElement(n.strong,null,"Avantages")," :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Peu gourmand en ressource point de vue processing et tr√®s rapide ; en effet, une fois qu'une session est en place, la v√©rification que le cookie contient le bon id de session se fait vite."),"\n"),"\n",r.createElement(n.h4,null,"Authentification stateless"),"\n",r.createElement(n.p,null,r.createElement(n.strong,null,"Inconv√©nients")," :\nComme le serveur ne retient plus l'utilisateur en m√©moire, il doit utiliser de la cryptographie pour cr√©er et valider les token ; c'est donc consommateur en ressource point de vue processing."),"\n",r.createElement(n.p,null,r.createElement(n.strong,null,"Avantages")," :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Pas de session √† g√©rer, m√™me apr√®s red√©marrage du serveur, il n'y a pas de r√©-authentification n√©cessaire."),"\n",r.createElement(n.li,null,"√âvolutif, utilisation facile de plusieurs serveurs si du load balancing est n√©cessaire ; en effet, comme chaque requ√™te du client contient toutes les infos pour se faire autoriser, il n'est pas n√©cessaire de savoir quel serveur va prendre en charge la requ√™te."),"\n"),"\n",r.createElement(n.p,null,'Notons que la "scalability" horizontale, la possibilit√© de permettre √† une application d\'augmenter sa capacit√© de r√©pondre √† une charge grandissante simplement en ajoutant des machines, est quelque chose de tr√®s important √† notre √©poque.',r.createElement(n.br),"\n","Certaines applications web ont des centaines de millions d'utilisateurs ; pour celles-ci, on ne peut pas compter sur la \"scalability\" verticale, c'est-√†-dire le fait d'augmenter les ressources d'une machine, en augmentant sa RAM, son processeur, son espace de stockage..."),"\n",r.createElement(n.p,null,"D√®s lors, dans le cadre de ce cours, nous allons pr√©f√©rer les applications web qui peuvent tourner sur des serveurs ",r.createElement(n.strong,null,"stateless"),"."),"\n",r.createElement(n.h1,null,r.createElement(c,null," C'est quoi les tokens JWT ? ")),"\n",r.createElement(n.p,null,"Les ",r.createElement(n.strong,null,"JSON Web token"),", ou ",r.createElement(n.strong,null,"JWT"),", appartiennent √† un standard internet permettant l'√©change s√©curis√© de tokens entre plusieurs parties."),"\n",r.createElement(n.p,null,"Un ",r.createElement(n.strong,null,"JWT")," contient ",r.createElement(n.strong,null,"trois parties encod√©es en base64")," et ressemble √† qqch du style :",r.createElement(n.br),"\n",r.createElement(n.strong,null,r.createElement(n.code,null,"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.")),r.createElement(n.br),"\n",r.createElement(n.strong,null,r.createElement(n.code,null,"eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.")),r.createElement(n.br),"\n",r.createElement(n.strong,null,r.createElement(n.code,null,"SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"))),"\n",r.createElement(n.p,null,"Voici les 3 parties d'un JWT et leurs caract√©ristiques :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"l'",r.createElement(n.strong,null,"ent√™te")," (ou header) : un objet JSON identifiant le type de token (JWT) et l'algorithme utilis√© pour g√©n√©rer la signature du token (HS256), un algorithme de hachage."),"\n",r.createElement(n.li,null,"le ",r.createElement(n.strong,null,"payload")," : un objet JSON permettant de sp√©cifier le ",r.createElement(n.strong,null,"claim")," ; ce sont des param√®tres optionnels pr√©cisant les affirmations associ√©es au token, comme la date d'expiration du token, son cr√©ateur, le fait que l'utilisateur est admin... g√©n√©ralement, on y met pas trop d'info, principalement l'identifiant de l'utilisateur ; si l'API a besoin de plus d'info concernant l'utilisateur, elle ira g√©n√©ralement les chercher dans ses donn√©es."),"\n",r.createElement(n.li,null,"la ",r.createElement(n.strong,null,"signature")," : c'est une signature num√©rique construite √† partir d'un secret priv√© ou d'une cl√© publique/priv√©e, via l'algorithme pr√©cis√© dans la signature."),"\n"),"\n",r.createElement(n.p,null,"üí≠ C'est bien joli tout √ßa, mais comment √ßa permet de s√©curiser la session d'un utilisateur ?",r.createElement(n.br),"\n","G√©n√©ralement, l'API, et elle uniquement, conna√Æt le secret priv√©. Elle va donc cr√©er le token d'un utilisateur authentifi√©, en y ajoutant le claim (ou les affirmations) qu'elle juge utile.",r.createElement(n.br),"\n","Lorsque le client re√ßoit son token, il va le sauvegarder dans son browser.",r.createElement(n.br),"\n","Pour chaque requ√™te n√©cessitant une autorisation de l'API, le client enverra son token au sein du header de la requ√™te.",r.createElement(n.br),"\n","L'API utilisera le secret priv√©, connu d'elle-m√™me uniquement, pour v√©rifier la signature du token. Si tout est OK, c'est que l'utilisateur est bien authentifi√© et que son claim est OK."),"\n",r.createElement(n.p,null,"Imaginez maintenant qu'un hacker tente de modifier le token, pour modifier le claim, notamment en changeant l'id de l'utilisateur pr√©sent dans le payload du token.\nEt bien la signature ne correspondra plus √† ce token l√† ! L'API le d√©tectera.",r.createElement(n.br),"\n","Pour que le hacker r√©ussisse son acte malicieux, il est oblig√© de conna√Ætre le secret priv√© qui ne doit √™tre connu que de l'API. Ca ne serait que sur base du secret priv√© que les hackers pourraient g√©n√©rer un nouveau token qui serait valid√© par l'API. Pas √©vident √† faire..."),"\n",r.createElement(n.p,null,"Ainsi, on peut imaginer un token comme une enveloppe s√©curis√© par un cadenas tr√®s sp√©cial : ce cadenas, qui est mis sur l'enveloppe contenant, par exemple, l'identifiant d'un utilisateur, est ferm√© par la cl√© üîë que seulement conna√Æt l'API.\nSi quelqu'un touche √† l'enveloppe, le cadenas ne s'ouvrira plus avec la üîë de l'API : la tentative de hack sera d√©tect√©e !\nSi quelqu'un tente de cr√©er une enveloppe s√©curis√©, il le fera avec une autre cl√©, ",r.createElement(n.strong,null,"üóù")," par exemple, car il ne conna√Æt pas üîë. L'API, tentant d'ouvrir l'enveloppe s√©curis√©e √† l'aide de üîë, elle ne s'ouvrira pas : la tentative de hacking sera d√©tect√©e !"),"\n",r.createElement(n.p,null,"üí≠ Est-ce que cette m√©taphore d'enveloppe s√©curis√©e vous parle ?\nAttention que dans la r√©alit√©, le payload classique d'un token sera decodable, que l'on connaisse ou pas le secret priv√©. Il est encod√© en base64 ! Ne mettez donc jamais de secrets dans le payload d'un token !",r.createElement(n.br),"\n","Si vraiment un jour vous deviez mettre un secret dans un payload, bien que d√©conseill√©, vous pourriez toujours le faire en cryptant le payload."),"\n",r.createElement(n.p,null,"üëç Le m√©canisme de token assure que l'on aie une tr√®s haute probabilit√© de d√©tecter les alt√©rations faites sur les tokens, les tentatives de forgeage, gr√¢ce √† la signature de ceux-ci."),"\n",r.createElement(n.p,null,"‚ö° Par contre, si nous laissions tra√Æner des informations dans le payload d'un token, comme un password d'un utilisateur et son username, alors l√†, c'est juste un beau cadeau que l'on offre aux hackers ; ils n'auraient plus qu'√† trouver un moyen de voler √† distance nos donn√©es de session ; ils pourraient ensuite utiliser le formulaire de connexion et prendre possession de notre identit√© üò®."),"\n",r.createElement(n.p,null,"Il existe un site fort int√©ressant qui montre la structure d'un token et qui permet de les d√©coder : ",r.createElement(n.a,{href:"https://jwt.io/"},"jwt.io")," ",r.createElement(n.a,{href:"/js2/references/#r63"},"[R.63]"),". Nous l'utiliserons plus tard pour d√©coder les tokens g√©n√©r√©s par nos RESTful API."),"\n",r.createElement(n.h1,null,r.createElement(c,null," Authentification et cr√©ation de token ")),"\n",r.createElement(n.h2,null,"Introduction"),"\n",r.createElement(n.p,null,'Via un exemple concret associ√© √† notre RESTful API qui g√®re les ressources de type "pizzas" et de type "boisson", nous allons mettre en place un processus d\'authentification et d\'autorisation JWT.'),"\n",r.createElement(n.p,null,"La librairie que nous allons utiliser dans le cadre de ce cours pour g√©rer des tokens JWT est ",r.createElement(n.a,{href:"https://www.npmjs.com/package/jsonwebtoken"},"jsonwebtoken"),"."),"\n",r.createElement(n.p,null,"Dans ce nouveau tutoriel, nous allons continuer le d√©veloppement de l'API ",r.createElement(n.a,{href:"https://github.com/e-vinci/ts-demos/tree/main/back/api/services"},"services")," pour ajouter des op√©rations permettant l'authentification et l'autorisation d'utilisateurs."),"\n",r.createElement(n.p,null,"Veuillez cr√©er un nouveau projet nomm√© ",r.createElement(n.strong,null,r.createElement(n.code,null,"auths"))," (dans votre repo git ",r.createElement(n.strong,null,r.createElement(n.code,null,"/web2/tutorials/pizzeria/api/auths")),") sur base d'un copi√©/coll√© du tutoriel ",r.createElement(n.a,{href:"https://github.com/e-vinci/ts-demos/tree/main/back/api/services"},"services"),"."),"\n",r.createElement(n.p,null,"Veuillez installer la librairie ",r.createElement(n.strong,null,r.createElement(n.code,null,"jsonwebtoken"))," au sein de votre nouveau projet ",r.createElement(n.strong,null,r.createElement(n.code,null,"auths"))," :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-bash"},"npm i jsonwebtoken\n")),"\n",r.createElement(n.p,null,"Comme nous utilisons TS, nous devons aussi installer les types de cette librairie :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-bash"},"npm i -D @types/jsonwebtoken\n")),"\n",r.createElement(n.h2,null,"M√©canisme d'authentification et cr√©ation du token"),"\n",r.createElement(n.p,null,"Toujours √† l'aide d'Express, nous allons cr√©er un router ",r.createElement(n.strong,null,r.createElement(n.code,null,"auths"))," qui mettra √† disposition les op√©rations de ",r.createElement(n.strong,null,r.createElement(n.code,null,"login"))," et de ",r.createElement(n.strong,null,r.createElement(n.code,null,"register")),".\nVoici le contrat associ√© √† ces nouvelles op√©rations :"),"\n",r.createElement(n.h5,null,'Op√©rations sur les ressources de type "auths"'),"\n",r.createElement(n.table,null,r.createElement(n.thead,null,r.createElement(n.tr,null,r.createElement(n.th,null,"URI"),r.createElement(n.th,null,"M√©thode HTTP"),r.createElement(n.th,null,"Op√©ration"))),r.createElement(n.tbody,null,r.createElement(n.tr,null,r.createElement(n.td,null,r.createElement(n.strong,null,r.createElement(n.code,null,"auths/login"))),r.createElement(n.td,null,r.createElement(n.strong,null,"POST")),r.createElement(n.td,null,'V√©rifier les credentials d\'une ressource de type "users" et renvoyer le username et un token JWT si les credentials sont OK')),r.createElement(n.tr,null,r.createElement(n.td,null,r.createElement(n.strong,null,r.createElement(n.code,null,"auths/register"))),r.createElement(n.td,null,r.createElement(n.strong,null,"POST")),r.createElement(n.td,null,'Cr√©er une ressource de type "users" et renvoyer le username et un token JWT')))),"\n",r.createElement("br"),"\n",r.createElement(n.p,null,"Le service ",r.createElement(n.strong,null,r.createElement(n.code,null,"users"))," s'occupera de cr√©er les utilisateur, de v√©rifier leurs credentials ainsi que de cr√©er des tokens."),"\n",r.createElement(n.p,null,"Voici le workflow attendu pour une op√©ration de ",r.createElement(n.strong,null,r.createElement(n.code,null,"login"))," ou de ",r.createElement(n.strong,null,r.createElement(n.code,null,"register"))," :"),"\n",r.createElement(d,{name:"login.png",minWidth:"879px",maxWidth:"879x"}),"\n",r.createElement("figcaption",null,"Appel √† une RESTful API pour s'authentifier et obtenir un JWT"),"\n",r.createElement(n.p,null,"Ce que l'on voit dans l'image ci-dessus :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"si le service consid√®re que l'utilisateur est authentifiable, que ses credentials sont OK, alors il va utiliser la m√©thode ",r.createElement(n.strong,null,r.createElement(n.code,null,"sign"))," de l'objet ",r.createElement(n.strong,null,r.createElement(n.code,null,"jwt"))," pour cr√©er un token."),"\n",r.createElement(n.li,null,"le token est envoy√© dans le body de la r√©ponse √† l'utilisateur."),"\n"),"\n",r.createElement(n.p,null,"Ce que l'on ne voit pas dans l'image ci-dessus :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"c'est le job du client de sauvegarder le token. Si l'application cliente est un browser, alors celui-ci pourra √™tre sauvegard√© dans le web storage du browser."),"\n",r.createElement(n.li,null,"l'application cliente peut √™tre faite avec n'importe quelle technologie. Par exemple, nous pourrons utiliser REST Client pour faire une requ√™te √† l'API..."),"\n"),"\n",r.createElement(n.p,null,"Dans notre RESTful API, nous avons d√©cid√© que lorsqu'un client s'enregistre, quand il fait appel √† l'op√©ration ",r.createElement(n.strong,null,r.createElement(n.code,null,"register"))," pour cr√©er un compte, l'API consid√®re automatiquement que cet utilisateur est authentifi√©. Tout comme la m√©thode ",r.createElement(n.strong,null,r.createElement(n.code,null,"login")),", la m√©thode ",r.createElement(n.strong,null,r.createElement(n.code,null,"register"))," cr√©era et renverra un token JWT √† l'utilisateur."),"\n",r.createElement(n.p,null,"NB : Il est possible d'envisager un workflow diff√©rent : apr√®s le ",r.createElement(n.strong,null,r.createElement(n.code,null,"register")),", l'application demanderait √† l'utilisateur un ",r.createElement(n.strong,null,r.createElement(n.code,null,"login")),", ",r.createElement(n.strong,null,r.createElement(n.code,null,"register"))," ne renvoyant jamais de token √† l'utilisateur."),"\n",r.createElement(n.h2,null,"Impl√©mentation de login & register"),"\n",r.createElement(n.p,null,"Nous allons √† pr√©sent mettre en place le code permettant d'impl√©menter le workflow que l'on vient de d√©couvrir."),"\n",r.createElement(n.p,null,"Veuillez cr√©er le service ",r.createElement(n.strong,null,r.createElement(n.code,null,"users"))," en cr√©ant le fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"/services/users.ts"))," et y inclure ce code :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"1,5-6,27-31,33-36,50-54,56-59"},r.createElement(n.code,{className:"language-ts"},'import jwt from "jsonwebtoken";\nimport path from "node:path";\nimport { parse, serialize } from "../utils/json";\nimport { AuthenticatedUser, User } from "../types";\n\nconst jwtSecret = "ilovemypizza!";\nconst lifetimeJwt = 24 * 60 * 60 * 1000; // in ms : 24 * 60 * 60 * 1000 = 24h\n\nconst jsonDbPath = path.join(__dirname, "/../data/users.json");\n\nconst defaultUsers: User[] = [\n  {\n    id: 1,\n    username: "admin",\n    password: "admin",\n  },\n];\n\nfunction login(\n  username: string,\n  password: string\n): AuthenticatedUser | undefined {\n  const userFound = readOneUserFromUsername(username);\n  if (!userFound) return undefined;\n  if (userFound.password !== password) return undefined;\n\n  const token = jwt.sign(\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\n    { expiresIn: lifetimeJwt } // lifetime of the JWT (added to the JWT payload)\n  );\n\n  const authenticatedUser: AuthenticatedUser = {\n    username,\n    token,\n  };\n\n  return authenticatedUser;\n}\n\nfunction register(\n  username: string,\n  password: string\n): AuthenticatedUser | undefined {\n  const userFound = readOneUserFromUsername(username);\n  if (userFound) return undefined;\n\n  createOneUser(username, password);\n\n  const token = jwt.sign(\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\n    { expiresIn: lifetimeJwt } // lifetime of the JWT (added to the JWT payload)\n  );\n\n  const authenticatedUser: AuthenticatedUser = {\n    username,\n    token,\n  };\n\n  return authenticatedUser;\n}\n\nfunction readOneUserFromUsername(username: string) {\n  const users = parse(jsonDbPath, defaultUsers);\n  const userFound = users.find((user) => user.username === username);\n  if (!userFound) return undefined;\n\n  return userFound;\n}\n\nfunction createOneUser(username: string, password: string) {\n  const users = parse(jsonDbPath, defaultUsers);\n\n  const nextId =\n    users.reduce((acc, user) => (user.id > acc ? user.id : acc), 0) + 1;\n\n  const createdUser: User = {\n    id: nextId,\n    username,\n    password,\n  };\n\n  users.push(createdUser);\n\n  serialize(jsonDbPath, users);\n\n  return createdUser;\n}\n\nexport { login, register, readOneUserFromUsername };\n')),"\n",r.createElement(n.p,null,"Dans le code ci-dessus, ",r.createElement(n.strong,null,r.createElement(n.code,null,"jwtSecret"))," est le secret priv√© connu uniquement du serveur. C'est la m√™me secret qu'il faudra utiliser pour v√©rifier un token."),"\n",r.createElement(n.p,null,r.createElement(n.strong,null,r.createElement(n.code,null,"jwt.sign()"))," permet de cr√©er le token et ses 3 parties :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"le payload du token, la 2√®me partie du token, est compl√©t√© principalement via le permier argument de ",r.createElement(n.strong,null,r.createElement(n.code,null,"sign()"))," ; ici, le token affirme que l'utilisateur poss√©dant le ",r.createElement(n.strong,null,r.createElement(n.code,null,"username"))," donn√© est authentifi√©."),"\n",r.createElement(n.li,null,"le payload du token sera aussi modifi√© sur base de la dur√©e d'expiration du token, selon l'argument ",r.createElement(n.strong,null,r.createElement(n.code,null,"expiresIn")),"."),"\n",r.createElement(n.li,null,r.createElement(n.strong,null,r.createElement(n.code,null,"jwtSecret"))," est utilis√© pour cr√©er la 3√®me partie du token, sa signature."),"\n"),"\n",r.createElement(n.p,null,"Pour le service ",r.createElement(n.strong,null,r.createElement(n.code,null,"users")),", nous avons du cr√©er deux nouveaux types : ",r.createElement(n.strong,null,r.createElement(n.code,null,"AuthenticatedUser"))," et ",r.createElement(n.strong,null,r.createElement(n.code,null,"User")),". Veuillez mettre √† jour le fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"/types.ts"))," et y inclure ce code :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"1-4,6-10,18-19"},r.createElement(n.code,{className:"language-ts"},"interface AuthenticatedUser {\n  username: string;\n  token: string;\n}\n\ninterface User {\n  id: number;\n  username: string;\n  password: string;\n}\n\nexport type {\n  Pizza,\n  NewPizza,\n  PizzaToUpdate,\n  Drink,\n  NewDrink,\n  AuthenticatedUser,\n  User,\n};\n")),"\n",r.createElement(n.p,null,"Il faut maintenant que nous cr√©ions le router ",r.createElement(n.strong,null,r.createElement(n.code,null,"auths"))," offrant les op√©rations de ",r.createElement(n.strong,null,r.createElement(n.code,null,"login"))," et de ",r.createElement(n.strong,null,r.createElement(n.code,null,"register")),", en faisant appel au service ",r.createElement(n.strong,null,r.createElement(n.code,null,"users")),".",r.createElement(n.br),"\n","Veuillez cr√©er le fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"/routes/auths.ts"))," et y inclure le code suivant :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-ts"},'import { Router } from "express";\nimport { PotentialUser } from "../types";\nimport { login, register } from "../services/users";\nconst router = Router();\n\n/* Register a user */\nrouter.post("/register", (req, res) => {\n  const body: unknown = req.body;\n  if (\n    !body ||\n    typeof body !== "object" ||\n    !("username" in body) ||\n    !("password" in body) ||\n    typeof body.username !== "string" ||\n    typeof body.password !== "string" ||\n    !body.username.trim() ||\n    !body.password.trim()\n  ) {\n    return res.sendStatus(400);\n  }\n\n  const { username, password } = body as PotentialUser;\n\n  const authenticatedUser = register(username, password);\n\n  if (!authenticatedUser) {\n    return res.sendStatus(409);\n  }\n\n  return res.json(authenticatedUser);\n});\n\n/* Login a user */\nrouter.post("/login", (req, res) => {\n  const body: unknown = req.body;\n  if (\n    !body ||\n    typeof body !== "object" ||\n    !("username" in body) ||\n    !("password" in body) ||\n    typeof body.username !== "string" ||\n    typeof body.password !== "string" ||\n    !body.username.trim() ||\n    !body.password.trim()\n  ) {\n    return res.sendStatus(400);\n  }\n\n  const { username, password } = body as PotentialUser;\n\n  const authenticatedUser = login(username, password);\n\n  if (!authenticatedUser) {\n    return res.sendStatus(401);\n  }\n\n  return res.json(authenticatedUser);\n});\n\nexport default router;\n')),"\n",r.createElement(n.p,null,"Il n'y a rien de bien sp√©cial √† ce code. On fait simplement appel aux op√©rations du service ",r.createElement(n.strong,null,r.createElement(n.code,null,"users")),".",r.createElement(n.br),"\n","Nous avons n√©anmoins du cr√©er un nouveau type ",r.createElement(n.strong,null,r.createElement(n.code,null,"PotentialUser")),". Veuillez mettre √† jour le fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"/types.ts"))," et y inclure ce code :"),"\n",r.createElement(n.pre,{highlighting:"1,11"},r.createElement(n.code,{className:"language-ts"},'type PotentialUser = Omit<User, "id">;\n\nexport type {\n  Pizza,\n  NewPizza,\n  PizzaToUpdate,\n  Drink,\n  NewDrink,\n  AuthenticatedUser,\n  User,\n  PotentialUser,\n};\n')),"\n",r.createElement(n.p,null,"Attention, il faut rajouter le nouveau router au sein de ",r.createElement(n.strong,null,r.createElement(n.code,null,"app.js"))," pour que notre API puisse offrir les nouvelles op√©rations ; veuillez donc ajouter ce code dans ",r.createElement(n.strong,null,r.createElement(n.code,null,"/app.ts"))," :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"6,24"},r.createElement(n.code,{className:"language-ts"},'import express, { ErrorRequestHandler } from "express";\n\nimport usersRouter from "./routes/users";\nimport pizzaRouter from "./routes/pizzas";\nimport drinkRouter from "./routes/drinks";\nimport authsRouter from "./routes/auths";\n\nconst app = express();\n\napp.use((_req, _res, next) => {\n  console.log(\n    "Time:",\n    new Date().toLocaleString("fr-FR", { timeZone: "Europe/Brussels" })\n  );\n  next();\n});\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use("/users", usersRouter);\napp.use("/pizzas", pizzaRouter);\napp.use("/drinks", drinkRouter);\napp.use("/auths", authsRouter);\n\nconst errorHandler: ErrorRequestHandler = (err, _req, res, _next) => {\n  console.error(err.stack);\n  return res.status(500).send("Something broke!");\n};\n\napp.use(errorHandler);\nexport default app;\n')),"\n",r.createElement(n.h2,null,"Utilisation de Rest Client pour tester les nouvelles op√©rations"),"\n",r.createElement(n.p,null,"Veuillez d√©marrer votre API ",r.createElement(n.strong,null,r.createElement(n.code,null,"auths")),"."),"\n",r.createElement(n.p,null,"On va utiliser REST Client pour tester ces nouvelles op√©rations."),"\n",r.createElement(n.p,null,"Veuillez cr√©er le fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"/REST Client/auths.http"))," et y ajouter le code suivant :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-http"},'@baseUrl = http://localhost:3000\n\n### Try to login an unknown user\nPOST {{baseUrl}}/auths/login\nContent-Type: application/json\n\n{\n    "username":"unknown",\n    "password":"admin"\n}\n\n### Login the default admin\nPOST {{baseUrl}}/auths/login\nContent-Type: application/json\n\n{\n    "username":"admin",\n    "password":"admin"\n}\n\n\n### Create the manager user\nPOST {{baseUrl}}/auths/register\nContent-Type: application/json\n\n{\n    "username":"manager",\n    "password":"manager"\n}\n\n### Login the manager user\nPOST {{baseUrl}}/auths/login\nContent-Type: application/json\n\n{\n    "username":"manager",\n    "password":"manager"\n}\n')),"\n",r.createElement(n.p,null,"Veuillez ex√©cuter les diff√©rentes requ√™tes. Tout devrait fonctionner, vous devriez r√©cup√©rer le username et le token d'un utilisateur authentifi√©."),"\n",r.createElement(n.p,null,"Pour le fun, nous allons d√©coder un token :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Veuillez copier le token de ce que renvoie votre API pour la requ√™te de login de l'utilisateur ",r.createElement(n.strong,null,r.createElement(n.code,null,"manager"))," (qqch qui doit ressembler √† une string du genre : ",r.createElement(n.strong,null,r.createElement(n.code,null,"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im1hbmFnZXIiLCJpYXQiOjE2NjEyNDg1MjksImV4cCI6MTc0NzY0ODUyOX0.JvYzM0gtmVkqFr9R3f1Bf6ow_QuyHJY-vedJ39N7JKw")),")."),"\n",r.createElement(n.li,null,"Veuillez vous rendre sur le site ",r.createElement(n.a,{href:"https://jwt.io/"},"JWT")," et coller votre token dans le champs ",r.createElement(n.strong,null,r.createElement(n.code,null,"Encoded")),". Dans la colonne ",r.createElement(n.strong,null,r.createElement(n.code,null,"Decoded")),", vous devriez voir l'algorithme utilis√© par la m√©thode ",r.createElement(n.strong,null,r.createElement(n.code,null,"sign")),", ainsi que les donn√©es pr√©sentes dans le payload, dont ",r.createElement(n.strong,null,r.createElement(n.code,null,'"username": "manager"'))," !"),"\n"),"\n",r.createElement(n.p,null,"Vous comprenez maintenant pourquoi on n'ajoute pas des secrets dans un token üòâ."),"\n",r.createElement(n.h1,null,r.createElement(c,null," Autorisation et v√©rification de token ")),"\n",r.createElement(n.h2,null,"M√©canisme d'autorisation d'utilisateurs √† des op√©rations d'une API"),"\n",r.createElement(n.h3,null,"Intro"),"\n",r.createElement(n.p,null,"Dans le workflow que nous avons choisi, les utilisateurs re√ßoivent un token lors du ",r.createElement(n.strong,null,r.createElement(n.code,null,"register"))," ou du ",r.createElement(n.strong,null,r.createElement(n.code,null,"login")),". C'est le job de l'application cliente de trouver un moyen de sauvegarder ce token."),"\n",r.createElement(n.p,null,"Lorsqu'une application client souhaite cr√©er une pizza, on souhaite autoriser cette op√©ration qu'√† l'administrateur du site g√©rant la pizzeria.",r.createElement(n.br),"\n","Nous d√©cidons donc pour l'",r.createElement(n.strong,null,"op√©ration de cr√©ation de pizza que l'utilisateur doit")," non seulement √™tre ",r.createElement(n.strong,null,"authentifi√©"),", mais qu'en plus, il doit √™tre l'",r.createElement(n.strong,null,"admin")," du site."),"\n",r.createElement(n.h3,null,"M√©canisme d'autorisation quand le token JWT est valide"),"\n",r.createElement(n.p,null,"Pour que l'application client qui fait la requ√™te √† l'API puisse s'autoriser, elle doit ajouter un ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorization header"))," √† sa requ√™te contenant comme valeur le token re√ßu lors du ",r.createElement(n.strong,null,r.createElement(n.code,null,"login"))," ou du ",r.createElement(n.strong,null,r.createElement(n.code,null,"register"))," :"),"\n",r.createElement(d,{name:"authorizeOK.png",minWidth:"879px",maxWidth:"879x"}),"\n",r.createElement("figcaption",null,"Appel √† une op√©ration d'une RESTful API n√©cessitant une autorisation JWT : autorisation valide"),"\n",r.createElement(n.p,null,'Le router de "pizzas", avant m√™me de passer la requ√™te √† la route ',r.createElement(n.strong,null,r.createElement(n.code,null,"POST /pizzas")),", va lancer la fonction middleware d'autorisation nomm√©e ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize")),". La fonction middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," va s'occuper de v√©rifier le token envoy√© par le client dans un header √† l'aide de la m√©thode ",r.createElement(n.strong,null,r.createElement(n.code,null,"verifiy"))," de l'objet ",r.createElement(n.strong,null,r.createElement(n.code,null,"jwt"))," (de la librairie ",r.createElement(n.strong,null,r.createElement(n.code,null,"jsonwebtoken")),")."),"\n",r.createElement(n.p,null,"üí≠ Si le token est valide, est-ce que √ßa signifie que l'utilisateur est bien authentifi√© ?",r.createElement(n.br),"\n",r.createElement(n.em,null,"H√© bien non, car imaginez qu'entre le moment o√π l'utilisateur se soit logu√©, il ait √©t√© supprim√© de l'application par un admin... dans ce cas-ci, on ne veut pas l'autoriser √† ajouter une pizza au menu de la pizzeria ! Il n'est p-e m√™me plus un employ√©, il souhaite p-e √©crire du contenu malicieux üò®")),"\n",r.createElement(n.p,null,"Donc si le token est valide, ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," fera appel au service ",r.createElement(n.strong,null,r.createElement(n.code,null,"users"))," pour v√©rifier que l'utilisateur existe bien dans le support de donn√©es (fichiers JSON, base de donn√©es ou autres) et pour obtenir toutes les infos sur cet utilisateur. Si l'utilisateur existe, alors cela signifie que l'utilisateur est bien authentifi√©. La fonction middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," va passer la main √† une autre fonction middleware pour v√©rifier que l'utilisateur est bien l'admin."),"\n",r.createElement(n.p,null,"üí≠ Comment est-ce que ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," peut faire appel au service pour v√©rifier que l'utilisateur existe bien ? Est-ce que cela signifie que le token doit contenir tout un tas de donn√©es sur l'utilisateur ?"),"\n",r.createElement(n.p,null,"üëç En r√®gle g√©n√©rale, on va juste mettre un identifiant de l'utilisateur dans ce qu'on appelle le ",r.createElement(n.strong,null,"payload")," du token. C'est ensuite l'API, suite au d√©codage de l'identifiant de l'utilisateur, qui fera appel aux donn√©es pour retrouver tout ce qui concerne l'utilisateur."),"\n",r.createElement(n.p,null,"La fonction middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," va v√©rifier que l'utilisateur est bien l'admin. Si c'est OK, elle passera la main √† la fonction middleware qui g√®re la route ",r.createElement(n.strong,null,r.createElement(n.code,null,"POST /pizzas"))," au sein du router de pizzas en faisant l'appel √† la fonction ",r.createElement(n.strong,null,r.createElement(n.code,null,"next")),".",r.createElement(n.br),"\n",r.createElement(n.em,null,"üç¨ NB : on pourrait aussi laisser la fonction ",r.createElement(n.strong,null,r.createElement(n.code,null,"creatPizza"))," s'occuper de v√©rifier que l'utilisateur demandant la cr√©ation de la pizza soit bien l'admin. Ici, comme il s'agit de v√©rifier que le contrat de l'API soit respect√©, c'est-√†-dire que l'utilisateur soit bien authentifi√© & admin, alors on pr√©f√®re r√©aliser cette action en dehors du service. Dans nos choix architecturaux pour nos RESTful API, nous avons d√©cid√© que ce n'est pas le service qui s'occupe de pr√©senter les donn√©es aux clients, c'est le r√¥le des routers (et les fonctions middleware associ√©es).")),"\n",r.createElement(n.p,null,"Maintenant que le client a les bons privil√®ges, l'op√©ration de cr√©ation de la pizza peut donc √™tre autoris√©e. L'op√©ration de ",r.createElement(n.strong,null,r.createElement(n.code,null,"createPizza"))," du service renverra la nouvelle pizza au router qui s'occupera de pr√©senter la nouvelle pizza au client, au format JSON."),"\n",r.createElement(n.h3,null,"M√©canisme d'autorisation quand le token JWT est invalide"),"\n",r.createElement(n.p,null,"Voici le workflow d'autorisation si le token n'est pas valide :"),"\n",r.createElement(d,{name:"authorizeNOK.png",minWidth:"879px",maxWidth:"879x"}),"\n",r.createElement("figcaption",null,"Appel √† une op√©ration d'une RESTful API n√©cessitant une autorisation JWT : autorisation invalide"),"\n",r.createElement(n.p,null,"Dans ce cas l√†, ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," ne passe pas la main √† ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," ni m√™me √† la fonction middleware qui g√®re la route ",r.createElement(n.strong,null,r.createElement(n.code,null,"POST /pizzas")),".",r.createElement(n.br),"\n","La fonction middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," renvoie directement un code d'erreur ",r.createElement(n.strong,null,r.createElement(n.code,null,"401 Unauthorized"))," au client."),"\n",r.createElement(n.h3,null,"M√©canisme d'autorisation quand l'utilisateur n'est pas admin"),"\n",r.createElement(n.p,null,"Vous pourriez aussi imaginer le workflow o√π le client envoie un token valide, mais l'utilisateur associ√© n'est pas admin. Dans ce cas-ci, ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," ferait appel √† ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin")),", mais ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," renverrait directement un code d'erreur ",r.createElement(n.strong,null,r.createElement(n.code,null,"403 Forbidden"))," au client.",r.createElement(n.br),"\n","En effet, l'API indiquerait ainsi qu'elle aurait v√©rifi√© que l'utilisateur est bien authentifi√©, mais que celui ne poss√®de pas les privil√®ges suffisant pour acc√©der √† l'op√©ration demand√©e."),"\n",r.createElement(n.h2,null,"Impl√©mentation du m√©canisme d'autorisation"),"\n",r.createElement(n.p,null,"üò® Wow, le workflow d'autorisation pour la cr√©ation d'une pizza est assez long.",r.createElement(n.br),"\n","Nous allons maintenant l'impl√©menter dans notre tutoriel en cours.",r.createElement(n.br),"\n","Nous vous inqui√©tez pas, ce qui importe dans le code qui va suivre, ce n'est pas de savoir √©crire tout le code, mais de bien comprendre les m√©canismes associ√©s. En effet, en r√®gle g√©n√©rale, vous allez utiliser des librairies vous permettant d'autoriser les acc√®s aux op√©rations de vos API. Vous √©crirez donc rarement les m√©canismes d'autorisation, par contre, vous devrez pouvoir les utiliser."),"\n",r.createElement(n.p,null,"Veuillez cr√©er les nouvelles fonctions middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," et ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," au sein d'un nouveau fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"/utils/auths.ts"))," :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"1,6,13,19-20,28,37"},r.createElement(n.code,{className:"language-ts"},'import jwt from "jsonwebtoken";\nimport { readOneUserFromUsername } from "../services/users";\nimport { NextFunction, RequestHandler, Response } from "express";\nimport { AuthenticatedRequest, JwtPayload, User } from "../types";\n\nconst jwtSecret = "ilovemypizza!";\n\nconst authorize = (\n  req: AuthenticatedRequest,\n  res: Response,\n  next: NextFunction\n) => {\n  const token = req.get("authorization");\n  if (!token) {\n    return res.sendStatus(401);\n  }\n\n  try {\n    const decoded = jwt.verify(token, jwtSecret) as JwtPayload;\n    const { username } = decoded;\n\n    const existingUser = readOneUserFromUsername(username);\n\n    if (!existingUser) {\n      return res.sendStatus(401);\n    }\n\n    req.user = existingUser; // request.user object is available in all other middleware functions\n    return next();\n  } catch (err) {\n    console.error("authorize: ", err);\n    return res.sendStatus(401);\n  }\n};\n\nconst isAdmin: RequestHandler = (req: AuthenticatedRequest, res, next) => {\n  const { username } = req.user as User;\n\n  if (username !== "admin") {\n    return res.sendStatus(403);\n  }\n  return next();\n};\n\nexport { authorize, isAdmin };\n')),"\n",r.createElement(n.p,null,"Voici quelques explications sur le code de la fonction middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Gr√¢ce √† ",r.createElement(n.strong,null,r.createElement(n.code,null,"req.get('authorization')"))," (ligne 13), on r√©cup√®re le token qui a √©t√© envoy√© par le client au sein de l'",r.createElement(n.strong,null,r.createElement(n.code,null,"authorization header"))," de la requ√™te sous forme de string."),"\n",r.createElement(n.li,null,"La m√©thode ",r.createElement(n.strong,null,r.createElement(n.code,null,"jwt.verify(token, jwtSecret)"))," (ligne 19) v√©rifie tant la signature du token que son √©ventuelle expiration. Elle utilise le secret ",r.createElement(n.strong,null,r.createElement(n.code,null,"jwtSecret"))," qui doit √™tre le m√™me que celui pris en compte lors de la cr√©ation du token."),"\n",r.createElement(n.li,null,"Elle charge toutes les donn√©es de l'utilisateur authentifi√© au sein de l'objet ",r.createElement(n.strong,null,r.createElement(n.code,null,"req"))," (ligne 28), dans ",r.createElement(n.strong,null,r.createElement(n.code,null,"user")),". Cela est une bonne pratique, cela permet, pour toute la dur√©e du traitement de cette requ√™te, de mettre √† disposition ces donn√©es √† toutes les fonctions middleware.",r.createElement(n.br),"\n","üí≠ Mais pourquoi faire cela ?\n",r.createElement(n.em,null,"Imaginez que vous faites un appel √† une base de donn√©es externes √† chaque fois que vous souhaitez obtenir les informations d'un utilisateur... Cela est tr√®s consommateur en temps... Lorsque vous allez utiliser d'autres fonctions middleware comme ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin")),", vous n'avez plus besoin de faire appel √† la base de donn√©es.")),"\n"),"\n",r.createElement(n.p,null,"La fonction middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," r√©cup√®re les donn√©es de l'utilisateur authentifi√© via l'objet ",r.createElement(n.strong,null,r.createElement(n.code,null,"req.user")),".",r.createElement(n.br),"\n","Si l'utilisateur n'est pas ",r.createElement(n.strong,null,r.createElement(n.code,null,"admin")),", c'est le code ",r.createElement(n.strong,null,r.createElement(n.code,null,"403 Forbidden"))," qui est renvoy√© √† l'application cliente, signifiant que l'utilisateur est bien authentifi√©, mais il n'a pas les privil√®ges pour acc√©der √† l'op√©ration demand√©e (cr√©ation de pizza).",r.createElement(n.br),"\n","Si tout est OK, ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," fait appel √† ",r.createElement(n.strong,null,r.createElement(n.code,null,"next()")),", ce qui consiste √† ex√©cuter la prochaine fonction middleware qui est pr√©sente apr√®s l'appel de ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin")),"."),"\n",r.createElement(n.p,null,"Pour cr√©er ces deux fonctions middleware, nous avons du cr√©er deux nouveaux types : ",r.createElement(n.strong,null,r.createElement(n.code,null,"AuthenticatedRequest"))," et ",r.createElement(n.strong,null,r.createElement(n.code,null,"JwtPayload")),". Veuillez mettre √† jour le fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"/types.ts"))," et y inclure ce code :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"1,5-7,9-13,24-25"},r.createElement(n.code,{className:"language-ts"},'import { Request } from "express";\n\n// Reste du code\n\ninterface AuthenticatedRequest extends Request {\n  user?: User;\n}\n\ninterface JwtPayload {\n  username: string;\n  exp: number; // Expiration time (in seconds since the epoch)\n  iat: number; // Issued at time (in seconds since the epoch)\n}\n\nexport type {\n  Pizza,\n  NewPizza,\n  PizzaToUpdate,\n  Drink,\n  NewDrink,\n  AuthenticatedUser,\n  User,\n  PotentialUser,\n  AuthenticatedRequest,\n  JwtPayload,\n};\n\n')),"\n",r.createElement(n.p,null,"Ici nous avons ajout√© un nouveau type ",r.createElement(n.strong,null,r.createElement(n.code,null,"AuthenticatedRequest"))," qui √©tend le type ",r.createElement(n.strong,null,r.createElement(n.code,null,"Request"))," d'Express, ceci afin de pouvoir ajouter un objet de type ",r.createElement(n.strong,null,r.createElement(n.code,null,"User"))," √† ",r.createElement(n.strong,null,r.createElement(n.code,null,"req")),"."),"\n",r.createElement(n.p,null,"Nous avons aussi ajout√© un nouveau type ",r.createElement(n.strong,null,r.createElement(n.code,null,"JwtPayload"))," qui repr√©sente le payload d'un token JWT. Ce type est utilis√© pour typer l'objet ",r.createElement(n.strong,null,r.createElement(n.code,null,"decoded"))," retourn√© par la m√©thode ",r.createElement(n.strong,null,r.createElement(n.code,null,"jwt.verify")),"."),"\n",r.createElement(n.p,null,"O√π allons-nous utiliser les nouvelles fonctions middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," et ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," ?"),"\n",r.createElement(n.p,null,"Nous pouvons le faire au niveau que nous souhaitons, soit au niveau :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"de l'",r.createElement(n.strong,null,"application"),", pour toutes les routes, via ",r.createElement(n.strong,null,r.createElement(n.code,null,"app.use(authorize)")),"."),"\n",r.createElement(n.li,null,"d'un ",r.createElement(n.strong,null,"router"),", pour toutes les routes associ√©es ; par exemple, on pourrait dire que toutes les routes du router de pizzas sont prot√©g√©es par une autorisation JWT. On √©crirait : ",r.createElement(n.strong,null,r.createElement(n.code,null,'app.use("/pizzas", authorize, pizzaRouter);')),".",r.createElement(n.br),"\n",'Cela signifierait que toutes les op√©rations sur des ressources de type "pizzas" ne seraient autoris√©es que si l\'utilisateur √©tait authentifi√©. Cela serait probl√©matique pour deux raisons :',"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"On veut pouvoir afficher le menu des pizzas pour tous les utilisateurs, m√™me s'ils sont anonymes."),"\n",r.createElement(n.li,null,"On ne veut pas simplement v√©rifier qu'un utilisateur est authentifi√© pour cr√©er une pizza, on veut aussi v√©rifier qu'il est admin."),"\n"),"\n"),"\n",r.createElement(n.li,null,"d'une route, pour une op√©ration de notre RESTful API. C'est ce que nous souhaitons faire ici. Veuillez mettre √† jour le code du router de \"pizzas\" au sein de ",r.createElement(n.strong,null,r.createElement(n.code,null,"/routes/pizzas.ts"))," :"),"\n"),"\n",r.createElement(n.pre,{highlighting:"2,7"},r.createElement(n.code,{className:"language-js"},'// Code existant...\nimport { authorize, isAdmin } from "../utils/auths";\n\n// Code existant...\n\n// Create a pizza to be added to the menu.\nrouter.post("/", authorize, isAdmin, (req, res) => {\n  const body: unknown = req.body;\n  if (\n    !body ||\n    typeof body !== "object" ||\n    !("title" in body) ||\n    !("content" in body) ||\n    typeof body.title !== "string" ||\n    typeof body.content !== "string" ||\n    !body.title.trim() ||\n    !body.content.trim()\n  ) {\n    return res.sendStatus(400);\n  }\n\n  const { title, content } = body as NewPizza;\n\n  const addedPizza = createPizza({ title, content });\n\n  return res.json(addedPizza);\n});\n')),"\n",r.createElement(n.p,null,"Ainsi, nous avons juste fait l'appel de deux fonctions middleware pour v√©rifier :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,r.createElement(n.strong,null,"que l'utilisateur est authentifi√©")," via ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," ; si tout est OK au niveau du token fournit par l'application cliente, ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," fait appel via ",r.createElement(n.strong,null,r.createElement(n.code,null,"next()"))," √† la prochaine fonction middleware. Dans ce cas-ci, c'est ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin")),". S'il y a un probl√®me, ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," termine le traitement de la requ√™te en envoyant un code d'erreur au client et les prochaines fonctions middleware (",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin")),", puis la fonction ",r.createElement(n.strong,null,r.createElement(n.code,null,"arrow")),") ne sont pas ex√©cut√©es."),"\n",r.createElement(n.li,null,r.createElement(n.strong,null,"que l'utilisateur est admin")," via ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," ; si tout est OK, que l'utilisateur authentifi√© est l'admin, ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," fait appel via ",r.createElement(n.strong,null,r.createElement(n.code,null,"next()"))," √† la prochaine fonction middleware. Dans ce cas-ci, c'est la fonction ",r.createElement(n.strong,null,r.createElement(n.code,null,"arrow"))," qui appelle l'op√©ration demand√©e pour cr√©er la pizza : ",r.createElement(n.strong,null,r.createElement(n.code,null,"createPizza")),". Si l'utilisateur authentifi√© n'est pas l'admin, alors ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," termine le traitement en envoyant un code d'erreur au client et la fonction traitant de l'op√©ration de cr√©ation n'est pas ex√©cut√©e."),"\n"),"\n",r.createElement(n.p,null,"Comment pouvons-nous tester l'op√©ration de cr√©ation d'une pizza ? Via REST Client.\nTentons le coup √† l'aide de cette requ√™te (elle est d√©j√† pr√©sente dans ",r.createElement(n.strong,null,r.createElement(n.code,null,"/REST Client/pizzas.http")),") :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-http"},'POST {{baseUrl}}/pizzas\nContent-Type: application/json\n\n{\n    "title":"Magic Green",\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\n}\n')),"\n",r.createElement(n.p,null,"Apr√®s avoir ex√©cut√© cette requ√™te, vous devriez avoir re√ßu un status code ",r.createElement(n.strong,null,r.createElement(n.code,null,"401 Unauthorized")),".\nC'est normal, comme nous n'avons pas envoy√© de token, nous ne pouvons donc pas √™tre autoris√©.",r.createElement(n.br),"\n","Au prochain point nous allons voir comment utiliser REST Client pour sauvegarder de l'information, comme un token, suite √† une requ√™te vers une API."),"\n",r.createElement(n.h1,null,r.createElement(c,null," Client REST avec JWT ")),"\n",r.createElement(n.p,null,"Pr√©c√©demment, nous avons appris √† utiliser REST Client, l'extension de VS Code, pour faire des requ√™tes vers des API."),"\n",r.createElement(n.p,null,"Voici quelques notions suppl√©mentaire pour utiliser REST Client avec des ",r.createElement(n.strong,null,r.createElement(n.code,null,"JWT"))," :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Il est possible de cr√©er des ",r.createElement(n.strong,null,r.createElement(n.code,null,"Request Variables"))," afin de ",r.createElement(n.strong,null,"r√©cup√©rer la r√©ponse")," associ√©e\n√† une requ√™te au sein d'une variable."),"\n",r.createElement(n.li,null,"On va donc pouvoir r√©cup√©rer le token, suite √† une requ√™te d'authentification,\nau sein d'une ",r.createElement(n.strong,null,r.createElement(n.code,null,"Request Variable")),", pour ensuite fournir ce token dans le ",r.createElement(n.strong,null,r.createElement(n.code,null,"Authorization header"))," de toutes les requ√™tes demandant une autorisation JWT."),"\n"),"\n",r.createElement(n.p,null,"Si vous souhaitez plus d'infos sur les ",r.createElement(n.strong,null,r.createElement(n.code,null,"Request Variables")),", vous pouvez consulter la ",r.createElement(n.a,{href:"https://github.com/Huachao/vscode-restclient#request-variables"},"documentation de REST Client")," ",r.createElement(n.a,{href:"/js2/references/#r55"},"[R.55]"),"."),"\n",r.createElement(n.p,null,"Voici comment mettre √† jour le script ",r.createElement(n.strong,null,r.createElement(n.code,null,"/REST Client/pizzas.http"))," pour cr√©er une pizza en passant le token de l'utilisateur ",r.createElement(n.strong,null,r.createElement(n.code,null,"admin"))," :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-http"},'### Create a pizza by using the admin account\n#### First login as the admin\n##### Define a request variable named admin :\n# @name admin\nPOST {{baseUrl}}/auths/login\nContent-Type: application/json\n\n{\n    "username":"admin",\n    "password":"admin"\n}\n\n#### Create a pizza with the admin token\nPOST {{baseUrl}}/pizzas\nContent-Type: application/json\nAuthorization: {{admin.response.body.token}}\n\n{\n    "title":"Magic Green",\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\n}\n')),"\n",r.createElement(n.p,null,"Pour tester l'op√©ration de cr√©ation de pizza, veuillez d'abord ex√©cuter la premi√®re requ√™te, puis la seconde donn√©e ci-dessus."),"\n",r.createElement(n.p,null,"A ce stade-ci, il serait aussi int√©ressant de tester certains cas d'erreurs associ√©s aux tokens. Veuillez compl√©ter le script ",r.createElement(n.strong,null,r.createElement(n.code,null,"/REST Client/pizzas.http"))," avec :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-http"},'### 1. Create a pizza without a token\nPOST {{baseUrl}}/pizzas\nContent-Type: application/json\n\n{\n    "title":"Magic Green",\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\n}\n\n### 2. Create a pizza without being the admin, use manager account\n#### 2.1 First login as the manager\n##### 2.1.1 Define a request variable nammed manager\n# @name manager\nPOST {{baseUrl}}/auths/login\nContent-Type: application/json\n\n{\n    "username":"manager",\n    "password":"manager"\n}\n\n##### 2.1.2 Define a file variable to simplify the access to the token of manager\n@managerToken = {{manager.response.body.token}}\n\n#### 2.2 Try to create a pizza with the manager token\nPOST {{baseUrl}}/pizzas\nContent-Type: application/json\nAuthorization: {{managerToken}}\n\n{\n    "title":"Magic Green",\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\n}\n')),"\n",r.createElement(n.p,null,"Nous voyons qu'√† l'aide de REST Client, nous pouvons utiliser une ",r.createElement(n.strong,null,r.createElement(n.code,null,"File Variable"))," pour allouer une partie de la r√©ponse faite √† une requ√™te.",r.createElement(n.br),"\n","Dans ce cas, on peut faire appel √† l'API en passant le token via la ",r.createElement(n.strong,null,r.createElement(n.code,null,"File Variable"))," nomm√© ",r.createElement(n.strong,null,r.createElement(n.code,null,"managerToken"))," (code associ√© : ",r.createElement(n.strong,null,r.createElement(n.code,null,"Authorization: {{managerToken}}")),") au lieu d'utiliser une partie seulement de la ",r.createElement(n.strong,null,r.createElement(n.code,null,"Request Variable"))," nomm√©e ",r.createElement(n.strong,null,r.createElement(n.code,null,"manager"))," (code possible : ",r.createElement(n.strong,null,r.createElement(n.code,null,"Authorization: {{manager.response.body.token}}")),").",r.createElement(n.br),"\n","Cela permet de cr√©er des requ√™tes plus concises."),"\n",r.createElement(n.h1,null,r.createElement(c,null," Protection des op√©rations d'√©criture d'une API ")),"\n",r.createElement(n.p,null,"Veuillez mettre √† jour votre RESTful API g√©rant les pizzas afin que toutes les op√©rations d'√©criture soient prot√©g√©es par une autorisation JWT, n'autorisant que l'utilisateur ",r.createElement(n.strong,null,"admin"),"."),"\n",r.createElement(n.p,null,"Voici le code √† mettre √† jour dans ",r.createElement(n.strong,null,r.createElement(n.code,null,"/routes/pizzas")),' pour correctement autoriser les op√©rations de suppression et de modification sur des ressources de type "pizzas":'),"\n",r.createElement(n.pre,{highlighting:"2,11"},r.createElement(n.code,{className:"language-js"},'// Delete a pizza from the menu based on its id\nrouter.delete("/:id", authorize, isAdmin, (req, res) => {\n  const id = Number(req.params.id);\n  const deletedPizza = deletePizza(id);\n  if (!deletedPizza) return res.sendStatus(404);\n\n  return res.json(deletedPizza);\n});\n\n// Update a pizza based on its id and new values for its parameters\nrouter.patch("/:id", authorize, isAdmin, (req, res) => {\n  const body: unknown = req.body;\n  if (\n    !body ||\n    typeof body !== "object" ||\n    ("title" in body &&\n      (typeof body.title !== "string" || !body.title.trim())) ||\n    ("content" in body &&\n      (typeof body.content !== "string" || !body.content.trim()))\n  ) {\n    return res.sendStatus(400);\n  }\n\n  const pizzaToUpdate: PizzaToUpdate = body;\n\n  const id = Number(req.params.id);\n  const updatedPizza = updatePizza(id, pizzaToUpdate);\n  if (!updatedPizza) return res.sendStatus(404);\n\n  return res.json(updatedPizza);\n});\n')),"\n",r.createElement(n.p,null,"Pour vous assurer que les op√©rations de suppression et de modification sont bien fonctionnelles, veuillez mettre √† jour les requ√™tes associ√©es afin d'utiliser un token. Veuillez mettre √† jour ",r.createElement(n.strong,null,r.createElement(n.code,null,"/REST Client/pizzas.http"))," en ajoutant ces lignes :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"25,30"},r.createElement(n.code,{className:"language-http"},'### Delete pizza identified by 2 with the admin token\nDELETE {{baseUrl}}/pizzas/2\nAuthorization: {{admin.response.body.token}}\n\n### Update the pizza identified by 6 with the admin token\nPATCH {{baseUrl}}/pizzas/6\nContent-Type: application/json\nAuthorization: {{admin.response.body.token}}\n\n{\n    "title":"Magic Green 2"\n}\n')),"\n",r.createElement(n.p,null,"Veuillez ex√©cutez les requ√™tes de type ",r.createElement(n.strong,null,"DELETE")," et de type ",r.createElement(n.strong,null,"PATCH")," afin de vous assurer que l'API est en ordre."),"\n",r.createElement(n.p,null,"En cas de souci, vous pouvez utiliser le code du tutoriel ",r.createElement(n.a,{href:"https://github.com/e-vinci/ts-demos/tree/main/back/api/auths"},"auths"),"."),"\n",r.createElement(n.p,null,'Si vous le souhaitez, vous pouvez aussi faire les modifications pour les ressources de type "drinks".'),"\n",r.createElement(n.p,null,"Veuillez mettre √† jour ",r.createElement(n.strong,null,r.createElement(n.code,null,"/routes/drinks"))," pour ajouter l'appel aux fonctions middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," et ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," pour les op√©rations de cr√©ation, suppression et de modification :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"1,25,34"},r.createElement(n.code,{className:"language-ts"},'router.post("/", authorize, isAdmin, (req, res) => {\n  const body: unknown = req.body;\n  if (\n    !body ||\n    typeof body !== "object" ||\n    !("title" in body) ||\n    !("image" in body) ||\n    !("volume" in body) ||\n    !("price" in body) ||\n    typeof body.title !== "string" ||\n    typeof body.image !== "string" ||\n    typeof body.volume !== "number" ||\n    typeof body.price !== "number" ||\n    !body.title.trim() ||\n    !body.image.trim() ||\n    body.volume <= 0 ||\n    body.price <= 0\n  ) {\n    return res.sendStatus(400);\n  }\n\n  const { title, image, volume, price } = body as NewDrink;\n\n  const newDrink = createOneDrink({ title, image, volume, price });\n  return res.json(newDrink);\n});\n\nrouter.delete("/:id", authorize, isAdmin, (req, res) => {\n  const id = Number(req.params.id);\n  const deletedDrink = deleteOneDrink(id);\n  if (!deletedDrink) {\n    return res.sendStatus(404);\n  }\n  return res.json(deletedDrink);\n});\n\nrouter.patch("/:id", authorize, isAdmin, (req, res) => {\n  const id = Number(req.params.id);\n\n  const body: unknown = req.body;\n\n  if (\n    !body ||\n    typeof body !== "object" ||\n    ("title" in body &&\n      (typeof body.title !== "string" || !body.title.trim())) ||\n    ("image" in body &&\n      (typeof body.image !== "string" || !body.image.trim())) ||\n    ("volume" in body &&\n      (typeof body.volume !== "number" || body.volume <= 0)) ||\n    ("price" in body && (typeof body.price !== "number" || body.price <= 0))\n  ) {\n    return res.sendStatus(400);\n  }\n\n  const { title, image, volume, price }: Partial<NewDrink> = body;\n\n  const updatedDrink = updateOneDrink(id, { title, image, volume, price });\n\n  if (!updatedDrink) {\n    return res.sendStatus(404);\n  }\n\n  return res.json(updatedDrink);\n});\n')),"\n",r.createElement(n.p,null,"N'oubliez pas de faire l'import de ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorize"))," et ",r.createElement(n.strong,null,r.createElement(n.code,null,"isAdmin"))," au d√©but du fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"/routes/drinks.ts")),"."),"\n",r.createElement(n.p,null,'Pour tester les op√©rations de cr√©ation, de suppression et de modification sur des ressources de type "drinks", veuillez mettre √† jour le script ',r.createElement(n.strong,null,r.createElement(n.code,null,"/REST Client/drinks.http"))," :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"12-20,25,38,49,55"},r.createElement(n.code,{className:"language-http"},'### Read all drinks with File variable\n@baseUrl = http://localhost:3000\nGET {{baseUrl}}/drinks\n\n### Read a single drink\nGET {{baseUrl}}/drinks/3\n\n### Read all drinks cheaper or equal to 3 ‚Ç¨\nGET {{baseUrl}}/drinks/?budget-max=3\n\n### Create a drink\n##### Define a request variable named admin :\n# @name admin\nPOST {{baseUrl}}/auths/login\nContent-Type: application/json\n\n{\n    "username":"admin",\n    "password":"admin"\n}\n\n### Create a drink with the admin token\nPOST {{baseUrl}}/drinks\nContent-Type: application/json\nAuthorization: {{admin.response.body.token}}\n\n{\n    "title":"Virgin Tonic",\n    "image":"https://plus.unsplash.com/premium_photo-1668771899398-1cdd763f745e?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",\n    "volume":0.25,\n    "price":4.5    \n}\n\n\n### Try to create a drink with incomplete data\nPOST {{baseUrl}}/drinks\nContent-Type: application/json\nAuthorization: {{admin.response.body.token}}\n\n\n{\n    "title":"Missing Data Drink",\n    "volume":0.25,\n    "price":4.5    \n}\n\n### Delete a drink\nDELETE {{baseUrl}}/drinks/5\nAuthorization: {{admin.response.body.token}}\n\n\n### Update a drink\nPATCH {{baseUrl}}/drinks/3\nContent-Type: application/json\nAuthorization: {{admin.response.body.token}}\n\n{\n    "title":"Citronnade"\n}\n')),"\n",r.createElement(n.h1,null,r.createElement(c,null," S√©curisation des passwords ")),"\n",r.createElement(n.p,null,"Nous souhaitons maintenant assurer que les passwords enregistr√©s dans un support de donn√©es (un fichier ou une base de donn√©es) ne puissent pas √™tre r√©cup√©r√©s."),"\n",r.createElement(n.p,null,"üëç Pour ce faire, il est recommand√© d'hacher les passwords avant de les enregistrer au niveau d'une API."),"\n",r.createElement(n.p,null,'Afin de se prot√©ger contre les "hash attacks", on utilise du ',r.createElement(n.strong,null,"salt")," :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"un ",r.createElement(n.strong,null,"salt")," : c'est une donn√©e al√©atoire qui est utilis√© en entr√©e d'une fonction qui hache des donn√©es. Ainsi, si un hacker utilise une base de donn√©es de passwords hach√©s, il devra en plus trouver le bon ",r.createElement(n.strong,null,"salt")," pour que son attaque puisse fonctionner."),"\n",r.createElement(n.li,null,r.createElement(n.strong,null,"salt round")," : nombre de fois que l'op√©ration de hachage est faite, rendant les attaques de force brute plus lente et donc difficile ; une valeur de ",r.createElement(n.strong,null,"10")," semble √™tre g√©n√©ralement raisonnable et recommand√©e."),"\n"),"\n",r.createElement(n.p,null,"Pour hacher sous Node.js, nous utiliserons la librairie ",r.createElement(n.a,{href:"https://www.npmjs.com/package/bcrypt"},"bcrypt"),"."),"\n",r.createElement(n.p,null,"Veuillez installer la librairie ",r.createElement(n.strong,null,r.createElement(n.code,null,"bcrypt"))," et les types associ√©s √† bcrypt au sein de votre API ",r.createElement(n.strong,null,r.createElement(n.code,null,"auths"))," :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-bash"},"npm i bcrypt \nnpm i @types/bcrypt -D\n")),"\n",r.createElement(n.p,null,"En r√©sum√©, nous allons utiliser :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"la fonction asynchrone ",r.createElement(n.strong,null,r.createElement(n.code,null,"hash"))," de ",r.createElement(n.strong,null,r.createElement(n.code,null,"bcrypt"))," pour ",r.createElement(n.strong,null,"hacher un password")," ;"),"\n",r.createElement(n.li,null,"la fonction asynchrone ",r.createElement(n.strong,null,r.createElement(n.code,null,"compare"))," de ",r.createElement(n.strong,null,r.createElement(n.code,null,"bcrypt"))," pour ",r.createElement(n.strong,null,"comparer un password en clair √† un password hach√©")," ; si le r√©sultat est positif, cela signifie que le password fournit pour un utilisateur correspond au password initial."),"\n"),"\n",r.createElement(n.p,null,"Nous pr√©f√©rons utiliser les librairies asynchrone afin que l'API reste disponible √† g√©rer des requ√™tes clientes et ne bloque pas celles-ci jusqu'√† la fin d'une op√©ration de ",r.createElement(n.strong,null,r.createElement(n.code,null,"bcrypt"))," !"),"\n",r.createElement(n.p,null,"Veuillez effacer le fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"/data/users.json"))," contenant les credentials d'utilisateurs o√π les passwords sont donn√©s en clair."),"\n",r.createElement(n.p,null,'Nous allons maintenant mettre √† jour le service "users" pour utiliser ',r.createElement(n.strong,null,r.createElement(n.code,null,"bcrypt")),". Veuillez modifier ",r.createElement(n.strong,null,r.createElement(n.code,null,"/services/users.ts"))," :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"2,10,18,22,25,28-29,45,48,52,76,79,87"},r.createElement(n.code,{className:"language-ts"},'import jwt from "jsonwebtoken";\nimport bcrypt from "bcrypt";\nimport path from "node:path";\nimport { parse, serialize } from "../utils/json";\nimport { AuthenticatedUser, User } from "../types";\n\nconst jwtSecret = "ilovemypizza!";\nconst lifetimeJwt = 24 * 60 * 60 * 1000; // in ms : 24 * 60 * 60 * 1000 = 24h\n\nconst saltRounds = 10;\n\nconst jsonDbPath = path.join(__dirname, "/../data/users.json");\n\nconst defaultUsers: User[] = [\n  {\n    id: 1,\n    username: "admin",\n    password: bcrypt.hashSync("admin", saltRounds),\n  },\n];\n\nasync function login(\n  username: string,\n  password: string\n): Promise<AuthenticatedUser | undefined> {\n  const userFound = readOneUserFromUsername(username);\n  if (!userFound) return undefined;\n  const passwordMatch = await bcrypt.compare(password, userFound.password);\n  if (!passwordMatch) return undefined;\n\n  const token = jwt.sign(\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\n    { expiresIn: lifetimeJwt } // lifetime of the JWT (added to the JWT payload)\n  );\n\n  const authenticatedUser: AuthenticatedUser = {\n    username,\n    token,\n  };\n\n  return authenticatedUser;\n}\n\nasync function register(\n  username: string,\n  password: string\n): Promise<AuthenticatedUser | undefined> {\n  const userFound = readOneUserFromUsername(username);\n  if (userFound) return undefined;\n\n  await createOneUser(username, password);\n\n  const token = jwt.sign(\n    { username }, // session data added to the payload (payload : part 2 of a JWT)\n    jwtSecret, // secret used for the signature (signature part 3 of a JWT)\n    { expiresIn: lifetimeJwt } // lifetime of the JWT (added to the JWT payload)\n  );\n\n  const authenticatedUser: AuthenticatedUser = {\n    username,\n    token,\n  };\n\n  return authenticatedUser;\n}\n\nfunction readOneUserFromUsername(username: string) {\n  const users = parse(jsonDbPath, defaultUsers);\n  const userFound = users.find((user) => user.username === username);\n  if (!userFound) return undefined;\n\n  return userFound;\n}\n\nasync function createOneUser(username: string, password: string) {\n  const users = parse(jsonDbPath, defaultUsers);\n\n  const hashedPassword = await bcrypt.hash(password, saltRounds);\n\n  const nextId =\n    users.reduce((acc, user) => (user.id > acc ? user.id : acc), 0) + 1;\n\n  const createdUser: User = {\n    id: nextId,\n    username,\n    password: hashedPassword,\n  };\n\n  users.push(createdUser);\n\n  serialize(jsonDbPath, users);\n\n  return createdUser;\n}\n\nexport { login, register, readOneUserFromUsername };\n')),"\n",r.createElement(n.p,null,"Voici les modifications apport√©es :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,r.createElement(n.strong,null,"pour cr√©er un password hach√©")," : on utilise la fonction asynchrone ",r.createElement(n.strong,null,r.createElement(n.code,null,"hash"))," pour cr√©er le password hach√©. D√®s lors, ",r.createElement(n.strong,null,r.createElement(n.code,null,"createOneUser"))," devient asynchrone. De plus, comme ",r.createElement(n.strong,null,r.createElement(n.code,null,"createOneUser"))," est devenue asynchrone, dans ",r.createElement(n.strong,null,r.createElement(n.code,null,"register")),", pour cha√Æner le traitement de cr√©ation du token, on met un ",r.createElement(n.strong,null,r.createElement(n.code,null,"await"))," √† l'appel de ",r.createElement(n.strong,null,r.createElement(n.code,null,"createOneUser")),". Et comme un ",r.createElement(n.strong,null,r.createElement(n.code,null,"await"))," est ajout√© au sein de ",r.createElement(n.strong,null,r.createElement(n.code,null,"register")),", il faut mettre un ",r.createElement(n.strong,null,r.createElement(n.code,null,"async"))," √† la m√©thode ",r.createElement(n.strong,null,r.createElement(n.code,null,"register")),". Attention, du coup, comme ",r.createElement(n.strong,null,r.createElement(n.code,null,"register"))," est devenue asynchrone, il faudra aussi bien cha√Æner les traitements o√π ",r.createElement(n.strong,null,r.createElement(n.code,null,"register"))," est appel√©, dans le router ",r.createElement(n.strong,null,r.createElement(n.code,null,"auths")),". Notez aussi que nous avons chang√© le type de retour des fonctions asynchrones qui renvoient maintenant des ",r.createElement(n.strong,null,r.createElement(n.code,null,"Promise")),"."),"\n",r.createElement(n.li,null,r.createElement(n.strong,null,'pour v√©rifier qu\'un password en clair "match" √† un password hach√©')," : on utilise la fonction asynchrone ",r.createElement(n.strong,null,r.createElement(n.code,null,"compare"))," que l'on cha√Æne √† la cr√©ation du token √† l'aide de ",r.createElement(n.strong,null,r.createElement(n.code,null,"await")),". D√®s lors, la fonction ",r.createElement(n.strong,null,r.createElement(n.code,null,"login"))," doit elle aussi √™tre d√©clar√©e ",r.createElement(n.strong,null,r.createElement(n.code,null,"async")),". Attention, du coup, comme ",r.createElement(n.code,null,"login")," est devenue asynchrone, il faudra bien cha√Æner les traitements o√π ",r.createElement(n.strong,null,r.createElement(n.code,null,"login"))," est appel√©, dans le router ",r.createElement(n.strong,null,r.createElement(n.code,null,"auths")),"."),"\n",r.createElement(n.li,null,r.createElement(n.strong,null,"pour cr√©er l'utilisateur ",r.createElement(n.strong,null,r.createElement(n.code,null,"admin"))," se trouvant dans les ",r.createElement(n.strong,null,r.createElement(n.code,null,"defaultUsers"))," avec des credentials par d√©faut")," : on souhaite indiquer comme ",r.createElement(n.strong,null,r.createElement(n.code,null,"password"))," le password hach√© correspondant au password ",r.createElement(n.strong,null,r.createElement(n.code,null,'"admin"')),". Pour se simplifier la vie, on appelle la fonction synchrone ",r.createElement(n.strong,null,r.createElement(n.code,null,"hashSync"))," (voir ligne 18). Bien √©videmment, dans une application robuste et s√©curis√©e, il est interdit de coder en dur ce genre de secrets dans les sources de notre application üòâ !"),"\n"),"\n",r.createElement(n.p,null,"Afin de traiter des deux fonctions du service ",r.createElement(n.strong,null,r.createElement(n.code,null,"users"))," qui sont devenues asynchrones, ",r.createElement(n.strong,null,r.createElement(n.code,null,"login"))," et ",r.createElement(n.strong,null,r.createElement(n.code,null,"register")),", nous allons modifier le router ",r.createElement(n.strong,null,r.createElement(n.code,null,"/routes/auths"))," :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"13,30,40,57"},r.createElement(n.code,{className:"language-ts"},'/* eslint-disable @typescript-eslint/no-misused-promises */\n/* \nIn Express V4, asynchronous functions are not fully supported in TypeScript \n(only void return type for RequestHandler is allowed). \nIn Express V5, this issue has been addressed, but V5 is still in beta. \nConsequently, the ESLint rule "no-misused-promises" is disabled. */\nimport { Router } from "express";\nimport { PotentialUser } from "../types";\nimport { login, register } from "../services/users";\nconst router = Router();\n\n/* Register a user */\nrouter.post("/register", async (req, res) => {\n  const body: unknown = req.body;\n  if (\n    !body ||\n    typeof body !== "object" ||\n    !("username" in body) ||\n    !("password" in body) ||\n    typeof body.username !== "string" ||\n    typeof body.password !== "string" ||\n    !body.username.trim() ||\n    !body.password.trim()\n  ) {\n    return res.sendStatus(400);\n  }\n\n  const { username, password } = body as PotentialUser;\n\n  const authenticatedUser = await register(username, password);\n\n  if (!authenticatedUser) {\n    return res.sendStatus(409);\n  }\n\n  return res.json(authenticatedUser);\n});\n\n/* Login a user */\nrouter.post("/login", async (req, res) => {\n  const body: unknown = req.body;\n  if (\n    !body ||\n    typeof body !== "object" ||\n    !("username" in body) ||\n    !("password" in body) ||\n    typeof body.username !== "string" ||\n    typeof body.password !== "string" ||\n    !body.username.trim() ||\n    !body.password.trim()\n  ) {\n    return res.sendStatus(400);\n  }\n\n  const { username, password } = body as PotentialUser;\n\n  const authenticatedUser = await login(username, password);\n\n  if (!authenticatedUser) {\n    return res.sendStatus(401);\n  }\n\n  return res.json(authenticatedUser);\n});\n\nexport default router;\n')),"\n",r.createElement(n.p,null,"Nous avons simplement cha√Æn√© les r√©ponses √† faire au client seulement une fois les op√©rations ",r.createElement(n.strong,null,r.createElement(n.code,null,"register"))," et ",r.createElement(n.strong,null,r.createElement(n.code,null,"login"))," termin√©es. Pour ce faire, nous avons pr√©c√©d√© le nom de ces m√©thodes par ",r.createElement(n.strong,null,r.createElement(n.code,null,"await")),". Nous avons donc du ajouter ",r.createElement(n.strong,null,r.createElement(n.code,null,"async"))," aux fonctions middleware s'occupant des routes ",r.createElement(n.strong,null,r.createElement(n.code,null,"POST /auths/register"))," et ",r.createElement(n.strong,null,r.createElement(n.code,null,"POST /auths/login")),"."),"\n",r.createElement(n.p,null,"Notons que nous avons ajout√© un commentaire pour d√©sactiver la r√®gle ",r.createElement(n.strong,null,r.createElement(n.code,null,"@typescript-eslint/no-misused-promises")),". En effet, dans Express V4, les fonctions asynchrones ne sont pas pleinement support√©es en TypeScript (seul le type de retour ",r.createElement(n.strong,null,r.createElement(n.code,null,"void"))," pour ",r.createElement(n.strong,null,r.createElement(n.code,null,"RequestHandler"))," est autoris√©). Dans Express V5, ce probl√®me a √©t√© r√©solu, mais V5 est toujours en version b√™ta. Par cons√©quent, la r√®gle ESLint ",r.createElement(n.strong,null,r.createElement(n.code,null,"no-misused-promises"))," est d√©sactiv√©e."),"\n",r.createElement(n.p,null,"Veuillez v√©rifier que votre application fonctionne correctement.",r.createElement(n.br),"\n","Via l'IHM, veuillez faire un register d'un nouvel utilisateur.",r.createElement(n.br),"\n","Au niveau de l'API, allez voir le contenu du nouveau fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"/data/users.json")),". Les passwords devraient maintenant √™tre hach√©s, comme par exemple :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-json"},'[\n  {\n    "id": 1,\n    "username": "admin",\n    "password": "$2b$10$RioLKlPFyYFEhv/46gR7dufDkke07eDpWH9tBt/A4Z9tJh0oJnnf2"\n  },\n  {\n    "id": 2,\n    "username": "manager",\n    "password": "$2b$10$NZZ1zxOPdby6gl4Dw8K0Q.v4ZRWTbh1Ta7qcYzH5G4SrO5z71H0kO"\n  }\n]\n')),"\n",r.createElement(n.p,null,"En cas de souci, vous pouvez utiliser le code du tutoriel ",r.createElement(n.a,{href:"https://github.com/e-vinci/ts-demos/tree/main/back/api/auths"},"auths"),"."),"\n",r.createElement(n.h1,null,r.createElement(c,null," Exercice 3.1 : Authentification & autorisation d'op√©rations ")),"\n",r.createElement(n.p,null,"Vous allez s√©curiser la RESTful API de ",r.createElement(n.strong,null,"myMovies"),"."),"\n",r.createElement(n.h2,null,"Mise en place du projet"),"\n",r.createElement(n.p,null,"Veuillez cr√©er un nouveau projet ans votre repo git dans ",r.createElement(n.strong,null,r.createElement(n.code,null,"/exercises/3.1"))," en clonant le boilerplate du cours offrant l'authentification et l'autorisation JWT : ",r.createElement(n.a,{href:"https://github.com/e-vinci/jwt-ts-api-boilerplate"},"jwt-ts-api-boilerplate"),". Dans ce boilerplate, vous trouverez d√©j√† un service ",r.createElement(n.strong,null,r.createElement(n.code,null,"users"))," qui g√®re les utilisateurs, ainsi que des routes pour les op√©rations de ",r.createElement(n.strong,null,r.createElement(n.code,null,"login"))," et de ",r.createElement(n.strong,null,r.createElement(n.code,null,"register")),"."),"\n",r.createElement(n.p,null,"‚ö°Ô∏è Attention, n'oubliez pas les soucis d'avoir un git dans le git... Pensez √† supprimer le dossier ",r.createElement(n.strong,null,r.createElement(n.code,null,".git"))," de votre nouveau projet."),"\n",r.createElement(n.h2,null,"Identification des op√©rations & cr√©ation de la documentation de l'API"),"\n",r.createElement(n.p,null,"Nous allons maintenant passer √† une phase d'analyse de votre API. Nous allons documenter les op√©rations de votre API, ainsi que les op√©rations qui seront prot√©g√©es par JWT."),"\n",r.createElement(n.p,null,"Pour les op√©rations existantes sur des films, vous devez planifier de prot√©ger les op√©rations d'√©criture (cr√©ation, modification, suppression) de vos films par JWT. Les op√©rations de lecture de films ne doivent pas √™tre prot√©g√©es par JWT."),"\n",r.createElement(n.p,null,"Pour la protection des op√©rations, vous ne devrez pas g√©rer de r√¥les, mais simplement v√©rifier que l'utilisateur est authentifi√©."),"\n",r.createElement(n.p,null,"Vous devez planifier des nouvelles op√©rations :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"lire tous les commentaires et pouvoir les filtrer par film ;"),"\n",r.createElement(n.li,null,"ajouter des commentaires sur un film, en y associant l'utilisateur ou l'utilisatrice authentifi√©e ;"),"\n",r.createElement(n.li,null,"effacer un commentaire sur un film sur base de l'utilisateur ou de l'utilisatrice authentifi√©e."),"\n"),"\n",r.createElement(n.p,null,"Veuillez identifier toutes les op√©rations mises √† disposition par votre API (y compris l'authentification), ainsi que si celles-ci sont prot√©g√©es par JWT, au sein du fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"README.md"))," (fichier Markdown) de votre projet. Voici un exemple de comment nous vous recommandons de documenter votre API, sous forme de tableau :"),"\n",r.createElement(n.table,null,r.createElement(n.thead,null,r.createElement(n.tr,null,r.createElement(n.th,null,"URI"),r.createElement(n.th,null,"M√©thode HTTP"),r.createElement(n.th,null,"Auths?"),r.createElement(n.th,null,"Op√©ration"))),r.createElement(n.tbody,null,r.createElement(n.tr,null,r.createElement(n.td,null,r.createElement(n.strong,null,r.createElement(n.code,null,"films"))),r.createElement(n.td,null,"GET"),r.createElement(n.td,null,"Non"),r.createElement(n.td,null,"READ ALL : Lire toutes les ressources de la collection")),r.createElement(n.tr,null,r.createElement(n.td,null,r.createElement(n.strong,null,r.createElement(n.code,null,"films/:id"))),r.createElement(n.td,null,"GET"),r.createElement(n.td,null,"Non"),r.createElement(n.td,null,"READ ALL : Lire une ressource de la collection")),r.createElement(n.tr,null,r.createElement(n.td,null,r.createElement(n.strong,null,r.createElement(n.code,null,"films"))),r.createElement(n.td,null,"POST"),r.createElement(n.td,null,"Oui"),r.createElement(n.td,null,"CREATE ONE : Cr√©er une ressource de la collection bas√©e sur un body au format ",r.createElement(n.code,null,"{title: string; director: string;  duration: number;  budget?: number;  description?: string;  imageUrl?: string;  }"))),r.createElement(n.tr,null,r.createElement(n.td,null,"..."),r.createElement(n.td,null,"..."),r.createElement(n.td,null,"..."),r.createElement(n.td,null,"...")),r.createElement(n.tr,null,r.createElement(n.td,null,r.createElement(n.strong,null,r.createElement(n.code,null,"comments"))),r.createElement(n.td,null,"GET"),r.createElement(n.td,null,"JWT"),r.createElement(n.td,null,"READ ALL FILTERED : Lire toutes les ressources de la collection")),r.createElement(n.tr,null,r.createElement(n.td,null,r.createElement(n.strong,null,r.createElement(n.code,null,"comments"))),r.createElement(n.td,null,"POST"),r.createElement(n.td,null,"JWT"),r.createElement(n.td,null,"CREATE ONE : Cr√©er une ressource bas√©e sur un body au format ",r.createElement(n.code,null,"{...}"))),r.createElement(n.tr,null,r.createElement(n.td,null,"..."),r.createElement(n.td,null,"..."),r.createElement(n.td,null,"..."),r.createElement(n.td,null,"...")))),"\n",r.createElement("br"),"\n",r.createElement(n.p,null,"Comment cr√©er un tableau dans un fichier Markdown (pour ",r.createElement(n.strong,null,r.createElement(n.code,null,"README.md")),") ?",r.createElement(n.br),"\n","Voici deux options :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Soit vous utiliser des ",r.createElement(n.strong,null,r.createElement(n.code,null,"|"))," pour d√©limiter les cellules et des ",r.createElement(n.strong,null,r.createElement(n.code,null,"|---|"))," pour s√©parer les headers du corps du tableau.\nVoici le Markdown de l'exemple donn√© ci-dessus :"),"\n"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-text"},"| URI | M√©thode HTTP | Auths? | Op√©ration |\n|---|---|---|---|\n| **`films`** | GET | Non | READ ALL : Lire toutes les ressources de la collection |\n| **`films/:id`** | GET | Non | READ ALL : Lire une ressource de la collection |\n| **`films`** | POST | Oui | CREATE ONE : Cr√©er une ressource de la collection bas√©e sur un body au format `{title: string; director: string;  duration: number;  budget?: number;  description?: string;  imageUrl?: string;  }` |\n| ... | ... | ... | ... |\n| **`comments`** | GET | JWT | READ ALL FILTERED : Lire toutes les ressources de la collection |\n| **`comments`** | POST | JWT | CREATE ONE : Cr√©er une ressource bas√©e sur un body au format `{...}` |\n| ... | ... | ... | ... |\n")),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Soit c'est simplement un tableau HTML (",r.createElement(n.code,null,"<table>"),")."),"\n"),"\n",r.createElement(n.p,null,"Une fois la documentation de votre API pr√™te, veuillez faire un commit avec le message suivant : ",r.createElement(n.strong,null,r.createElement(n.code,null,"new:ex3.1-doc")),"."),"\n",r.createElement(n.h2,null,"S√©curiser les op√©rations d'√©criture pour les films"),"\n",r.createElement(n.p,null,"Vous allez maintenant travailler sur le code de votre nouveau projet."),"\n",r.createElement(n.p,null,"Dans votre nouveau projet, dans un premier temps, sans utiliser JWT, veuillez int√©grer le code utile de vos op√©rations (router & service de ",r.createElement(n.strong,null,r.createElement(n.code,null,"films")),", requ√™tes HTTP pour tester les op√©rations sur les ",r.createElement(n.strong,null,r.createElement(n.code,null,"films")),") de votre ",r.createElement(n.strong,null,r.createElement(n.code,null,"/exercises/1.8")),"."),"\n",r.createElement(n.p,null,"Veuillez prot√©ger les op√©rations d'√©criture (cr√©ation, modification, suppression) de vos films par JWT (en int√©grant l'authentification) et v√©rifier que les op√©rations prot√©g√©es fonctionnent correctement via REST Client.",r.createElement(n.br),"\n","Vous devez assurer qu'un utilisateur non authentifi√© ne puisse pas cr√©er, modifier ou supprimer un film."),"\n",r.createElement(n.p,null,"Une fois tout fonctionnel, veuillez faire un commit avec le message suivant : ",r.createElement(n.strong,null,r.createElement(n.code,null,"new:ex3.1")),"."),"\n",r.createElement(n.h2,null,"Impl√©menter les op√©rations associ√©es aux commentaires"),"\n",r.createElement(n.p,null,"Vous pouvez impl√©menter les nouvelles op√©rations de gestion de commentaires et les prot√©ger par JWT."),"\n",r.createElement(n.p,null,"Veuillez v√©rifier que vos op√©rations sont bien prot√©g√©es et fonctionnelles en les testant avec Rest Client."),"\n",r.createElement(n.p,null,"Veuillez bien nettoyer votre code et ne pas laisser de code mort."),"\n",r.createElement(n.p,null,"Quand votre api est finalis√©e et test√©e, veuillez faire un ",r.createElement(n.strong,null,r.createElement(n.code,null,"commit"))," de votre code avec comme message : ",r.createElement(n.strong,null,r.createElement(n.code,null,"new: ex3.1-comments")),"."),"\n",r.createElement(n.h2,null,"S√©curisation de vos op√©rations"),"\n",r.createElement(n.p,null,"üí≠ Avez-vous bien prot√©g√© vos op√©rations ?",r.createElement(n.br),"\n","Est-ce que pour l'op√©ration de cr√©ation d'un commentaire, vous avez bien associ√© l'utilisateur ou l'utilisatrice authentifi√©e √† ce commentaire sur base du token fourni par l'application cliente ? En effet, si vous utilisez le body pour valider le username sans checker le token, il est facilement possible de modifier le body et de cr√©er un commentaire au nom d'un autre utilisateur...",r.createElement(n.br),"\n","De m√™me pour l'op√©ration de suppression d'un commentaire, avez-vous avez bien v√©rifi√© l'utilisateur ou l'utilisatrice authentifi√©e via le token ? Ou est-ce que vous avez simplement v√©rifi√© le username √† partir de l'URL ?"),"\n",r.createElement(n.p,null,"üí≠ Concernant la gestion du contrat associ√© √† vos op√©rations, les status codes, avez-vous pens√© √† :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"v√©rifier lors de la cr√©ation d'un commentaire que le film existe bien ? que l'utilisateur ou l'utilisatrice n'a pas d√©j√† comment√© ce film ?"),"\n",r.createElement(n.li,null,"v√©rifier lors de la suppression d'un commentaire que le commentaire existe bien pour l'utilisateur ou l'utilisatrice authentifi√©e et pour le film indiqu√© e ?"),"\n"),"\n",r.createElement(n.p,null,"Si n√©cessaire, veuillez mettre √† jour votre API, sa documentation et vos tests pour corriger les √©ventuelles soucis."),"\n",r.createElement(n.p,null,"Quand votre api est finalis√©e et test√©e, veuillez faire un ",r.createElement(n.strong,null,r.createElement(n.code,null,"commit"))," de votre code avec comme message : ",r.createElement(n.strong,null,r.createElement(n.code,null,"new: ex3.1-s√©curit√©")),"."),"\n",r.createElement(n.h1,null,r.createElement(c,null," üç¨ Exercice 3.2 : une autre API s√©curis√©e ")),"\n",r.createElement(n.p,null,"Cet exercice est optionnel, n'h√©sitez pas √† le faire si vous avez du temps."),"\n",r.createElement(n.p,null,"Peut-√™tre avez-vous d√©j√† entendu parler de cette mode montante dans le Web qu'est la JAMstack ?"),"\n",r.createElement(n.p,null,"Nous souhaitons d√©velopper un Headless CMS, c'est-√†-dire un outil permettant de cr√©er du contenu, tr√®s souvent utilis√© dans le cadre de sites JAMstack."),"\n",r.createElement(n.p,null,"Un Headless CMS fournira une interface web pour cr√©er du contenu (ou des donn√©es), ainsi qu'une RESTful API mettant √† disposition ce contenu."),"\n",r.createElement(n.p,null,"L'Headless CMS que nous souhaitons d√©velopper doit permettre de cr√©er le contenu associ√© √† un blog."),"\n",r.createElement(n.p,null,"Un blog sera structur√© en pages. Une page aura un id, un titre, un URI, un contenu, un auteur ainsi qu'un statut de publication."),"\n",r.createElement(n.p,null,"Le statut de publication d'une page peut actuellement prendre comme valeur :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"¬´ hidden ¬ª"),"\n",r.createElement(n.li,null,"¬´ published ¬ª"),"\n"),"\n",r.createElement(n.p,null,"Seul un utilisateur authentifi√© pourra lire, cr√©er, modifier ou supprimer des pages."),"\n",r.createElement(n.p,null,"La modification d'une page, tout comme la suppression d'une page ne pourra se faire que par son auteur."),"\n",r.createElement(n.p,null,"L'ajout ou la modification d'une page ne sera possible que si le statut de publication donn√© correspond √† un des deux statuts actuels (¬´ hidden ou ¬´ published ¬ª). Sinon un message d'erreur devra √™tre renvoy√©."),"\n",r.createElement(n.p,null,"La lecture d'une page, ou de toutes les pages, pourra √™tre r√©alis√©e par n'importe quel utilisateur authentifi√© pour les pages dont le statut vaut ¬´ published ¬ª."),"\n",r.createElement(n.p,null,"Pour les pages dont le statut vaut ¬´ hidden ¬ª, seul leur auteur authentifi√© pourra les lire."),"\n",r.createElement(n.p,null,"Veuillez cr√©er un nouveau projet dans votre repo git dans ",r.createElement(n.strong,null,r.createElement(n.code,null,"/exercises/3.2"))," sur base du boilerplate : ",r.createElement(n.a,{href:"https://github.com/e-vinci/jwt-ts-api-boilerplate"},"jwt-ts-api-boilerplate"),"."),"\n",r.createElement(n.p,null,"‚ö° Si vous avez fait un clone du boilerplate, attention au Git dans le Git, n'oubliez pas de supprimer le dossier ",r.createElement(n.strong,null,r.createElement(n.code,null,".git"))," pr√©sent dans votre nouveau projet."),"\n",r.createElement(n.p,null,"Puis, veuillez formaliser les op√©rations associ√©es √† vos RESTful APIs sous forme d'un tableau dans un fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"README.md")),"."),"\n",r.createElement(n.p,null,"Veuillez tester toutes les m√©thodes offertes par votre application √† l'aide du client HTTP de REST Client."),"\n",r.createElement(n.p,null,"Veuillez faire un ",r.createElement(n.strong,null,r.createElement(n.code,null,"commit"))," de votre code avec le message suivant : ",r.createElement(n.strong,null,r.createElement(n.code,null,"new: ex3.2")),"."),"\n",r.createElement(n.h2,null,"üç¨ Bonus"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"N¬∞1 : vous souhaitez rapidement d√©couvrir les principes d'une architecture Web associ√©e √† la JAMstack ? ",r.createElement(n.a,{href:"https://jamstack.wtf/"},"https://jamstack.wtf/")),"\n",r.createElement(n.li,null,"N¬∞2 : si vous souhaitez d√©couvrir le format Markdown, notamment tr√®s souvent utilis√© dans certains sites JAMstack (source des donn√©es pour certains Headless CMS) : ",r.createElement(n.a,{href:"https://www.markdownguide.org/basic-syntax/"},"https://www.markdownguide.org/basic-syntax/")),"\n"),"\n",r.createElement(n.h2,null,"üç¨ Challenges"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"N¬∞1 : Modifiez les autorisations au niveau des op√©rations de lecture : la lecture d'une page, ou de toutes les pages, pourra √™tre r√©alis√©e par n'importe quel utilisateur anonyme ou authentifi√© pour les pages dont le statut vaut ¬´ published ¬ª. Pour les pages dont le statut vaut ¬´ hidden ¬ª, seul leur auteur authentifi√© pourra les lire."),"\n",r.createElement(n.li,null,"N¬∞2 : lorsqu'un utilisateur tente d'effacer ou modifier une page dont il n'est pas l'auteur, renvoyez un code d'erreur appropri√© au client."),"\n",r.createElement(n.li,null,"N¬∞3 : Si √ßa n'est pas d√©j√† fait, pensez √† ne pas renvoyer les passwords des utilisateurs dans les r√©ponses de votre API."),"\n"),"\n",r.createElement(n.h1,null,r.createElement(c,null," üç¨ Authentification & autorisation JWT √† l'aide de cookies ")),"\n",r.createElement(n.h2,null,"Pourquoi utiliser l'autorisation JWT √† l'aide de cookies ?"),"\n",r.createElement(n.p,null,"Nous avons vu une fa√ßon de g√©rer des token JWT, sans g√©rer de cookies."),"\n",r.createElement(n.p,null,"Cela impose aux client de sauvegarder les tokens et de les envoyer dans un ",r.createElement(n.strong,null,r.createElement(n.code,null,"authorization header"))," lorsqu'ils souhaitent acc√©der √† une op√©ration prot√©g√©e."),"\n",r.createElement(n.p,null,"Il est aussi possible d'int√©grer les tokens au sein de cookies. Dans ce cas-l√†, les clients qui ont re√ßu un cookie de l'API renverront automatiquement ce cookie (m√©canisme des browsers). Les tokens JWT voyageront automatiquement gr√¢ce au m√©canisme de cookies."),"\n",r.createElement(n.p,null,"üí≠ Faut-il mieux int√©grer les token JWT dans des cookies ou pas ?",r.createElement(n.br),"\n","Il est difficile de donner une r√©ponse √† cette question. Chaque approche a des avantages et des inconv√©nients. Ce qui devrait √™tre le point d'attention, c'est la s√©curit√©. Et dans les deux cas, on atteint un niveau de s√©curit√© raisonnable.\nPour ce cours, nous avons choisi la fa√ßon la plus moderne, en laissant au client le choix de sauvegarder les token dans le web storage (nous allons voir √ßa tout prochainement pour l'aspect frontend).",r.createElement(n.br),"\n","Notons que le cas le plus s√ªr est probablement d'avoir deux types de token, ce qui est d'une complexit√© qui d√©passe les objectifs de ce cours. N√©anmoins, pour votre info, les m√©canismes d'authentification comme OAuth (authorization de MS Azure) & OpenID Connect (authentification de MS Azure) g√®re deux types de token :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"un token √† dur√©e de vie courte qui sera enregistr√© en m√©moire vive au niveau du client (access token) ou dans le web storage."),"\n",r.createElement(n.li,null,"un token √† dur√©e de vie longue qui sera enregistr√© par le client dans un cookie (refresh token, notamment utilis√© par l'API pour cr√©er un nouvel access token)."),"\n"),"\n",r.createElement(n.h2,null,"Un cookie, c'est quoi ?"),"\n",r.createElement(n.p,null,"Un ",r.createElement(n.strong,null,"cookie")," repr√©sente des donn√©es qu'un serveur envoie √† un browser.",r.createElement(n.br),"\n","Le browser peut sauver ce cookie. Pour chaque requ√™te faite au serveur sur la m√™me origine (que l'origine o√π le cookie a √©t√© re√ßu), le cookie sera automatiquement envoy√© au serveur."),"\n",r.createElement(n.p,null,"Il fut un temps o√π les cookies √©taient utilis√©s comme un m√©canisme g√©n√©ral de stockage de donn√©es c√¥t√© client."),"\n",r.createElement(n.p,null,"üëç Actuellement, si les cookies sont utilis√©s pour sauvegarder les donn√©es de session, il faut se prot√©ger contre les attaques XSS et rendre les cookies inaccessibles au JavaScript : on utilise donc les cookies ",r.createElement(n.strong,null,r.createElement(n.code,null,"HttpOnly"))," qui sont inaccessibles √† la ",r.createElement(n.strong,null,r.createElement(n.code,null,"Document.cookie API")),"."),"\n",r.createElement(n.p,null,"Pour la suite, on va donc voir :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"comment utiliser Express pour cr√©er des cookies au niveau d'une API ;"),"\n",r.createElement(n.li,null,"comment rendre ces cookies inaccessibles aux attaques XSS en configurant ",r.createElement(n.strong,null,r.createElement(n.code,null,"HttpOnly")),"."),"\n"),"\n",r.createElement(n.h2,null,"Impl√©mentation de l'authentification & l'autorisation JWT au sein de cookies"),"\n",r.createElement(n.h3,null,"Intro"),"\n",r.createElement(n.p,null,"Nous allons donc cr√©er une nouvelle version de l'API sauvegardant le token d'un utilisateur au sein d'un cookie, ainsi que son username, sans que ces infos soient accessible au JS c√¥t√© client."),"\n",r.createElement(n.p,null,"Pour ce faire nous allons utiliser la librairie ",r.createElement(n.a,{href:"https://github.com/expressjs/cookie-session"},"cookie-session")," qui permet d'enregistrer des donn√©es de session dans des cookies."),"\n",r.createElement(n.p,null,"Veuillez cr√©er un nouveau projet nomm√© ",r.createElement(n.strong,null,r.createElement(n.code,null,"/back/api/cookies"))," sur base d'un copi√©/coll√© du projet ",r.createElement(n.a,{href:"https://github.com/e-vinci/ts-demos/tree/main/back/api/auths"},"auths"),")."),"\n",r.createElement(n.p,null,"Veuillez installer la librairie ",r.createElement(n.strong,null,r.createElement(n.code,null,"cookie-session"))," au sein de votre nouveau projet ",r.createElement(n.strong,null,r.createElement(n.code,null,"cookies"))," et les types associ√©s (pour TypeScript):"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-bash"},"npm i cookie-session\nnpm install @types/cookie-session -D\n")),"\n",r.createElement(n.h3,null,"Utilisation de la fonction middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"cookieSession"))),"\n",r.createElement(n.p,null,"Veuillez mettre √† jour ",r.createElement(n.strong,null,r.createElement(n.code,null,"/app.ts"))," pour mettre en place la gestion de cookies :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"2,11-20"},r.createElement(n.code,{className:"language-ts"},'import express, { ErrorRequestHandler } from "express";\nimport cookieSession from "cookie-session";\n\nimport usersRouter from "./routes/users";\nimport pizzaRouter from "./routes/pizzas";\nimport drinkRouter from "./routes/drinks";\nimport authsRouter from "./routes/auths";\n\nconst app = express();\n\nconst expiryDateIn3Months = new Date(Date.now() + 1000 * 60 * 60 * 24 * 30 * 3);\nconst cookieSecreteKey = \'YouWouldnot!not!like!mypizza\';\napp.use(\n  cookieSession({\n    name: \'user\',\n    keys: [cookieSecreteKey],  \n    httpOnly: true,\n    expires: expiryDateIn3Months,\n  }),\n);\n\napp.use((_req, _res, next) => {\n  console.log(\n    "Time:",\n    new Date().toLocaleString("fr-FR", { timeZone: "Europe/Brussels" })\n  );\n  next();\n});\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use("/users", usersRouter);\napp.use("/pizzas", pizzaRouter);\napp.use("/drinks", drinkRouter);\napp.use("/auths", authsRouter);\n\nconst errorHandler: ErrorRequestHandler = (err, _req, res, _next) => {\n  console.error(err.stack);\n  return res.status(500).send("Something broke!");\n};\n\napp.use(errorHandler);\nexport default app;\n')),"\n",r.createElement(n.p,null,"Nous avons donc bien indiqu√© que le cookie est inaccessible au JS via : ",r.createElement(n.strong,null,r.createElement(n.code,null,"httpOnly: true")),"."),"\n",r.createElement(n.p,null,"Nous avons fait en sorte que le cookie soit sign√© via la cl√© ",r.createElement(n.strong,null,r.createElement(n.code,null,"cookieSecreteKey")),".",r.createElement(n.br),"\n","Le m√©canisme de signature correspond √† ce qui a √©t√© vu dans le cadre des tokens JWT.",r.createElement(n.br),"\n","Ainsi, si un cookie venait √™tre modifi√© par un utilisateur, lors de la v√©rification du cookie, cela sera automatiquement d√©tect√© par la fonction middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"cookieSession"))," et la session ne sera pas cr√©√©e."),"\n",r.createElement(n.p,null,"Pour info, la fonction middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"cookieSession"))," va cr√©er deux cookies :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"un cookie portant comme nom la valeur de ",r.createElement(n.strong,null,r.createElement(n.code,null,"name"))," ; il est encod√© en base64. N'h√©sitez pas √† vous amuser √† d√©coder un cookie g√©n√©r√© par ",r.createElement(n.strong,null,r.createElement(n.code,null,"cookieSession"))," sur ",r.createElement(n.a,{href:"https://www.base64decode.org/"},"base64decode"),"."),"\n",r.createElement(n.li,null,"un cookie portant comme nom la valeur de ",r.createElement(n.strong,null,r.createElement(n.code,null,"name"))," + ",r.createElement(n.strong,null,r.createElement(n.code,null,".sig"))," : c'est la signature qui pr√©vient contre le \"tempering\" (acte intentionnel mais non autoris√© qui am√®ne √† la modification d'un syst√®me ou de donn√©es)."),"\n"),"\n",r.createElement(n.h3,null,"Lecture et ajout de donn√©es de session via ",r.createElement(n.code,null,"req.session")),"\n",r.createElement(n.p,null,"Pour cr√©er des donn√©es de session, il suffit de simplement les ajouter √† l'objet ",r.createElement(n.strong,null,r.createElement(n.code,null,"req.session")),"."),"\n",r.createElement(n.p,null,"Dans le cadre de la RESTful API g√©rant les pizzas, cela est fait lors d'une op√©ration de type ",r.createElement(n.strong,null,r.createElement(n.code,null,"register"))," ou ",r.createElement(n.strong,null,r.createElement(n.code,null,"login")),"."),"\n",r.createElement(n.p,null,"Veuillez mettre √† jour le router ",r.createElement(n.strong,null,r.createElement(n.code,null,"/routes/auths.ts"))," :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"36,65,70-74,76-85"},r.createElement(n.code,{className:"language-ts"},'/* eslint-disable @typescript-eslint/no-misused-promises */\n/* \nIn Express V4, asynchronous functions are not fully supported in TypeScript \n(only void return type for RequestHandler is allowed). \nIn Express V5, this issue has been addressed, but V5 is still in beta. \nConsequently, the ESLint rule "no-misused-promises" is disabled. */\nimport { Request, Router } from "express";\nimport { AuthenticatedUser, PotentialUser } from "../types";\nimport { login, register } from "../services/users";\nconst router = Router();\n\n/* Register a user */\nrouter.post("/register", async (req, res) => {\n  const body: unknown = req.body;\n  if (\n    !body ||\n    typeof body !== "object" ||\n    !("username" in body) ||\n    !("password" in body) ||\n    typeof body.username !== "string" ||\n    typeof body.password !== "string" ||\n    !body.username.trim() ||\n    !body.password.trim()\n  ) {\n    return res.sendStatus(400);\n  }\n\n  const { username, password } = body as PotentialUser;\n\n  const authenticatedUser = await register(username, password);\n\n  if (!authenticatedUser) {\n    return res.sendStatus(409);\n  }\n\n  createCookieSessionData(req, authenticatedUser);\n\n  return res.json({ username: authenticatedUser.username });\n});\n\n/* Login a user */\nrouter.post("/login", async (req, res) => {\n  const body: unknown = req.body;\n  if (\n    !body ||\n    typeof body !== "object" ||\n    !("username" in body) ||\n    !("password" in body) ||\n    typeof body.username !== "string" ||\n    typeof body.password !== "string" ||\n    !body.username.trim() ||\n    !body.password.trim()\n  ) {\n    return res.sendStatus(400);\n  }\n\n  const { username, password } = body as PotentialUser;\n\n  const authenticatedUser = await login(username, password);\n\n  if (!authenticatedUser) {\n    return res.sendStatus(401);\n  }\n\n  createCookieSessionData(req, authenticatedUser);\n\n  return res.json({ username: authenticatedUser.username });\n});\n\n/* Logout a user */\nrouter.get("/logout", (req, res) => {\n  req.session = null;\n  return res.sendStatus(200);\n});\n\nfunction createCookieSessionData(\n  req: Request,\n  authenticatedUser: AuthenticatedUser\n) {\n  if (!req.session) {\n    return;\n  }\n  req.session.username = authenticatedUser.username;\n  req.session.token = authenticatedUser.token;\n}\n\nexport default router;\n')),"\n",r.createElement(n.p,null,"Dans le code ci-dessus, nous pr√©parons les donn√©es de session qui seront √©crites dans le cookie √† l'aide de l'objet ",r.createElement(n.strong,null,r.createElement(n.code,null,"req.session")),".",r.createElement(n.br),"\n","Lorsque nous renvoyons du JSON aux clients, nous ne renvoyons plus le token, mais juste le username de l'utilisateur. L'application cliente, le browser, pourra utiliser cette info pour afficher le nom de l'utilisateur. Pour rappel, le browser n'a pas acc√®s, via le JS, √† l'info se trouvant dans le cookie."),"\n",r.createElement(n.p,null,"Quand nous g√©rons une session via des cookies, il n'est pas √©vident de bien clore une session. Nous avons cr√©√© une nouvelle op√©ration de type ",r.createElement(n.strong,null,r.createElement(n.code,null,"GET /auths/logout"))," qui permet d'effacer les donn√©es de session d'un utilisateur."),"\n",r.createElement(n.p,null,"Il nous reste √† changer le m√©canisme d'autorisation.\nLes tokens ne seront plus re√ßus via un authorization header, mais via un cookie.",r.createElement(n.br),"\n","Nous allons donc mettre √† jour le middleware ",r.createElement(n.strong,null,r.createElement(n.code,null,"/utils/authorize"))," :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"13-16"},r.createElement(n.code,{className:"language-ts"},'import jwt from "jsonwebtoken";\nimport { readOneUserFromUsername } from "../services/users";\nimport { NextFunction, RequestHandler, Response } from "express";\nimport { AuthenticatedRequest, JwtPayload, User } from "../types";\n\nconst jwtSecret = "ilovemypizza!";\n\nconst authorize = (\n  req: AuthenticatedRequest,\n  res: Response,\n  next: NextFunction\n) => {\n  if (!req.session) {\n    return res.sendStatus(401);\n  }\n  const { token } = req.session;\n  if (!token) {\n    return res.sendStatus(401);\n  }\n\n  try {\n    const decoded = jwt.verify(token, jwtSecret) as JwtPayload;\n    const { username } = decoded;\n\n    const existingUser = readOneUserFromUsername(username);\n\n    if (!existingUser) {\n      return res.sendStatus(401);\n    }\n\n    req.user = existingUser; // request.user object is available in all other middleware functions\n    return next();\n  } catch (err) {\n    console.error("authorize: ", err);\n    return res.sendStatus(401);\n  }\n};\n\nconst isAdmin: RequestHandler = (req: AuthenticatedRequest, res, next) => {\n  const { username } = req.user as User;\n\n  if (username !== "admin") {\n    return res.sendStatus(403);\n  }\n  return next();\n};\n\nexport { authorize, isAdmin };\n')),"\n",r.createElement(n.h1,null,r.createElement(c,null," üç¨ Test via REST Client d'une RESTful API attendant des cookies ")),"\n",r.createElement(n.p,null,"Il nous reste √† tester nos requ√™tes via REST Client."),"\n",r.createElement(n.p,null,"Il n'y a pas de nouvelles notions √† apprendre pour utiliser REST Client avec des cookies : le comportement par d√©faut de REST Client, lorsqu'un cookie est renvoy√© dans une r√©ponse, est d'inclure ce cookie dans chaque requ√™te vers la m√™me origine."),"\n",r.createElement(n.p,null,"D√®s lors, pour tester l'API, il suffit d'enlever tous les authorization headers et de rajouter une requ√™te pour tester l'effacement d'une session."),"\n",r.createElement(n.p,null,"Veuillez tester les requ√™tes √† l'aide de ",r.createElement(n.strong,null,r.createElement(n.code,null,"/REST Client/pizzas.http"))," :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-http"},'######### NORMAL OPERATION  ###########\n\n### Read all pizzas\nGET http://localhost:3000/pizzas\n\n### Read all pizzas with File variable\n@baseUrl = http://localhost:3000\nGET {{baseUrl}}/pizzas\n\n### Read all pizzas sorted by title (ascending)\nGET {{baseUrl}}/pizzas/?order=+title\n\n### Read all pizzas sorted by title (descending)\nGET {{baseUrl}}/pizzas/?order=-title\n\n### Read pizza identified by 2\nGET {{baseUrl}}/pizzas/2\n\n### Create a pizza by using the admin account\n#### First login as the admin\nPOST {{baseUrl}}/auths/login\nContent-Type: application/json\n\n{\n    "username":"admin",\n    "password":"admin"\n}\n\n#### Create a pizza with the admin token\nPOST {{baseUrl}}/pizzas\nContent-Type: application/json\n\n{\n    "title":"Magic Green",\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\n}\n\n### Delete pizza identified by 2 with the admin token\nDELETE {{baseUrl}}/pizzas/2\n\n### Update the pizza identified by 6 with the admin token\nPATCH {{baseUrl}}/pizzas/6\nContent-Type: application/json\n\n{\n    "title":"Magic Green 2"\n}\n\n\n######### ERROR OPERATION  ###########\n\n### 1. Create a pizza without a token\nPOST {{baseUrl}}/pizzas\nContent-Type: application/json\n\n{\n    "title":"Magic Green",\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\n}\n\n### 2. Create a pizza without being the admin, use manager account\n#### 2.1 First login as the manager\nPOST {{baseUrl}}/auths/login\nContent-Type: application/json\n\n{\n    "username":"manager",\n    "password":"manager"\n}\n\n#### 2.2 Try to create a pizza with the manager token\nPOST {{baseUrl}}/pizzas\nContent-Type: application/json\n\n{\n    "title":"Magic Green",\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\n}\n\n### Read pizza which does not exists\nGET {{baseUrl}}/pizzas/100\n\n### Create a pizza which lacks a property\nPOST {{baseUrl}}/pizzas\nContent-Type: application/json\n\n{\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\n}\n\n### Create a pizza without info for a property\nPOST {{baseUrl}}/pizzas\nContent-Type: application/json\n\n{\n    "title":"",\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\n}\n\n### Update for a pizza which does not exist\nPATCH {{baseUrl}}/pizzas/200\nContent-Type: application/json\n\n{\n    "title":"Magic Green 2"\n}\n\n### Update for a pizza which does not provide any info for a property\nPATCH {{baseUrl}}/pizzas/1\n\nContent-Type: application/json\n\n{\n    "title":"Magic Green 2",\n    "content":""\n}\n')),"\n",r.createElement(n.p,null,"Veuillez mettre √† jour ",r.createElement(n.strong,null,r.createElement(n.code,null,"/REST Client/auths.http"))," pour tester ",r.createElement(n.strong,null,r.createElement(n.code,null,"GET /auths/logout"))," :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-http"},"### Logout any user\nGET {{baseUrl}}/auths/logout\n")),"\n",r.createElement(n.p,null,"Pour ajouter une pizza, il suffit juste :"),"\n",r.createElement(n.ol,null,"\n",r.createElement(n.li,null,"De loguer l'admin."),"\n",r.createElement(n.li,null,"De cr√©er une nouvelle pizza ; le cookie est automatiquement envoy√©."),"\n"),"\n",r.createElement(n.p,null,"Admettons que vous souhaitez tester l'ajout d'une pizza sans envoyer de token :"),"\n",r.createElement(n.ol,null,"\n",r.createElement(n.li,null,"Lancez l'op√©ration de logout (",r.createElement(n.strong,null,r.createElement(n.code,null,"GET /auths/logout")),") ; le cookie renvoy√© ne contient pas de donn√©es de session ;"),"\n",r.createElement(n.li,null,"Tentez la cr√©ation d'une pizza qui renverra un code ",r.createElement(n.strong,null,r.createElement(n.code,null,"401 Unauthorized")),"."),"\n"),"\n",r.createElement(n.p,null,"En cas de souci, vous pouvez utiliser le code du tutoriel ",r.createElement(n.a,{href:"https://github.com/e-vinci/ts-demos/tree/main/back/api/cookies"},"cookies"),"."))}var s=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?r.createElement(n,e,r.createElement(a,e)):a(e)};function o(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}var u=t(4160),i=t(5583),c=t(5679),d=t(307),m=t(7410),p=t(9523),E=t(8075),g=t(9063),h=t(1631),f=t(5772),v=t(2770),b=t(7008),y=t(9771),z=t(1218),q=(t(5258),t(9394)),k=t(4579),w=t(7743),T=t(9256),P=t(6488),j=t(5175),A=t(6387),S=t(6044),U=t(4804);const x={Link:u.Link,Image:c.Z,Section:d.Z,Content:m.Z,Background:p.Z,SectionHeader:E.Z,SectionFooter:g.Z,PageHeader:h.Z,CodeBlock:v.Z,LinkFile:b.Z,ScrollableImage:y.Z,PublicProjectsView:z.Z,AuthenticatedBlock:q.Z,UnAuthenticatedBlock:k.Z,NestedMdxBlock:w.Z,YoutubeImage:T.Z,InternalPageMenu:P.Z,InternalPageMenuItem:j.Z,InternalPageTitle:A.Z,PathViewer:S.k,PathViewerItem:S.F,DownloadGitFolder:U.Z};function I(e){var n,t,a,s,o;let{data:{mdx:u,allImages:c},children:d}=e;return x.PageHeader=(0,f.u)(h.Z,null==u?void 0:u.frontmatter),r.createElement(i.Z,Object.assign({},null!=u&&u.frontmatter?{frontmatter:u.frontmatter}:{},null!=u&&null!==(n=u.frontmatter)&&void 0!==n&&n.navbarExtraStyles?{navbarExtraStyles:u.frontmatter.navbarExtraStyles}:{},null!=u&&null!==(t=u.frontmatter)&&void 0!==t&&t.headerImage?{headerImage:u.frontmatter.headerImage}:{},null!=u&&null!==(a=u.frontmatter)&&void 0!==a&&a.featuredImage?{featuredImage:u.frontmatter.featuredImage}:{},null!=u&&null!==(s=u.frontmatter)&&void 0!==s&&s.title?{pageTitle:u.frontmatter.title}:{},c&&c.length>0?{allImages:c}:{}),r.createElement(l.Zo,{components:x},r.createElement("div",{className:null!=u&&null!==(o=u.frontmatter)&&void 0!==o&&o.autoMargin?"page page--auto-margin ":"page"},d)))}function R(e){return r.createElement(I,e,r.createElement(s,e))}}}]);
//# sourceMappingURL=component---src-templates-mdx-pages-js-content-file-path-src-mdx-pages-part-3-auths-api-fr-mdx-04805aea2d70ffa7d3dc.js.map