"use strict";(self.webpackChunkmyjscourse=self.webpackChunkmyjscourse||[]).push([[6477],{5183:function(e,n,t){t.r(n),t.d(n,{default:function(){return w}});var a=t(3905),l=t(7294);function r(e){const n=Object.assign({h1:"h1",p:"p",strong:"strong",ul:"ul",li:"li",code:"code",br:"br",pre:"pre",h2:"h2",a:"a"},(0,a.ah)(),e.components),{InternalPageMenu:t,PathViewer:r,PathViewerItem:o,InternalPageMenuItem:i,InternalPageTitle:c}=n;return t||u("InternalPageMenu",!0),i||u("InternalPageMenuItem",!0),c||u("InternalPageTitle",!0),r||u("PathViewer",!0),o||u("PathViewerItem",!0),l.createElement(l.Fragment,null,l.createElement(n.h1,null,"f) Le routage des √©crans"),"\n",l.createElement(t,null,l.createElement(r,null,l.createElement(o,{to:"/"}," web2course "),l.createElement(o,{to:"/part2"}," Partie 2 "),l.createElement(o,{selected:!0}," f) Le routage des √©crans ")),l.createElement(i,null," Introduction au routing "),l.createElement(i,null," Navigation basique entre pages "),l.createElement(i,null," Mise en place de React Router "),l.createElement(i,null," Utilisation de useNavigation "),l.createElement(i,null," Nested routes "),l.createElement(i,null," URL dynamiques "),l.createElement(i,null," Exercice 2.10 : React Router de base "),l.createElement(i,null," Comment g√©rer l'√©tat avec React Router ? "),l.createElement(i,null," Utilisation d'un OutletContext "),l.createElement(i,null," Exercice 2.11 : √âtat avec un router "),l.createElement(i,null," Exercice 2.12 : Routes dynamiques ")),"\n",l.createElement(n.h1,null,l.createElement(c,null," Introduction au routing ")),"\n",l.createElement(n.p,null,"Lorsqu'on parle d'une IHM, nous souhaitons g√©n√©ralement afficher diff√©rents √©crans en r√©agissant aux actions des utilisateurs."),"\n",l.createElement(n.p,null,"Le routage (ou routing en anglais) est ce qui rend possible l'affichage de diff√©rents √©crans."),"\n",l.createElement(n.p,null,'Dans les applications "old school" de type ',l.createElement(n.strong,null,"Multi-Page-Application")," (",l.createElement(n.strong,null,"MPA"),"), pour changer de page, il faudrait :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Faire un clic sur un √©l√©ment qui permet de faire une requ√™te HTTP au serveur pour demander un page."),"\n",l.createElement(n.li,null,"Le browser fait la requ√™te HTTP de type GET au serveur."),"\n",l.createElement(n.li,null,"L'application serveur (le backend) s'occupe du rendu de l'HTML et le renvoie au browser (le client)."),"\n",l.createElement(n.li,null,"Le browser affiche cette page."),"\n"),"\n",l.createElement(n.p,null,"Dans les applications que nous allons d√©velopper dans ce cours, l'architecture est compl√®tement diff√©rente. Nous d√©veloppons des ",l.createElement(n.strong,null,"Single-Page-Applications")," (",l.createElement(n.strong,null,"SPA"),"), pour changer de page :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Il faut cliquer sur un √©l√©ment de la page permettant la navigation."),"\n",l.createElement(n.li,null,"Le JS ex√©cut√© dans le browser s'occupe de cr√©er l'illusion que l'on change de page en faisant lui-m√™me le rendu de la nouvelle page."),"\n",l.createElement(n.li,null,"Si des donn√©es sont n√©cessaires pour afficher la page, le JS ex√©cut√© dans le browser s'occupera de faire un \"fetch\" de celles-ci au format JSON (RESTful API) et g√©n√©rera dynamiquement l'HTML n√©cessaire."),"\n"),"\n",l.createElement(n.p,null,"Ainsi, dans une ",l.createElement(n.strong,null,"SPA"),", une seule page est charg√©e la toute premi√®re fois que l'on acc√®de au serveur : c'est ",l.createElement(n.code,null,"index.html")," et tous les assets associ√©s (scripts JS, les images, CSS, sons...). Par la suite, on va utiliser un router (qui se trouvera dans un script JS) qui s'occupera de faire du \"",l.createElement(n.strong,null,"Client Side Rendering"),"\" (rendu c√¥t√© client de l'HTML)."),"\n",l.createElement(n.p,null,"Dans nos applications ",l.createElement(n.code,null,"Vite + React + TS"),", c'est le code transpil√© du TS vers le JS qui s'occupera :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"d'acc√©der √† un container pr√©sent dans la repr√©sentation m√©moire des √©l√©ments HTML de la page (par exemple la ",l.createElement(n.code,null,"div#root"),")."),"\n",l.createElement(n.li,null,"de mettre √† jour la repr√©sentation m√©moire de ce container avec les √©l√©ments HTML attendu pour la page demand√©."),"\n"),"\n",l.createElement(n.p,null,"Ensuite, le browser n'aura plus qu'√† redessiner la page sur base de la nouvelle repr√©sentation m√©moire des √©l√©ments HTML de la page."),"\n",l.createElement(n.p,null,"Notons que dans une MPA, on parle de \"Server Side Rendering\", car c'est le backend qui est responsable de la g√©n√©ration de l'HTML ; cela se fait souvent √† l'aide d'un moteur de templating pour g√©n√©rer des views (par exemple via ",l.createElement(n.code,null,"Handlebars")," qui permet de g√©n√©rer des views dans une application ",l.createElement(n.code,null,"Node.js"),")."),"\n",l.createElement(n.h1,null,l.createElement(c,null," Navigation basique entre pages ")),"\n",l.createElement(n.p,null,"A notre stade actuel de connaissances, nous pourrions tr√®s facilement organiser la navigation entre plusieurs page, simplement √† l'aide d'une variable d'√©tat et des gestionnaires de clics."),"\n",l.createElement(n.p,null,"Pour ce tutoriel, nous allons partir d'une base de code minimaliste. Veuillez donc cr√©er un nouveau projet ",l.createElement(n.code,null,"Vite + React + TS")," nomm√© ",l.createElement(n.code,null,"routing"),".",l.createElement(n.br),"\n","Vous ne vous souvenez plus comment faire ? Voici la commande :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-bash"},"npm create vite@latest routing -- --template react-swc-ts\n")),"\n",l.createElement(n.p,null,"Veuillez remplacer le code de ",l.createElement(n.code,null,"App")," :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-tsx"},'import { useState } from "react";\n\nconst HomePage = () => <div>Home Page</div>;\nconst AboutPage = () => <div>About Page</div>;\nconst ContactPage = () => <div>Contact Page</div>;\n\nconst App = () => {\n  const [currentPage, setCurrentPage] = useState("Home");\n\n  const navigateTo = (page: string) => {\n    setCurrentPage(page);\n  };\n\n  const renderPage = () => {\n    switch (currentPage) {\n      case "Home":\n        return <HomePage />;\n      case "About":\n        return <AboutPage />;\n      case "Contact":\n        return <ContactPage />;\n      default:\n        return <HomePage />;\n    }\n  };\n\n  return (\n    <div>\n      <nav>\n        <button onClick={() => navigateTo("Home")}>Home</button>\n        <button onClick={() => navigateTo("About")}>About</button>\n        <button onClick={() => navigateTo("Contact")}>Contact</button>\n      </nav>\n      {renderPage()}\n    </div>\n  );\n};\n\nexport default App;\nexport { HomePage, AboutPage, ContactPage };\n')),"\n",l.createElement(n.p,null,"Nous avons donc ici d√©fini 3 composants React qui repr√©sentent 3 pages, et une fonction qui permet, lors d'un clic, d'afficher la page associ√©e au bouton."),"\n",l.createElement(n.p,null,"Veuillez ex√©cuter l'application."),"\n",l.createElement(n.p,null,"Tout fonctionne bien !"),"\n",l.createElement(n.p,null,"üí≠ Mais qu'est-ce qui nous manque ?"),"\n",l.createElement(n.p,null,"Voici ce qui fait d√©faut :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Si nous faisons un refresh de la page, nous perdons la page en cours. Par exemple, si nous sommes sur ",l.createElement(n.code,null,"ContactPage"),", nous serons redirig√© vers ",l.createElement(n.code,null,"HomePage"),"."),"\n",l.createElement(n.li,null,"Nous n'avons pas d'historique des pages visit√©es, nous ne pouvons pas revenir en arri√®re, ni en avant dans le temps."),"\n",l.createElement(n.li,null,"Nous n'avons pas une URL sp√©cifique pour chaque √©cran."),"\n"),"\n",l.createElement(n.p,null,"Nous allons donc mettre en place en routeur afin de b√©n√©ficier de ces fonctions manquantes."),"\n",l.createElement(n.h1,null,l.createElement(c,null," Mise en place de React Router ")),"\n",l.createElement(n.h2,null,"Introduction"),"\n",l.createElement(n.p,null,l.createElement(n.code,null,"React Router")," est une librairie qui fournit une belle solution pour g√©rer la navigation dans une application React."),"\n",l.createElement(n.p,null,"Sa documentation est disponible ici : ",l.createElement(n.a,{href:"https://reactrouter.com/en/main"},"https://reactrouter.com/en/main")),"\n",l.createElement(n.h2,null,"Installation de la librairie"),"\n",l.createElement(n.p,null,"Dans un premier temps, il faut donc installer la librairie :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-sh"},"npm i react-router-dom\n")),"\n",l.createElement(n.h2,null,"Mise en place de routes basiques"),"\n",l.createElement(n.p,null,"Dans un premier temps, nous allons voir comment cr√©er la configuration la plus simple d'un router. Veuillez mettre √† jour ",l.createElement(n.code,null,"/src/main.tsx")," :"),"\n",l.createElement(n.pre,{numbered:!0,highlighting:"5,7-20,24"},l.createElement(n.code,{className:"language-tsx"},'import React from "react";\nimport ReactDOM from "react-dom/client";\nimport { AboutPage, ContactPage, HomePage } from "./App.tsx";\nimport "./index.css";\nimport { RouterProvider, createBrowserRouter } from "react-router-dom";\n\nconst router = createBrowserRouter([\n  {\n    path: "/",\n    element: <HomePage />,\n  },\n  {\n    path: "/about",\n    element: <AboutPage />,\n  },\n  {\n    path: "/contact",\n    element: <ContactPage />,\n  },\n]);\n\nReactDOM.createRoot(document.getElementById("root")!).render(\n  <React.StrictMode>\n    <RouterProvider router={router}/>  \n  </React.StrictMode>\n);\n')),"\n",l.createElement(n.p,null,"Ici, nous avons donc ",l.createElement(n.code,null,"createBrowserRouter")," qui cr√©e une configuration pour nos 3 routes, et chaque route va afficher une page."),"\n",l.createElement(n.p,null,"Ensuite, nous utilisons le ",l.createElement(n.code,null,"RouterProvider")," pour fournir la configuration du routeur √† l'ensemble de l'application et pour permettre aux composants de l'application d'acc√©der au contexte du router."),"\n",l.createElement(n.p,null,"Pour cette premi√®re utilisation du router, nous n'allons pas tenter d'optimiser la navigation. Nous allons donc int√©grer √† chaque page une ",l.createElement(n.code,null,"NavBar"),".",l.createElement(n.br),"\n","Chaque √©l√©ment de navigation va utiliser ",l.createElement(n.code,null,"<Link>")," comme composant pour faire le lien avec les routes que nous avons configur√©es."),"\n",l.createElement(n.p,null,"Veuillez mettre √† jour le composant ",l.createElement(n.code,null,"App")," :"),"\n",l.createElement(n.pre,{numbered:!0,highlighting:"1,5-7"},l.createElement(n.code,{className:"language-tsx"},'import { Link } from "react-router-dom";\n\nconst NavBar = () => (\n  <nav>\n    <Link to="/">Home</Link>\n    <Link to="/about">About</Link>\n    <Link to="/contact">Contact</Link>\n  </nav>\n);\n\nconst HomePage = () => (\n  <div>\n    <NavBar />\n    <p>Home Page</p>\n  </div>\n);\nconst AboutPage = () => (\n  <div>\n    <NavBar />\n    <p>About Page</p>\n  </div>\n);\nconst ContactPage = () => (\n  <div>\n    <NavBar />\n    <p>Contact Page</p>\n  </div>\n);\n\nconst App = () => {\n  return <div></div>;\n};\n\nexport default App;\nexport { HomePage, AboutPage, ContactPage };\n')),"\n",l.createElement(n.p,null,"Veuillez lancer votre application et v√©rifier que tout fonctionne. Lorsque vous cliquez sur un lien, le router d√©tecte qu'il y a eu un changement d'√©tat, et ",l.createElement(n.code,null,"element")," dans la configuration du router est rappel√© pour la route associ√©e, amenant au render du composant."),"\n",l.createElement(n.h1,null,l.createElement(c,null," Utilisation de useNavigation ")),"\n",l.createElement(n.p,null,"Si l'on souhaite se rapprocher du design initial, nous pouvons utiliser le hook ",l.createElement(n.code,null,"useNavigation")," qui offre une fonction pour naviguer vers une nouvelle route."),"\n",l.createElement(n.p,null,"Veuillez mettre ",l.createElement(n.code,null,"App")," √† jour :"),"\n",l.createElement(n.pre,{numbered:!0,highlighting:"1,7-9"},l.createElement(n.code,{className:"language-tsx"},'import { useNavigate } from "react-router-dom";\n\nconst NavBar = () => {\n  const navigate = useNavigate();\n  return (\n    <nav>\n      <button onClick={() => navigate("/")}>Home</button>\n      <button onClick={() => navigate("/about")}>About</button>\n      <button onClick={() => navigate("/contact")}> Contact</button>\n    </nav>\n  );\n};\n\nconst HomePage = () => (\n  <div>\n    <NavBar />\n    <p>Home Page</p>\n  </div>\n);\nconst AboutPage = () => (\n  <div>\n    <NavBar />\n    <p>About Page</p>\n  </div>\n);\nconst ContactPage = () => (\n  <div>\n    <NavBar />\n    <p>Contact Page</p>\n  </div>\n);\n\nconst App = () => {\n  return <div></div>;\n};\n\nexport default App;\nexport { HomePage, AboutPage, ContactPage };\n')),"\n",l.createElement(n.p,null,"Voila, nous avons un design qui ressemble au design initial.",l.createElement(n.br),"\n","N'h√©sitez pas √† tester le router :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Faites un reload quand vous √™tes dans la ",l.createElement(n.code,null,"ContactPage")," pour voir que vous y restez bien."),"\n",l.createElement(n.li,null,'Naviguez sur plusieurs pages, puis utiliser les fonctionnalit√©s "Back" and "Forward" pour voyager dans l\'historique de votre Browser.'),"\n",l.createElement(n.li,null,"V√©rifiez bien que l'URL dans le browser correspond bien √† la page demand√©e."),"\n"),"\n",l.createElement(n.p,null,"üí≠ Est-ce qu'il n'y a pas quelque chose qui vous d√©range dans la solution actuelle du layout de nos pages ?"),"\n",l.createElement(n.p,null,"Actuellement, nous int√©grons une ",l.createElement(n.code,null,"NavBar")," dans chaque page. Cela signifie qu'√† chaque navigation d'une page √† une autre, c'est l'enti√®ret√© de la page qui doit √™tre rendue, y compris les √©l√©ments de la ",l.createElement(n.code,null,"Navbar"),", qui pourtant ne changent pas !"),"\n",l.createElement(n.p,null,"Il serait int√©ressant de pouvoir d√©finir un layout de tout ce qui devrait √™tre rendu qu'une seule fois dans notre page, comme par exemple une ",l.createElement(n.code,null,"Navbar"),"."),"\n",l.createElement(n.p,null,'Pour ce faire, nous allons voir les "nested routes".'),"\n",l.createElement(n.h1,null,l.createElement(c,null," Nested routes ")),"\n",l.createElement(n.p,null,'Il est possible de d√©finir une route parent, √ßa serait la route "racine" ici, pour afficher le squelette de nos pages.'),"\n",l.createElement(n.p,null,'Ensuite, nous afficherons des routes "enfants" au sein de la route "parent". Pour indiquer o√π les routes "enfants" devront s\'afficher chez le "parent", nous utiliserons un ',l.createElement(n.code,null,"<Outlet>"),"."),"\n",l.createElement(n.p,null,"Voici comment d√©finir la route ",l.createElement(n.code,null,"/")," pour le squelette de l'application qui se trouvera dans ",l.createElement(n.code,null,"App"),', puis les 3 routes "enfants" pour les 3 pages (veuillez mettre √† jour le router au sein de ',l.createElement(n.code,null,"main.tsx"),") :"),"\n",l.createElement(n.pre,{numbered:!0,highlighting:"3-18"},l.createElement(n.code,{className:"language-tsx"},'const router = createBrowserRouter([\n  {\n    path: "/",\n    element: <App />,\n    children: [\n      {\n        path: "",\n        element: <HomePage />,\n      },\n      {\n        path: "about",\n        element: <AboutPage />,\n      },\n      {\n        path: "contact",\n        element: <ContactPage />,\n      },\n    ],\n  },\n]);\n')),"\n",l.createElement(n.p,null,"Il ne nous reste plus qu'√† mettre √† jour ",l.createElement(n.code,null,"App")," pour int√©grer le ",l.createElement(n.code,null,"Outlet")," et pour enlever l'appel de chaque page √† la ",l.createElement(n.code,null,"NavBar")," :"),"\n",l.createElement(n.pre,{numbered:!0,highlighting:"1,15-17,21-22"},l.createElement(n.code,{className:"language-tsx"},'import { Outlet, useNavigate } from "react-router-dom";\n\nconst NavBar = () => {\n  const navigate = useNavigate();\n\n  return (\n    <nav>\n      <button onClick={() => navigate("/")}>Home</button>\n      <button onClick={() => navigate("/about")}>About</button>\n      <button onClick={() => navigate("/contact")}> Contact</button>\n    </nav>\n  );\n};\n\nconst HomePage = () => <p>Home Page</p>;\nconst AboutPage = () => <p>About Page</p>;\nconst ContactPage = () => <p>Contact Page</p>;\n\nconst App = () => (\n  <div>\n    <NavBar />\n    <Outlet />\n  </div>\n);\n\nexport default App;\nexport { HomePage, AboutPage, ContactPage };\n')),"\n",l.createElement(n.p,null,"Nous avons l√† un code bien propre, et une navigation parfaitement fonctionnelle !",l.createElement(n.br),"\n","Il est √† noter que le code serait encore plus simple si nous utilisions le composant ",l.createElement(n.code,null,"Link")," de la librairie (il suffirait de le styler pour qu'il ressemble √† un bouton)."),"\n",l.createElement(n.h1,null,l.createElement(c,null," URL dynamiques ")),"\n",l.createElement(n.p,null,"Parfois, il est int√©ressant qu'une m√™me composant soit appel√© sur toute une famille de routes."),"\n",l.createElement(n.p,null,"Par exemple, dans le composant ",l.createElement(n.code,null,"AboutPage"),", nous souhaitons afficher une liste d'utilisateurs.  Lorsque nous cliquons sur une utilisatrice ou un utilisateur, nous souhaitons faire appel √† un nouveau composant ",l.createElement(n.code,null,"UserPage")," qui permettra d'afficher sa page associ√©e avec comme url : ",l.createElement(n.code,null,"/users/:userId"),"."),"\n",l.createElement(n.p,null,"Veuillez mettre √† jour le composant ",l.createElement(n.code,null,"App")," pour cr√©er la ",l.createElement(n.code,null,"UserPage")," et mettre √† jour ",l.createElement(n.code,null,"AboutPage")," :"),"\n",l.createElement(n.pre,{numbered:!0,highlighting:"19-24,29-48,50-65"},l.createElement(n.code,{className:"language-tsx"},'import { Link, Outlet, useMatch, useNavigate } from "react-router-dom";\n\nconst NavBar = () => {\n  const navigate = useNavigate();\n\n  return (\n    <nav>\n      <button onClick={() => navigate("/")}>Home</button>\n      <button onClick={() => navigate("/about")}>About</button>\n      <button onClick={() => navigate("/contact")}> Contact</button>\n    </nav>\n  );\n};\n\nconst HomePage = () => <p>Home Page</p>;\nconst AboutPage = () => (\n  <div>\n    <h1>About Page</h1>\n    <h2>Authors:</h2>\n    {users.map((user) => (\n      <Link key={user.id} to={`/users/${user.id}`} style={{ display: "block" }}>\n        {user.name}\n      </Link>\n    ))}\n  </div>\n);\nconst ContactPage = () => <p>Contact Page</p>;\n\nconst users: User[] = [\n  {\n    id: 1,\n    name: "John Doe",\n    email: "john.doe@example.com",\n    phone: "123-456-7890",\n  },\n  {\n    id: 2,\n    name: "Jane Smith",\n    email: "jane.smith@example.com",\n    phone: "234-567-8901",\n  },\n  {\n    id: 3,\n    name: "James Brown",\n    email: "james.brown@example.com",\n    phone: "345-678-9012",\n  },\n];\n\nconst UserPage = () => {\n  const match = useMatch("/users/:userId");\n  const userId = match?.params.userId;\n  if (!userId) return <p>User not found</p>;\n\n  const user = users.find((user) => user.id.toString() === userId);\n  if (!user) return <p>User not found</p>;\n\n  return (\n    <div>\n      <h2>{user.name}</h2>\n      <p>Email: {user.email}</p>\n      <p>Phone: {user.phone}</p>\n    </div>\n  );\n};\n\nconst App = () => (\n  <div>\n    <NavBar />\n    <Outlet />\n  </div>\n);\n\nexport default App;\nexport { HomePage, AboutPage, ContactPage, UserPage };\n')),"\n",l.createElement(n.p,null,"Le composant ",l.createElement(n.code,null,"AboutPage")," contient des ",l.createElement(n.code,null,"Link")," qui pointent vers des URL qui sont ",l.createElement(n.code,null,"/users/1")," pour le premier user, ",l.createElement(n.code,null,"/users/2")," pour le user qui a l'id ",l.createElement(n.code,null,"2"),"..."),"\n",l.createElement(n.p,null,"Pour r√©cup√©rer cette id dans la page des utilisateurs (le composant ",l.createElement(n.code,null,"UserPage"),"), nous utilisons le hook ",l.createElement(n.code,null,'useMatch("/users/:userId")')," pour indiquer le segment dynamique de l'URL par une variable qui sera accessible via ",l.createElement(n.code,null,"match.params.userId"),"."),"\n",l.createElement(n.p,null,"Pour que tout cela fonctionne, il ne reste plus qu'√† configurer le router pour cette route dynamique. Veuillez mettre √† jour la configuration du router dans ",l.createElement(n.code,null,"/src/main.tsx")," :"),"\n",l.createElement(n.pre,{numbered:!0,highlighting:"18-21"},l.createElement(n.code,{className:"language-tsx"},'const router = createBrowserRouter([\n  {\n    path: "/",\n    element: <App />,\n    children: [\n      {\n        path: "",\n        element: <HomePage />,\n      },\n      {\n        path: "about",\n        element: <AboutPage />,\n      },\n      {\n        path: "contact",\n        element: <ContactPage />,\n      },\n      {\n        path: "users/:userId",\n        element: <UserPage />,\n      }\n    ],\n  },\n]);\n')),"\n",l.createElement(n.p,null,"Veuillez v√©rifier que tout fonctionne bien, que vous pouvez afficher la page de ",l.createElement(n.code,null,"James Brown"),"."),"\n",l.createElement(n.p,null,"üí≠ Il est √† noter que si nous n'avions pas voulu cr√©er une nouvelle page mais plut√¥t afficher le d√©tail d'un utilisateur dans le composant ",l.createElement(n.code,null,"AboutPage"),', nous aurions pour cr√©er une route "enfant" de ',l.createElement(n.code,null,"/about")," (en utilisant un ",l.createElement(n.code,null,"Outlet")," dans ",l.createElement(n.code,null,"AboutPage"),")."),"\n",l.createElement(n.p,null,"Si n√©cessaire, vous pouvez trouver le code associ√© √† ce tutoriel ici : ",l.createElement(n.a,{href:"https://github.com/e-vinci/ts-demos/tree/main/front/routing"},"routing"),"."),"\n",l.createElement(n.h1,null,l.createElement(c,null," Exercice 2.10 : React Router de base ")),"\n",l.createElement(n.p,null,"Dans vos exercices pr√©c√©dents, vous avez cr√©er une page pour afficher les films des cin√©mas UGC (",l.createElement(n.code,null,"/exercises/2.6"),"). Vous avez aussi cr√©√© une page pour afficher vos films pr√©f√©r√©s dans un autres exercice (",l.createElement(n.code,null,"/exercises/2.7"),")."),"\n",l.createElement(n.p,null,"Nous vous proposons ici de cr√©er une nouvelle application ",l.createElement(n.code,null,"iMovies")," qui s'occupera d'int√©grer ces contenus et de mettre en place la navigation."),"\n",l.createElement(n.p,null,"Veuillez partir d'une copie de l'exercice (",l.createElement(n.code,null,"/exercises/2.7"),") et y int√©grer le code de l'exercice (",l.createElement(n.code,null,"/exercises/2.6"),") dans un nouveau projet nomm√© ",l.createElement(n.code,null,"exercises/2.10-11-12")," pour afficher :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Un header & un footer pour chaque page"),"\n",l.createElement(n.li,null,"Une navbar (√† vous de choisir o√π la mettre)"),"\n",l.createElement(n.li,null,"Une nouvelle ",l.createElement(n.code,null,"HomePage")," qui donne quelques explications sur l'application ",l.createElement(n.code,null,"iMovies")," (pas besoin de la peaufiner, l'id√©e est juste de travailler la mise en place de la navigation)."),"\n",l.createElement(n.li,null,"Une ",l.createElement(n.code,null,"CinemaPage")," qui reprend simplement le contenu de l'exercice (",l.createElement(n.code,null,"/exercises/2.6"),")."),"\n",l.createElement(n.li,null,"Une ",l.createElement(n.code,null,"MovieListPage")," qui reprend la liste de vos films selon le design de l'exercise (",l.createElement(n.code,null,"/exercises/2.7"),")."),"\n"),"\n",l.createElement(n.p,null,"Une fois tout fonctionnel, veuillez faire un commit avec le message suivant : ",l.createElement(n.strong,null,l.createElement(n.code,null,"new:ex2.10")),"."),"\n",l.createElement(n.h1,null,l.createElement(c,null," Comment g√©rer l'√©tat avec React Router ? ")),"\n",l.createElement(n.p,null,"Il est possible que vous ayez remarqu√©, dans le code du router du tutoriel pr√©c√©dent, qu'il semble compliqu√©, voire impossible, de faire passer des variables d'√©tats & des fonctions pour mettre √† jour cet √©tat, entre routes..."),"\n",l.createElement(n.p,null,"Pour la pizzeria, l'IHM que nous avons d√©velopp√©e s'est termin√©e avec le code du tutoriel ",l.createElement(n.code,null,"ui-library"),". N√©anmoins, pour la suite du cours, nous ne souhaitons pas vous imposer d'utiliser des composants de ",l.createElement(n.code,null,"Material UI"),". D√®s lors, nous avons restructur√© le code pour avoir quelque chose de propre, qui contient :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"que du CSS sans composants ",l.createElement(n.code,null,"MUI"),";"),"\n",l.createElement(n.li,null,"deux pages : ",l.createElement(n.code,null,"HomePage")," & ",l.createElement(n.code,null,"AddPizzaPage")," ;"),"\n",l.createElement(n.li,null,"un router et une ",l.createElement(n.code,null,"NavBar")," pour assurer la navigation.\nCette nouvelle version de l'App se trouve dans le projet ",l.createElement(n.code,null,"routing-starter"),"."),"\n"),"\n",l.createElement(n.p,null,"Pour ce nouveau tutoriel, veuillez cr√©er un nouveau projet ",l.createElement(n.code,null,"routing-state")," sur base d'un copier/coller du projet ",l.createElement(n.a,{href:"https://github.com/e-vinci/ts-demos/tree/main/front/routing-starter"},"routing-starter"),l.createElement(n.code,null,"routing-starter"),". Attention, il est normal que votre projet ne s'ex√©cute pas car il manque la gestion de l'√©tat.",l.createElement(n.br),"\n","N'h√©sitez pas √† utiliser ce site pour t√©l√©charger le code du dossier routing-starter : ",l.createElement(n.a,{href:"https://download-directory.github.io/"},"https://download-directory.github.io/")),"\n",l.createElement(n.p,null,"Veuillez vous assurer que vous comprenez le code associ√© au routage des pages : ",l.createElement(n.code,null,"main.tsx"),", ",l.createElement(n.code,null,"App")," et ",l.createElement(n.code,null,"HomePage")," et ",l.createElement(n.code,null,"AddPizzaPage")," sont √† bien analyser."),"\n",l.createElement(n.p,null,"Pour g√©rer l'√©tat entre siblings (deux pages ici, l'√©quivalent de deux routes), nous avons appris pr√©c√©demment qu'il fallait :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"d√©clarer l'√©tat et des fonctions pour mettre √† jour cet √©tat au niveau du parent ;"),"\n",l.createElement(n.li,null,"passer cet √©tat & fonctions aux enfants (les pages ici) qui vont devoir l'utiliser."),"\n"),"\n",l.createElement(n.p,null,'Or ici, la relation "parent/enfant" est compliqu√©e, car :'),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"il y a un composant ",l.createElement(n.code,null,"<App>")," qui contient tout le squelette de l'application, pour les 2 pages de l'application ;"),"\n",l.createElement(n.li,null,"il y a un composant ",l.createElement(n.code,null,"<Outlet>")," qui s'occupe d'appeler les composants \"enfants\" (les pages) en fonction de la route."),"\n"),"\n",l.createElement(n.p,null,"Ainsi, il n'est pas vraiment possible de classiquement faire un \"drill\" des variables d'√©tat et des fonctions. On ne peut pas passer les variables d'√©tat, ainsi que les fonctions pour mettre √† jour cet √©tat, de ",l.createElement(n.code,null,"App")," vers ",l.createElement(n.code,null,"HomePage")," et ",l.createElement(n.code,null,"AddMoviePage"),"."),"\n",l.createElement(n.p,null,"Il existe plusieurs fa√ßon de g√©rer de mani√®re √©l√©gante l'√©tat de l'application. Ici, nous allons voir ce que React Router met √† notre disposition sans devoir utiliser une nouvelle librairie."),"\n",l.createElement(n.h1,null,l.createElement(c,null," Utilisation d'un OutletContext ")),"\n",l.createElement(n.p,null,'Dans une route "parent", nous allons d√©finir un contexte √† l\'aide du composant ',l.createElement(n.code,null,"Outlet"),'. Ce contexte peut √™tre n\'importe quelle donn√©e ou fonction que nous souhaitons partager avec les routes "enfants".'),"\n",l.createElement(n.p,null,'Dans une route "enfant", nous pouvons acc√©der au contexte en utilisant le hook ',l.createElement(n.code,null,"useOutletContext"),"."),"\n",l.createElement(n.p,null,"Commen√ßons par mettre √† jour ",l.createElement(n.code,null,"App"),' en y ajoutant la d√©finition et le passage du contexte aux routes "enfants" :'),"\n",l.createElement(n.pre,{numbered:!0,highlighting:"18-26,37"},l.createElement(n.code,{className:"language-tsx"},'const App = () => {\n  const [actionToBePerformed, setActionToBePerformed] = useState(false);\n  const [pizzas, setPizzas] = useState(defaultPizzas);\n\n  const addPizza = (newPizza: NewPizza) => {\n    const pizzaAdded = { ...newPizza, id: nextPizzaId(pizzas) };\n    setPizzas([...pizzas, pizzaAdded]);\n  };\n\n  const handleHeaderClick = () => {\n    setActionToBePerformed(true);\n  };\n\n  const clearActionToBePerformed = () => {\n    setActionToBePerformed(false);\n  };\n\n  const fullPizzaContext: PizzeriaContext = {\n    addPizza,\n    pizzas,\n    setPizzas,\n    actionToBePerformed,\n    setActionToBePerformed,\n    clearActionToBePerformed,\n    drinks,\n  };\n\n  return (\n    <div className="page">\n      <Header\n        title="We love Pizza"\n        version={0 + 1}\n        handleHeaderClick={handleHeaderClick}\n      />\n      <main>\n        <NavBar />\n        <Outlet context={fullPizzaContext} />\n      </main>\n      <Footer />\n    </div>\n  );\n};\n')),"\n",l.createElement(n.p,null,"Pour que TS soit OK au niveau des types, nous avons d√©fini un nouveau type dans ",l.createElement(n.code,null,"/src/types.ts")," :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-ts"},"interface PizzeriaContext {\n  pizzas: Pizza[];\n  setPizzas: (pizzas: Pizza[]) => void;\n  actionToBePerformed: boolean;\n  setActionToBePerformed: (actionToBePerformed: boolean) => void;\n  clearActionToBePerformed: () => void;\n  drinks: Drink[];\n  addPizza: (newPizza: NewPizza) => void;\n}\n\nexport type { Pizza, NewPizza, Drink, PizzeriaContext };\n")),"\n",l.createElement(n.p,null,"Veuillez importer ce nouveau type dans ",l.createElement(n.code,null,"App"),"."),"\n",l.createElement(n.p,null,"Maintenant, nous souhaitons mettre √† jour ",l.createElement(n.code,null,"HomePage")," pour r√©cup√©rer, via le hook ",l.createElement(n.code,null,"useOutletContext"),", le ",l.createElement(n.code,null,"PizzeriaContext")," :"),"\n",l.createElement(n.pre,{numbered:!0,highlighting:"2-7"},l.createElement(n.code,{className:"language-tsx"},'const HomePage = () => {\n  const {\n    actionToBePerformed,\n    clearActionToBePerformed,\n    pizzas,\n    drinks,\n  }: PizzeriaContext = useOutletContext();\n\n  return (\n    <>\n      <h1>Ma Pizzeria</h1>\n      <p>\n        Parce que nous aimons le JS/TS, vous pouvez cliquer sur le header pour\n        d√©marrer / stopper la musique ; )\n      </p>\n      <AudioPlayer\n        sound={sound}\n        actionToBePerformed={actionToBePerformed}\n        clearActionToBePerformed={clearActionToBePerformed}\n      />\n\n      <PizzaMenu pizzas={pizzas} />\n\n      <DrinkMenu title="Nos boissons" drinks={drinks} />\n    </>\n  );\n};\n')),"\n",l.createElement(n.p,null,"Puis, nous souhaitons aussi mettre √† jour ",l.createElement(n.code,null,"AddMoviePage")," pour r√©cup√©rer la fonction ",l.createElement(n.code,null,"addPizza")," du contexte :"),"\n",l.createElement(n.pre,null,l.createElement(n.code,{className:"language-tsx"},"const AddPizzaPage = () => {\n  const { addPizza }: PizzeriaContext = useOutletContext();\n")),"\n",l.createElement(n.p,null,"N'oubliez pas de faire l'import de ",l.createElement(n.code,null,"useOutletContext")," et du type ",l.createElement(n.code,null,"PizzeriaContext"),".\nUne fois les changements effectu√©s, vous devriez avoir une application pleinement fonctionnelle, avec un routing moderne et une gestion √©l√©gante de l'√©tat."),"\n",l.createElement(n.p,null,"Si n√©cessaire, vous pouvez trouver le code associ√© √† ce tutoriel ici : ",l.createElement(n.a,{href:"https://github.com/e-vinci/ts-demos/tree/main/front/routing-state"},"routing-state"),"."),"\n",l.createElement(n.h1,null,l.createElement(c,null," Exercice 2.11 : √âtat avec un router ")),"\n",l.createElement(n.p,null,"Veuillez continuer votre exercice pr√©c√©dent dans le projet existant et nomm√© ",l.createElement(n.code,null,"exercises/2.10-11-12")," en y int√©grant une ",l.createElement(n.code,null,"AddMoviePage")," qui permette d'ajouter un film √† la liste des films. Une fois un film ajout√©, l'utilisateur est automatiquement redirig√© vers la ",l.createElement(n.code,null,"MovieListPage"),"."),"\n",l.createElement(n.p,null,"Une fois tout fonctionnel, veuillez faire un commit avec le message suivant : ",l.createElement(n.strong,null,l.createElement(n.code,null,"new:ex2.11")),"."),"\n",l.createElement(n.h1,null,l.createElement(c,null," Exercice 2.12 : Routes dynamiques ")),"\n",l.createElement(n.p,null,"Veuillez continuer l'exercice pr√©c√©dent dans le projet existant et nomm√© ",l.createElement(n.code,null,"exercises/2.10-11-12"),"."),"\n",l.createElement(n.p,null,"Nous vous demandons :"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"De mettre √† jour la ",l.createElement(n.code,null,"HomePage")," afin qu'elle affiche une liste reprenant uniquement les titres de vos films favoris (sans d'autres infos associ√©es aux films telles que la description...)."),"\n",l.createElement(n.li,null,"Il doit √™tre possible de pouvoir cliquer sur le titre d'un de vos films favoris et de naviguer vers une nouvelle ",l.createElement(n.code,null,"MoviePage")," qui affichera toutes les infos de ce film-ci. Pour ce faire, vous devez ajouter un id √† vos films, et cette id doit √™tre visible dans l'URL quand les utilisateurs cliquent sur un titre donn√© dans la ",l.createElement(n.code,null,"HomePage"),"."),"\n"),"\n",l.createElement(n.p,null,"Une fois tout fonctionnel, veuillez faire un commit avec le message suivant : ",l.createElement(n.strong,null,l.createElement(n.code,null,"new:ex2.12")),"."))}var o=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?l.createElement(n,e,l.createElement(r,e)):r(e)};function u(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}var i=t(4160),c=t(5583),s=t(5679),m=t(307),d=t(7410),p=t(9523),g=t(8075),E=t(9063),v=t(1631),f=t(5772),P=t(2770),h=t(7008),b=t(9771),z=t(1218),q=(t(5258),t(9394)),x=t(4579),A=t(7743),C=t(9256),N=t(6488),k=t(5175),H=t(6387),I=t(6044);const B={Link:i.Link,Image:s.Z,Section:m.Z,Content:d.Z,Background:p.Z,SectionHeader:g.Z,SectionFooter:E.Z,PageHeader:v.Z,CodeBlock:P.Z,LinkFile:h.Z,ScrollableImage:b.Z,PublicProjectsView:z.Z,AuthenticatedBlock:q.Z,UnAuthenticatedBlock:x.Z,NestedMdxBlock:A.Z,YoutubeImage:C.Z,InternalPageMenu:N.Z,InternalPageMenuItem:k.Z,InternalPageTitle:H.Z,PathViewer:I.k,PathViewerItem:I.F};function R(e){var n,t,r,o,u;let{data:{mdx:i,allImages:s},children:m}=e;return B.PageHeader=(0,f.u)(v.Z,null==i?void 0:i.frontmatter),l.createElement(c.Z,Object.assign({},null!=i&&i.frontmatter?{frontmatter:i.frontmatter}:{},null!=i&&null!==(n=i.frontmatter)&&void 0!==n&&n.navbarExtraStyles?{navbarExtraStyles:i.frontmatter.navbarExtraStyles}:{},null!=i&&null!==(t=i.frontmatter)&&void 0!==t&&t.headerImage?{headerImage:i.frontmatter.headerImage}:{},null!=i&&null!==(r=i.frontmatter)&&void 0!==r&&r.featuredImage?{featuredImage:i.frontmatter.featuredImage}:{},null!=i&&null!==(o=i.frontmatter)&&void 0!==o&&o.title?{pageTitle:i.frontmatter.title}:{},s&&s.length>0?{allImages:s}:{}),l.createElement(a.Zo,{components:B},l.createElement("div",{className:null!=i&&null!==(u=i.frontmatter)&&void 0!==u&&u.autoMargin?"page page--auto-margin ":"page"},m)))}function w(e){return l.createElement(R,e,l.createElement(o,e))}}}]);
//# sourceMappingURL=component---src-templates-mdx-pages-js-content-file-path-src-mdx-pages-part-2-routing-fr-mdx-f38089b0782c408170d0.js.map